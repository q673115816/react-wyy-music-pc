{"version":3,"file":"516.47948d89.js","mappings":"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","sources":["webpack://wyy/./src/features/Look/socket.ts","webpack://wyy/./src/features/Look/Content.ts","webpack://wyy/./src/features/Look/getIP.ts","webpack://wyy/./src/features/Look/Look.tsx","webpack://wyy/./src/features/Look/Home/List.tsx","webpack://wyy/./src/features/Look/Home/Home.tsx","webpack://wyy/./src/features/Look/Live/Live.tsx","webpack://wyy/./src/features/Look/Room/Room.tsx","webpack://wyy/./src/features/Look/Router.tsx"],"sourcesContent":["import io from \"socket.io-client\";\n\nexport const LIVE_URL = process.env.LIVE_URL;\n\nconst socket = io(LIVE_URL, {\n  autoConnect: false,\n});\n\nsocket.on(\"create-success\", (data) => {\n  console.log(data);\n});\n\nsocket.on(\"join-success\", (data) => {\n  console.log(data);\n});\n\nsocket.on(\"disconnect-success\", (data) => {\n  console.log(data);\n});\n\nexport default socket;\n","import socket from \"./socket\";\n\nexport const SOCKET_CONNECT = \"SOCKET_CONNECT\";\nexport const SOCKET_DISCONNECT = \"SOCKET_DISCONNECT\";\nexport const SOCKET_DESKTOP_START = \"SOCKET_DESKTOP_START\";\nexport const SOCKET_DESKTOP_END = \"SOCKET_DESKTOP_END\";\nexport const SOCKET_USER_START = \"SOCKET_USER_START\";\nexport const SOCKET_USER_END = \"SOCKET_USER_END\";\nexport const SOCKET_PUSH_START = \"SOCKET_PUSH_START\";\nexport const SOCKET_PUSH_END = \"SOCKET_PUSH_END\";\n\nexport interface LookState {\n  status: {\n    connect: boolean;\n    deskTop: boolean;\n    user: boolean;\n    push: boolean;\n  };\n}\n\nexport const LookReducer = (draft: LookState, action: any) => {\n  switch (action.type) {\n    case SOCKET_CONNECT:\n      socket.connect();\n      draft.status.connect = true;\n      return;\n    case SOCKET_DISCONNECT:\n      socket.disconnect();\n      draft.status.connect = false;\n      return;\n    case SOCKET_DESKTOP_START:\n      draft.status.deskTop = true;\n      return;\n    case SOCKET_DESKTOP_END:\n      draft.status.deskTop = false;\n      return;\n    case SOCKET_USER_START:\n      draft.status.user = true;\n      return;\n    case SOCKET_USER_END:\n      draft.status.user = false;\n      return;\n    case SOCKET_PUSH_START:\n      socket.emit(\"create\", {\n        user: \"user\",\n        title: \"title\",\n      });\n      draft.status.push = true;\n      return;\n    case SOCKET_PUSH_END:\n      draft.status.push = false;\n      return;\n    default:\n      return draft;\n  }\n};\n\nexport const LookInitialState: LookState = {\n  status: {\n    connect: false,\n    deskTop: false,\n    user: false,\n    push: false,\n  },\n};\n","interface iIPs {\n  [key: string]: boolean;\n}\nexport default async (callback: () => void) => {\n  const localIP: iIPs = {};\n  const reg = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/;\n  // free stun server\n  const servers = { iceServers: [{ urls: \"stun:stun.xten.com\" }] };\n\n  const pc = new RTCPeerConnection(servers);\n\n  const handleCandidate = (candidate: string) => {\n    candidate.match(reg).forEach((ip) => {\n      console.log(ip);\n      localIP[ip] = true;\n    });\n  };\n  pc.createDataChannel(\"\");\n\n  pc.onicecandidate = (ice) => {\n    console.log(\"ice:\", ice);\n    if (ice.candidate) handleCandidate(ice.candidate.candidate);\n  };\n\n  const result = await pc.createOffer();\n  await pc.setLocalDescription(result);\n  const lines = pc.localDescription.sdp.split(\"\\n\");\n  lines.forEach((line) => {\n    if (line.indexOf(\"a=candidate:\") === 0) handleCandidate(line);\n  });\n  console.log();\n};\n","import React, { memo, useEffect, createContext } from \"react\";\nimport { useImmerReducer } from \"use-immer\";\nimport { Routes, Route, Outlet } from \"react-router-dom\";\nimport adapter from \"webrtc-adapter\";\nimport { useAppDispatch } from \"@/reducers/hooks\";\nimport {\n  LookInitialState,\n  LookReducer,\n  SOCKET_CONNECT,\n  SOCKET_DISCONNECT,\n} from \"./Content\";\nimport getIP from \"./getIP\";\n\nexport const LookContent = createContext<any>(null);\n\nexport default memo(function Base() {\n  const dispatch = useAppDispatch();\n  const [lookReducer, lookDispatch] = useImmerReducer(\n    LookReducer,\n    LookInitialState\n  );\n  useEffect(() => {\n    getIP();\n  }, []);\n  // useEffect(() => {\n  //   lookDispatch({ type: SOCKET_CONNECT });\n  //   return () => {\n  //     lookDispatch({ type: SOCKET_DISCONNECT });\n  //   };\n  // }, []);\n  return (\n    <LookContent.Provider value={{ lookReducer, lookDispatch }}>\n      <Outlet />\n    </LookContent.Provider>\n  );\n});\n","import React, { memo } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { iList } from \"./types\";\n\nexport default memo<{ list: iList }>(({ list }) => {\n  const { pathname } = useLocation();\n  return (\n    <div className={`grid grid-cols-3 gap-5`}>\n      {list.map(([key, options]) => (\n        <div key={key}>\n          <Link to={`${pathname}/${key}`}>\n            <img\n              className={`ui_aspect-ratio-16/9 cursor-pointer`}\n              loading={`lazy`}\n              src={options.banner}\n              alt=\"\"\n            />\n          </Link>\n          <Link to={`${pathname}/${key}`} className={`cursor-pointer`}>\n            {options.title}\n          </Link>\n          <div>\n            <Link to={`/`}>{options.user}</Link>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n});\n","import React, {\n  useState,\n  memo,\n  useRef,\n  useEffect,\n  useCallback,\n  MouseEventHandler,\n} from \"react\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport Loading from \"@/components/Loading\";\nimport Rea from \"react-error-boundary\";\nimport socket, { LIVE_URL } from \"../socket\";\nimport { iList } from \"./types\";\nimport LiveList from \"./List\";\n\nexport default memo(function Home() {\n  const [size, setSize] = useState(20);\n  const DomScroll = useRef(null);\n  const DomObserver = useRef(null);\n  const [list, setList] = useState<iList>([]);\n  // useInfinite(() => { setSize((prev) => prev + 20); }, DomScroll, DomObserver);\n\n  const { data, error, isLoading, isSuccess, status } = useQuery(\n    \"look\",\n    async () => {\n      const { data } = await axios\n        .get(`${LIVE_URL}/list`)\n        .then((res) => res.data);\n      return data;\n    }\n  );\n\n  return (\n    <div className=\"domLook overflow-auto max-h-full flex-auto\" ref={DomScroll}>\n      <div className=\"domLook_header ui_header\">\n        <span className=\"title h1\">LOOK直播</span>\n        <span className=\"text-gray-400 slogan ml-2\">在这里，看见音乐</span>\n        <Link\n          to={`my`}\n          className=\"ml-2 py-1 px-2 rounded bg-red-500 text-white\"\n        >\n          我的直播\n        </Link>\n        <a href=\"https://look.163.com/hot\" className=\"text-gray-400 ml-auto\">\n          更多 &gt;\n        </a>\n      </div>\n      <div className=\"px-8\">\n        {isLoading && (\n          <div className={`pt-48 flex-center`}>\n            <Loading />\n          </div>\n        )}\n        {isSuccess && <LiveList list={data} />}\n\n        <div ref={DomObserver} />\n      </div>\n    </div>\n  );\n});\n","import React, {\n  FC,\n  memo,\n  MouseEventHandler,\n  ReactNode,\n  useContext,\n  useRef,\n} from \"react\";\nimport classnames from \"classnames\";\nimport useLoginStatus, { handleLoginStatus } from \"@/hooks/useLoginStatus\";\nimport { LookContent } from \"@/features/Look/Look\";\nimport {\n  SOCKET_DESKTOP_END,\n  SOCKET_DESKTOP_START,\n  SOCKET_PUSH_END,\n  SOCKET_PUSH_START,\n  SOCKET_USER_END,\n  SOCKET_USER_START,\n} from \"../Content\";\n\n// 以下代码是从网上找的\n//=========================================================================================\n//如果返回的是false说明当前操作系统是手机端，如果返回的是true则说明当前的操作系统是电脑端\n\nfunction IsPC() {\n  const userAgentInfo = navigator.userAgent;\n  const Agents = [\n    \"Android\",\n    \"iPhone\",\n    \"SymbianOS\",\n    \"Windows Phone\",\n    \"iPad\",\n    \"iPod\",\n  ];\n  let flag = true;\n\n  for (let v = 0; v < Agents.length; v++) {\n    if (userAgentInfo.indexOf(Agents[v]) > 0) {\n      flag = false;\n      break;\n    }\n  }\n\n  return flag;\n}\n\n//如果返回true 则说明是Android  false是ios\nfunction is_android() {\n  const u = navigator.userAgent,\n    app = navigator.appVersion;\n  const isAndroid = u.indexOf(\"Android\") > -1 || u.indexOf(\"Linux\") > -1; //g\n  const isIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios终端\n  if (isAndroid) {\n    //这个是安卓操作系统\n    return true;\n  }\n\n  if (isIOS) {\n    //这个是ios操作系统\n    return false;\n  }\n}\n\ninterface iButtonProps {\n  onClick: MouseEventHandler;\n  status: boolean;\n}\n\nconst Button: FC<iButtonProps> = memo(({ onClick, children, status }) => {\n  return (\n    <button\n      type={\"button\"}\n      className={classnames(\n        `text-white rounded p-2`,\n        status ? \"bg-red-500\" : \"bg-blue-500\"\n      )}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n});\n\n/*\n * TODO\n *  1.信令系统\n *  2.摄像头叠加桌面，如基本直播\n * */\nexport default memo(() => {\n  const {\n    lookReducer: { status, socket },\n    lookDispatch,\n  } = useContext(LookContent);\n  const RefDeskTop = useRef<HTMLVideoElement>(null);\n  const RefDeskTopStream = useRef<MediaStream>(null);\n  const RefUser = useRef<HTMLVideoElement>(null);\n  const handleDeskTop: MouseEventHandler = () => {\n    if (status.deskTop)\n      handleMediaClose(RefDeskTop.current as HTMLVideoElement, () => {\n        lookDispatch({ type: SOCKET_DESKTOP_END });\n      });\n    else\n      handleMediaOpen(\n        RefDeskTop.current as HTMLVideoElement,\n        \"getDisplayMedia\",\n        () => {\n          lookDispatch({ type: SOCKET_DESKTOP_START });\n        }\n      );\n  };\n\n  const handleMediaOpen = (\n    ref: HTMLVideoElement,\n    targetFunction: \"getDisplayMedia\" | \"getUserMedia\",\n    success: () => void\n  ) => {\n    const stream = null;\n    const mediaStreamConstraints = {\n      video: true,\n      audio: true,\n    };\n\n    function gotDeskTopMediaStream(mediaStream: MediaStream) {\n      ref.srcObject = mediaStream;\n      // deskTopStream = mediaStream;\n      success && success();\n    }\n\n    navigator.mediaDevices[targetFunction](mediaStreamConstraints)\n      .then(gotDeskTopMediaStream)\n      .catch((err) => console.log(err));\n  };\n\n  const handleMediaClose = (ref: HTMLVideoElement, success: () => void) => {\n    const tracks = (ref.srcObject as MediaStream)?.getTracks();\n    tracks.forEach((track) => track.stop());\n    ref.srcObject = null;\n    success && success();\n  };\n\n  const handleUser: MouseEventHandler = () => {\n    if (status.user)\n      handleMediaClose(RefUser.current as HTMLVideoElement, () => {\n        lookDispatch({ type: SOCKET_USER_END });\n      });\n    else\n      handleMediaOpen(\n        RefUser.current as HTMLVideoElement,\n        \"getUserMedia\",\n        () => {\n          lookDispatch({ type: SOCKET_USER_START });\n        }\n      );\n  };\n\n  const handleSend: MouseEventHandler = () => {\n    if (status.push) handlePushClose();\n    else handlePushOpen();\n  };\n\n  const handlePushOpen = () => {\n    lookDispatch({ type: SOCKET_PUSH_START });\n    const pc = new RTCPeerConnection({});\n    pc.addEventListener(\"icecandidate\", (e) => {\n      const peerConnection = e.target;\n      const iceCandidate = e.candidate;\n\n      if (iceCandidate) {\n        const newIceCandidate = new RTCIceCandidate(iceCandidate);\n        // const otherPeer;\n      }\n    });\n  };\n  const handlePushClose = () => {\n    lookDispatch({ type: SOCKET_PUSH_END });\n  };\n\n  return (\n    <div className={`w-full h-full p-8 overflow-auto`}>\n      <div className={`flex`}>\n        <Button onClick={handleDeskTop} status={status.deskTop}>\n          桌面共享开关\n        </Button>\n        <Button onClick={handleUser} status={status.user}>\n          摄像头开关\n        </Button>\n        <Button onClick={handleSend} status={status.push}>\n          推送开关\n        </Button>\n      </div>\n      <div className={`flex flex-col`}>\n        <div className={``}>\n          <video className={`w-full`} ref={RefDeskTop} autoPlay playsInline />\n        </div>\n        <div className={\"\"}>\n          <video className={`w-full`} ref={RefUser} autoPlay playsInline />\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\n\nexport default memo(function Room() {\n  return (\n    <div className={`p-8`}>\n      <video className={`w-full`} autoPlay playsInline />\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Look from \"./Look\";\nimport Home from \"./Home\";\nimport Live from \"./Live\";\nimport Room from \"./Room\";\n\nconst Router = () => {\n  return (\n    <Routes>\n      <Route element={<Look />}>\n        <Route index element={<Home />} />\n        <Route path={`my`} element={<Live />} />\n        <Route path={`:id(\\\\d*)`} element={<Room />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["LIVE_URL","process","socket","io","autoConnect","on","data","console","log","SOCKET_DESKTOP_START","SOCKET_DESKTOP_END","SOCKET_USER_START","SOCKET_USER_END","SOCKET_PUSH_START","SOCKET_PUSH_END","LookReducer","draft","action","type","status","connect","deskTop","user","title","push","LookInitialState","callback","localIP","reg","pc","RTCPeerConnection","iceServers","urls","handleCandidate","candidate","match","forEach","ip","createDataChannel","onicecandidate","ice","createOffer","result","setLocalDescription","localDescription","sdp","split","line","indexOf","LookContent","createContext","memo","useAppDispatch","useImmerReducer","lookReducer","lookDispatch","useEffect","getIP","Provider","value","Outlet","list","pathname","useLocation","className","map","key","options","Link","to","loading","src","banner","alt","useState","DomScroll","useRef","DomObserver","useQuery","axios","then","res","isLoading","error","isSuccess","ref","href","Loading","Button","onClick","children","classnames","useContext","RefDeskTop","RefUser","handleMediaOpen","targetFunction","success","navigator","mediaDevices","video","audio","mediaStream","srcObject","catch","err","handleMediaClose","getTracks","track","stop","current","addEventListener","e","target","iceCandidate","RTCIceCandidate","autoPlay","playsInline","Routes","Route","element","Look","index","Home","path","Live","Room"],"sourceRoot":""}