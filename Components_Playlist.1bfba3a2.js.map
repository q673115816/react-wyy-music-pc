{"version":3,"file":"Components_Playlist.1bfba3a2.js","mappings":"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","sources":["webpack://wyy/./src/components/Letter/List.tsx","webpack://wyy/./src/components/Letter/Message.tsx","webpack://wyy/./src/components/Letter/Home.tsx","webpack://wyy/./src/components/Playlist/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport {\n  apiMsgPrivate,\n  apiMsgComments,\n  apiMsgForwards,\n  apiMsgNotices,\n} from '@/api';\nimport { setMsgPrivateHistory } from '@/reducers/letter/slice';\nimport { setMsgPrivate } from '@/reducers/common/slice';\nimport {useAppDispatch, useAppSelector} from \"@/reducers/hooks\";\n\nconst BuildList = {\n  song: (msg) => (\n    <span>\n      单曲：「\n      {msg.song.name}\n      {\n        msg.song.alias.length > 0\n        && (\n          <span className=\"text-gray-400\">\n            {`（${msg.song.alias.join(',')}）`}\n          </span>\n        )\n      }\n      」\n    </span>\n  ),\n  album: (msg) => (\n    <span>\n      专辑：「\n      {msg.album.name}\n      」\n    </span>\n  ),\n  topic: (msg) => (\n    <span>\n      专栏文章：「\n      {msg.topic.title}\n      」\n    </span>\n  ),\n  promotionUrl: (msg) => (\n    <span>\n      {msg.promotionUrl.text}\n      ：「\n      {msg.msg}\n      」\n    </span>\n  ),\n  picInfo: () => '[图片]',\n};\n\nconst BuildTransLastMsg = (msg = {}) => {\n  const keys = ['song', 'album', 'topic', 'promotionUrl', 'picInfo'];\n  for (const key of keys) {\n    if (msg[key]) return BuildList[key](msg);\n  }\n  return msg.msg;\n};\n\nconst navs = [\n  '私信',\n  '评论',\n  '@我',\n  '通知',\n];\n\nexport default () => {\n  const dispatch = useAppDispatch();\n  const {\n    isLogin, newMsgCount, msgs = [], comments = [], forwards = [], notices = [],\n  } = useAppSelector(({ common }) => common);\n  const [data, setData] = useState([]);\n  const [active, setActive] = useState('私信');\n\n  // 刷新数据\n  const handlePrivateInit = async (fn) => {\n    try {\n      const {\n        // newMsgCount,\n        msgs,\n        comments,\n        forwards,\n        notices,\n      } = await fn();\n      dispatch(setMsgPrivate({\n        msgs,\n        // newMsgCount,\n        comments,\n        forwards,\n        notices,\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeNav = (active) => {\n    setActive(active);\n    if (active === '私信') {\n      handlePrivateInit(apiMsgPrivate);\n      setData(msgs);\n    } else if (active === '评论') {\n      handlePrivateInit(apiMsgComments);\n      setData(comments);\n    } else if (active === '@我') {\n      handlePrivateInit(apiMsgForwards);\n      setData(forwards);\n    } else if (active === '通知') {\n      handlePrivateInit(apiMsgNotices);\n      setData(notices);\n    }\n  };\n\n  useEffect(() => {\n    // handlePrivateInit(apiMsgPrivate);\n    handleChangeNav(active);\n  }, []);\n  const handleSeeMsgPrivateHistory = async (uid, nickname) => {\n    dispatch(setMsgPrivateHistory({\n      uid,\n      nickname,\n      showMsgPrivateHistory: true,\n    }));\n  };\n\n  return (\n    <>\n      <div className=\"header flex items-baseline p-6 pb-b\">\n        <span className=\"title text-lg\">消息</span>\n        {\n          isLogin\n            ? <button type=\"button\" className=\"clear text-sm font-bold ml-auto ui_link\">一键已读</button>\n            : <span className=\"clear text-sm font-bold ml-auto ui_disabled\">一键已读</span>\n        }\n      </div>\n      <div className=\"nav flex-none flex m-auto w-min rounded-full border\">\n        {\n          navs.map((nav) => (\n            <button\n              onClick={() => handleChangeNav(nav)}\n              type=\"button\"\n              key={nav}\n              className={classNames('nav_link relative w-20 h-8 rounded-full', active === nav ? 'bg-gray-400 text-white' : 'hover:bg-gray-200')}\n            >\n              {nav}\n              {\n                nav === '私信' && <span className=\"lt_ico border border-white rounded-full leading-tight px-1 absolute top-0 right-0 bg-red-500 transform translate-x-1/2 -translate-y-1/2 z-10\">{newMsgCount}</span>\n              }\n            </button>\n          ))\n        }\n      </div>\n      <div className=\"list mt-3 overflow-auto max-h-full flex-auto\">\n        {data.length > 0 ? data.map((item) => (\n          <div className=\"item flex pr-4 pt-4 hover:bg-gray-100\" key={item.fromUser.userId}>\n            <div className=\"w-4 flex-center h-8\">\n              {item.newMsgCount > 0\n                && <i className=\"rounded-full w-1.5 h-1.5 bg-red-500\" />}\n            </div>\n            <Link to={`/user/${item.fromUser.userId}`} className=\"avatar w-8 h-8 relative flex-none\">\n              <img className=\"rounded-full\" src={item.fromUser.avatarUrl} alt=\"\" />\n              <i className=\"ico absolute right-0 bottom-0 w-3.5 h-3.5\">\n                <img\n                  className=\"ui_containimg\"\n                  src={item.fromUser.avatarDetail?.identityIconUrl}\n                  alt=\"\"\n                />\n              </i>\n            </Link>\n            <button\n              type=\"button\"\n              className=\"content border-b pb-3 flex-auto text-left ml-2.5 w-0\"\n              onClick={() => handleSeeMsgPrivateHistory(\n                item.fromUser.userId,\n                item.fromUser.nickname,\n              )}\n            >\n              <div className=\"top flex\">\n                <span className=\"ui_link\">\n                  {item.fromUser.nickname}\n                </span>\n                <span className=\"time ml-auto text-gray-400\">\n                  {dayjs(item.lastMsgTime).format('YYYY年MM月DD日')}\n                </span>\n              </div>\n              <div className=\"bottom truncate\">\n                {BuildTransLastMsg(JSON.parse(item.lastMsg))}\n              </div>\n            </button>\n          </div>\n        ))\n          : (\n            <div className=\"empty\">\n              暂无\n              {active}\n              内容\n            </div>\n          )}\n      </div>\n    </>\n  );\n};\n","import React, {\n  useEffect, useRef, useState,\n} from 'react';\nimport dayjs from 'dayjs';\nimport { transTextEmoji } from '@/common/faces';\nimport { apiSendText, apiMsgPrivateHistory } from '@/api';\nimport { setMsgPrivateHistory } from '@/reducers/letter/slice';\nimport { wordLength } from '@/common/utils';\nimport { Link } from 'react-router-dom';\nimport {\n  IconChevronLeft, IconPhoto, IconMoodSmile, IconPlayerPlay,\n} from '@tabler/icons';\nimport EmojiFaces from '@/components/EmojiFaces';\nimport Write from '@/components/Write';\nimport {useAppDispatch, useAppSelector} from \"@/reducers/hooks\";\n\nconst DomSong = ({ msg = {} }) => (\n  <button type=\"button\" className=\"share w-56 flex rounded p-2 bg-gray-50 mt-2\">\n    <div className=\"avatar flex-none w-10 h-10 rounded relative overflow-hidden\">\n      <img src={`${msg.song.album.picUrl}?param=100y100`} alt=\"\" />\n      <i className=\"absolute inset-0 m-auto w-6 h-6 bg-white bg-opacity-90 flex-center rounded-full ui_themeColor\">\n        <IconPlayerPlay size={14} className=\"fill-current\" />\n      </i>\n    </div>\n    <div className=\"content flex-auto w-0 pl-2.5 text-left\">\n      <div className=\"name truncate\">\n        {msg.song.name}\n        {msg.song.alias.length > 0\n          && (\n            <span className=\"text-gray-400\">\n              {`（${msg.song.alias.join(',')}）`}\n            </span>\n          )}\n      </div>\n      <div className=\"text-gray-400 artist truncate\">\n        {msg.song.artists.map((artist, index) => (\n          <span key={artist.name}>\n            {index > 0 && ' / '}\n            {artist.name}\n          </span>\n        ))}\n      </div>\n    </div>\n  </button>\n);\nconst DomAlbum = ({ msg = {} }) => (\n  <Link\n    to={`/playlist/album/${msg.album.id}`}\n    className=\"share flex rounded p-2 bg-gray-50 mt-2 w-56\"\n  >\n    <button\n      type=\"button\"\n      className=\"avatar flex-none w-10 h-10 rounded relative overflow-hidden group\"\n    >\n      <img src={`${msg.album.picUrl}?param=100y100`} alt=\"\" />\n      <i className=\"absolute opacity-0 group-hover:opacity-100 inset-0 m-auto w-6 h-6 bg-white bg-opacity-90 flex-center rounded-full ui_themeColor\">\n        <IconPlayerPlay\n          size={14}\n          className=\"fill-current\"\n        />\n      </i>\n    </button>\n    <div className=\"content flex-auto w-0 pl-2.5 text-left\">\n      <div className=\"name truncate\">\n        {msg.album.name}\n        {msg.album.alias.length > 0\n          && (\n            <span className=\"text-gray-400\">\n              {`（${msg.album.alias.join(',')}）`}\n            </span>\n          )}\n      </div>\n      <div className=\"text-gray-400 artist truncate\">\n        {msg.album.artist.name}\n      </div>\n    </div>\n  </Link>\n);\n\nconst DomCircle = ({ msg = {} }) => (\n  <div>云圈</div>\n);\n\nconst DomPromotion = ({ msg = {} }) => (\n  <a href={msg.promotion.url} className=\"embed\">\n    <div className=\"cover\">\n      <img className=\"\" src={msg.promotion.coverUrl} alt=\"\" />\n    </div>\n    <div className=\"promotion text-gray-400\">\n      {msg.promotion.title}\n    </div>\n  </a>\n);\n\nconst DomImage = ({ msg = {} }) => (\n  <div className=\"img\">\n    <img src={msg.picInfo.picUrl} className=\"\" alt=\"\" />\n  </div>\n);\n\nconst DomMsg = ({ msg = {} }) => transTextEmoji(msg.msg);\n\nconst DomContent = ({ msg = {} }) => {\n  const { type } = msg;\n  if (type === 16) return <DomImage msg={msg} />;\n  return (\n    <>\n      {transTextEmoji(msg.msg)}\n      {type === 1 && <DomSong msg={msg} />}\n      {type === 2 && <DomAlbum msg={msg} />}\n    </>\n  );\n};\n\nconst DomMsgLeft = ({ msg = {} }) => (\n  <div className=\"flex\">\n    <div className=\"w-60 flex\">\n      <div className=\"rounded-lg rounded-tl-none bg-blue-50 p-3 select-text\">\n        <DomContent msg={msg} />\n      </div>\n    </div>\n  </div>\n);\n\nconst DomMsgRight = ({ msg = {} }) => (\n  <div className=\"flex\">\n    <div className=\"ml-auto w-60 flex\">\n      <div className=\"ml-auto rounded-lg rounded-br-none bg-blue-50 p-3 select-text\">\n        <DomContent msg={msg} />\n      </div>\n    </div>\n  </div>\n);\n\nexport default () => {\n  const dispatch = useAppDispatch();\n  const history = useRef();\n\n  const {\n    uid, hint, nickname, privatMsgs,\n  } = useAppSelector(({ letter }) => letter);\n\n  const { profile } = useAppSelector(({ account }) => account);\n\n  const [visibility, setVisibility] = useState(false);\n  const [value, setValue] = useState('');\n  // const [privatMsgs, setPrivateMsgs] = useState([]);\n\n  const clickface = (face) => {\n    setValue(value + face);\n  };\n\n  const handleGetMsgPrivateHistory = async () => {\n    try {\n      const { hint, msgs = [] } = await apiMsgPrivateHistory({ uid });\n      // setPrivateMsgs(msgs.reverse());\n      dispatch(setMsgPrivateHistory({\n        hint,\n        privatMsgs: msgs.reverse(),\n      }));\n      history.current.scrollTo(0, history.current.scrollHeight);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSend = async () => {\n    try {\n      const { newMsgs = [] } = await apiSendText({\n        user_ids: uid,\n        msg: value,\n      });\n      dispatch(setMsgPrivateHistory({\n        privatMsgs: newMsgs.reverse(),\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = () => {\n    const length = wordLength(value);\n    if (length <= 200) {\n      handleSend();\n      setValue('');\n    } else {\n      console.log('to long');\n    }\n  };\n\n  useEffect(() => {\n    handleGetMsgPrivateHistory();\n  }, [uid]);\n\n  return (\n    <>\n      <div className=\"topbar relative text-center text-sm flex-center\" style={{ height: 50 }}>\n        <button\n          type=\"button\"\n          className=\"back absolute inset-y-0 left-0 p-2.5 flex-center ui_text_gray_hover\"\n          onClick={() => dispatch(setMsgPrivateHistory({ showMsgPrivateHistory: false }))}\n        >\n          <IconChevronLeft size={22} />\n        </button>\n        <span>{nickname}</span>\n      </div>\n      <div className=\"history overflow-auto max-h-full flex-auto px-5\" ref={history}>\n        {\n          privatMsgs\n            .map((item) => (\n              <div className=\"item mt-5\" key={item.id}>\n                <div className=\"time text-gray-400\">\n                  {dayjs(item.time).format('YYYY年MM月DD日 HH:mm')}\n                </div>\n                {item.toUser.userId === profile.userId\n                  ? (\n                    <div className=\"msg flex justify-start\">\n                      <div className=\"avatar flex-none mr-4 rounded-full overflow-hidden w-8 h-8\">\n                        <img\n                          className=\"\"\n                          src={item.fromUser.avatarUrl}\n                          alt=\"\"\n                        />\n                      </div>\n                      <DomMsgLeft msg={JSON.parse(item.msg)} />\n                    </div>\n                  )\n                  : <DomMsgRight msg={JSON.parse(item.msg)} />}\n              </div>\n            ))\n        }\n        {hint && <div className=\"hint\">{hint}</div>}\n      </div>\n      <div className=\"feedback p-3\">\n        <Write {...{\n          value, setValue, length: 200, placeholder: `回复 ${nickname}`,\n        }}\n        />\n        <div className=\"actions flex mt-2.5\">\n          <div className=\"left relative\">\n            {\n              visibility\n              && (\n                <div className=\"-translate-x-3 -translate-y-1/2 absolute faces right-full top-1/2 transform\">\n                  <EmojiFaces {...{ handleHide: () => setVisibility(false), clickface }} />\n                </div>\n              )\n            }\n            <button type=\"button\" className=\"action\" onClick={() => setVisibility(!visibility)}>\n              <IconMoodSmile size={24} stroke={1.4} />\n            </button>\n            <button type=\"button\" className=\"action\">\n              <IconPhoto size={24} stroke={1.4} />\n            </button>\n          </div>\n          <button type=\"button\" className=\"ml-auto border px-4 h-8 rounded-full\" onClick={handleSubmit}>\n            发送\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { setMsgPrivateHistory } from '@/reducers/letter/slice';\nimport DomList from './List';\nimport DomMessage from './Message';\nimport './style.scss';\nimport {useAppDispatch, useAppSelector} from \"@/reducers/hooks\";\n\nexport default () => {\n  const { showMsgPrivateHistory } = useAppSelector(({ letter }) => letter);\n  const { popupStatus } = useAppSelector(({ mask }) => mask);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => () => {\n    dispatch(setMsgPrivateHistory({\n      showMsgPrivateHistory: false,\n    }));\n  }, []);\n  if (popupStatus !== 'letter') return null;\n  return (\n    <div id=\"privateLetter\" className=\"flex flex-col absolute z-40\">\n      {\n        showMsgPrivateHistory\n          ? <DomMessage />\n          : <DomList />\n      }\n    </div>\n  );\n};\n","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport {\n  IconFolderPlus,\n  IconLink,\n  IconPlayerPlay,\n  IconPlayerPause,\n} from '@tabler/icons';\nimport { setAudioPlaylistClear } from '@/reducers/audio/slice';\nimport { setPopupPlaylistToggle } from '@/reducers/mask/slice';\nimport DomName from '@/components/Table/Name';\nimport DomMenuCreate from '@/components/MenuCreate';\nimport './style.scss';\n\nconst Empty = () => {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"empty w-min m-auto pt-20 whitespace-nowrap\">\n      <div className=\"text-gray-400 text-sm text\">\n        您还没添加任何歌曲！\n      </div>\n      <div className=\"text-gray-400 mt-6\">\n        去首页\n        <Link\n          to=\"/\"\n          className=\"ui_text_black_hover underline\"\n          onClick={() => dispatch(setPopupPlaylistToggle({}))}\n        >\n          发现音乐\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nconst DomList = ({ list = [], currentId }) => {\n  if (list.length === 0) return <Empty />;\n  const { running } = useSelector(({ audio }) => audio);\n  return (\n    <div>\n      {\n        list.map((item, index) => (\n          <DomMenuCreate\n            schema={[\n              ['评论',\n                '播放'],\n              ['收藏到歌单',\n                '分享',\n                '复制链接',\n                '不感兴趣',\n                '下载'],\n            ]}\n            type=\"song\"\n            item={item}\n            key={item.id}\n            tabIndex=\"2\"\n            className={classNames('flex items-center hover:bg-gray-100 focus:bg-gray-200 focus:outline-none h-9 group ', { 'bg-gray-50': index % 2 === 1, ui_themeColor: item.id === currentId })}\n          >\n            <div className=\"w-6 flex-center flex-none\">\n              {item.id === currentId\n                && (running ? <IconPlayerPlay className=\"fill-current ui_themeColor\" size={12} />\n                  : <IconPlayerPause size={12} className=\"fill-current ui_themeColor\" stroke={1} />)\n              }\n            </div>\n            <div className=\"name flex-auto w-0\">\n              <DomName item={item} />\n            </div>\n            <div className=\"w-24 px-1 flex-none truncate text-gray-500 group-hover:text-black\">\n              {item.ar.map((artist, index) => (\n                <span key={artist.id}>\n                  {index > 0 && ' / '}\n                  <Link to={`/artist/${artist.id}`}>\n                    {artist.name}\n                  </Link>\n                </span>\n              ))}\n            </div>\n            <div className=\"w-8 px-1 flex-none\">\n              <Link to=\"/\">\n                <IconLink size={16} stroke={1} />\n              </Link>\n            </div>\n            <div className=\"w-16 px-1 flex-none text-gray-300 group-hover:text-black\">\n              {dayjs(item.dt).format('mm:ss')}\n            </div>\n          </DomMenuCreate>\n        ))\n      }\n    </div>\n  );\n};\n\nexport default memo(() => {\n  const dispatch = useDispatch();\n  const { popupStatus } = useSelector(({ mask }) => mask);\n  const { playlist, currentSong } = useSelector(({ audio }) => audio);\n  const handleClear = () => {\n    if (playlist.length === 0) return false;\n    return dispatch(setAudioPlaylistClear());\n  };\n  if (popupStatus !== 'playlist') return null;\n  return (\n    <div id=\"playlist\" className=\"absolute right-0 shadow bg-white z-40 flex flex-col\">\n      <div className=\"px-5 flex-none\">\n        <div className=\"py-4\">\n          <div className=\"h1\">当前播放</div>\n        </div>\n        <div className=\"actions flex items-center pb-2.5 border-b\">\n          <span className=\"text-gray-400\">\n            {`总${playlist.length}首`}\n          </span>\n          <div className=\"right ml-auto flex divide-x\">\n            <button\n              type=\"button\"\n              className={classNames('action px-5 flex-center', { 'text-gray-300': playlist.length === 0 })}\n            >\n              <IconFolderPlus size={20} stroke={1} />\n              收藏全部\n            </button>\n            <button\n              type=\"button\"\n              onClick={handleClear}\n              className={classNames('action px-5 flex-center', { 'text-gray-300': playlist.length === 0 })}\n            >\n              清空列表\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"overflow-auto h-full flex-auto\">\n        <DomList\n          list={playlist}\n          currentId={currentSong.id}\n        />\n      </div>\n    </div>\n  );\n});\n"],"names":["BuildList","song","msg","name","alias","length","className","join","album","topic","title","promotionUrl","text","picInfo","navs","dispatch","useAppDispatch","useAppSelector","common","isLogin","newMsgCount","msgs","comments","forwards","notices","useState","data","setData","active","setActive","handlePrivateInit","fn","setMsgPrivate","console","log","handleChangeNav","apiMsgPrivate","apiMsgComments","apiMsgForwards","apiMsgNotices","useEffect","handleSeeMsgPrivateHistory","uid","nickname","setMsgPrivateHistory","showMsgPrivateHistory","type","map","nav","onClick","key","classNames","item","fromUser","userId","Link","to","src","avatarUrl","alt","avatarDetail","identityIconUrl","dayjs","lastMsgTime","format","BuildTransLastMsg","JSON","parse","lastMsg","DomSong","picUrl","IconPlayerPlay","size","artists","artist","index","DomAlbum","id","DomImage","DomContent","transTextEmoji","DomMsgLeft","DomMsgRight","history","useRef","letter","hint","privatMsgs","profile","account","visibility","setVisibility","value","setValue","handleGetMsgPrivateHistory","apiMsgPrivateHistory","reverse","current","scrollTo","scrollHeight","handleSend","apiSendText","user_ids","newMsgs","style","height","IconChevronLeft","ref","time","toUser","Write","placeholder","EmojiFaces","handleHide","clickface","face","IconMoodSmile","stroke","IconPhoto","wordLength","popupStatus","mask","Empty","useDispatch","setPopupPlaylistToggle","DomList","list","currentId","running","useSelector","audio","schema","tabIndex","ui_themeColor","IconPlayerPause","ar","IconLink","dt","memo","playlist","currentSong","IconFolderPlus","setAudioPlaylistClear"],"sourceRoot":""}