{"version":3,"file":"User_Detail.0a0c3932.js","mappings":"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","sources":["webpack://wyy/./src/pages/User/Detail/components/Column.tsx","webpack://wyy/./src/pages/User/Detail/components/Grid.tsx","webpack://wyy/./src/pages/User/Detail/components/List.tsx","webpack://wyy/./src/pages/User/Detail/components/RainbowCat/index.tsx","webpack://wyy/./src/pages/User/Detail/components/layout.tsx","webpack://wyy/./src/pages/User/Detail/index.tsx"],"sourcesContent":["import React from 'react';\n\nexport default () => (\n  <div>{}</div>\n);\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  IconPlayerPlay,\n} from '@tabler/icons';\nimport DomPlaylistAsyncReplace from '@/components/GroupPlay/PlaylistAsyncReplace';\nimport DomItem from '@/components/GridPlaylist/Item';\nimport { useSelector } from 'react-redux';\nimport RainbowCat from './RainbowCat';\n\nconst DomRank = ({ uid }) => {\n  const { profile } = useSelector(({ account }) => account);\n  if (profile?.userId !== Number(uid)) return null;\n  return (\n    <div className=\"item\">\n      <Link to={(location) => `${location.pathname}/record`}>\n        <div className=\"cover relative border ui_aspect-ratio-1/1\">\n          <div className=\"absolute inset-0\">\n            <RainbowCat />\n          </div>\n          <button\n            type=\"button\"\n            className=\"playArrow opacity-0 group-hover:opacity-100 transition-opacity duration-500 ui_themeColor absolute right-0 bottom-0 m-2 bg-white bg-opacity-90 rounded-full p-2\"\n          >\n            <IconPlayerPlay size={22} className=\"fill-current\" />\n          </button>\n        </div>\n      </Link>\n      <div className=\"footer mt-2 text-sm\">\n        <Link to={(location) => `${location.pathname}/record`} className=\"\">\n          {/* {user.profile.nickname} */}\n          听歌排行\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(({ list = [], uid }) => (\n  <div className=\"domUserDetail_list px-8 grid grid-cols-4 gap-5\">\n    <DomRank />\n    {list.map((item) => (\n      <DomItem item={item} uid={uid} key={item.id} />\n    ))}\n  </div>\n));\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IconPlayerPlay, IconFolderPlus } from '@tabler/icons';\nimport { transPlayCount } from '@/common/utils';\n\nexport default ({ list = [] }) => (\n  <div>\n    {list.map((item, index) => (\n      <div key={item.id} className={classNames('hover:bg-gray-100 pl-8 py-3 flex items-center', { 'bg-gray-50': index % 2 === 0 })}>\n        <Link to={`/playlist/music/${item.id}`} className=\"rounded overflow-hidden relative group\">\n          <img src={`${item.coverImgUrl}?param=60y60`} alt=\"\" />\n          <button type=\"button\" className=\"absolute rounded-full bg-white bg-opacity-90 inset-0 flex-center m-auto w-6 h-6 ui_themeColor opacity-0 group-hover:opacity-100 transition-opacity duration-500\">\n            <IconPlayerPlay size={16} className=\"fill-current\" />\n          </button>\n        </Link>\n        <Link to={`/playlist/music/${item.id}`} className=\"flex-auto w-0 px-3 truncate text-sm ui_text_black_hover\">\n          {item.name}\n        </Link>\n        <span className=\"px-3 count text-gray-400\" style={{ width: `${1 / 7 * 100}%` }}>\n          歌曲：\n          {item.trackCount}\n        </span>\n        <span className=\"px-3 creator truncate text-gray-300\" style={{ width: `${1 / 7 * 100}%` }}>\n          by\n          <Link to={`/user/${item.userId}`} className=\"ui_text_gray_hover\">{item.creator.nickname}</Link>\n        </span>\n        <button type=\"button\" className=\"px-3 subscribed flex items-center ui_text_gray_hover\" style={{ width: `${1 / 7 * 100}%` }}>\n          <IconFolderPlus size={16} />\n          {item.subscribedCount}\n        </button>\n        <button type=\"button\" className=\"px-3 playCount flex items-center ui_text_gray_hover\" style={{ width: `${1 / 7 * 100}%` }}>\n          <IconPlayerPlay size={16} />\n          {transPlayCount(item.playCount)}\n        </button>\n      </div>\n    ))}\n  </div>\n);\n","import './style.css';\n\nimport React from 'react';\n\nexport default () => (\n  <div className=\"cartoon hb r\">\n    <div className=\"ears\" />\n    <div className=\"face r c\" />\n    <div className=\"nose ha hb\" />\n    <div className=\"forehead ha c\" />\n    <div className=\"eyes r\" />\n    <div className=\"pupil\" />\n    <div className=\"pupil\" />\n    <div className=\"smile\" />\n    <div className=\"smile\" />\n    <div className=\"snout ha hb\" />\n    <div className=\"mouth ha hb\" />\n    <div className=\"whiskers r\" />\n  </div>\n);\n","import React, { memo, useState } from 'react';\nimport {\n  IconLayoutGrid,\n  IconLayoutList,\n  IconList,\n} from '@tabler/icons';\nimport classNames from 'classnames';\nimport DomGrid from './Grid';\nimport DomList from './List';\nimport DomColumn from './Column';\n\nconst layouts = [\n  ['grid', '大图模式', IconLayoutGrid],\n  ['list', '列表模式', IconLayoutList],\n  ['column', '图列模式', IconList],\n];\n\nconst Mains = {\n  grid: DomGrid,\n  list: DomList,\n  column: DomColumn,\n};\n\nexport default memo(({ list = [], uid }) => {\n  const [layout, setLayout] = useState('grid');\n  return (\n    <div className=\"pb-10\">\n      <div className=\"domUserDetail_headerBar flex items-center px-8 pb-4\">\n        <span className=\"name text-base font-bold\">\n          歌单\n        </span>\n        <div className=\"layouts ml-auto flex overflow-hidden rounded space-x-0.5\">\n          {\n            layouts.map(([type, title, Ico]) => (\n              <button\n                key={type}\n                type=\"button\"\n                className={classNames('layout bg-gray-100 h-5 w-6 flex-center', layout === type ? 'bg-gray-500 text-white' : 'hover:bg-gray-200')}\n                onClick={() => setLayout(type)}\n                title={title}\n              >\n                <Ico size={16} />\n              </button>\n            ))\n          }\n        </div>\n      </div>\n      {\n        ((Layout) => <Layout list={list} uid={uid} />)(Mains[layout])\n      }\n    </div>\n  );\n});\n","import React, {\n  memo, useEffect, useState, useMemo,\n} from 'react';\nimport {\n  Link,\n} from 'react-router-dom';\nimport { apiUserDetail, apiUserPlaylist, apiFollow } from '@/api';\nimport { useSelector } from 'react-redux';\nimport './style.scss';\nimport DomGender from '@/components/Gender';\nimport {\n  IconEdit,\n  IconCheck,\n  IconMail,\n  IconPlus,\n} from '@tabler/icons';\nimport { SymbolWB } from '@/components/Symbol';\nimport DomLoading from '@/components/Loading';\n\nimport Domlayout from './components/layout';\n\nexport default memo(({ uid }) => {\n  const { isLogin } = useSelector(({ common }) => common);\n  const [user, setUser] = useState({});\n  const [playlist, setPlaylist] = useState([]);\n\n  const account = useSelector(({ account }) => account);\n  const [loading, setLoading] = useState(false);\n  const [isSelf, setIsSelf] = useState(false);\n\n  useEffect(() => {\n    if (isLogin) {\n      setIsSelf(String(account.profile.userId) === uid);\n    }\n  }, [isLogin]);\n\n  const ownPlaylist = playlist.filter((item) => String(item.userId) === uid);\n\n  const savePlaylist = playlist.filter((item) => String(item.userId) !== uid);\n  const handleGetUserInfo = async () => {\n    try {\n      const [\n        user,\n        { playlist }] = await Promise.all([\n        apiUserDetail({ uid }),\n        apiUserPlaylist({ uid }),\n      ]);\n      setUser(user);\n      setPlaylist(playlist);\n      setLoading(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleFollow = async (id) => {\n    const { followed } = user.profile;\n    try {\n      const { code } = await apiFollow({\n        id,\n        t: followed === true ? 0 : 1,\n      });\n      if (code === 200) {\n        setUser({ ...user, profile: { ...user.profile, followed: !followed } });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    handleGetUserInfo();\n  }, [uid]);\n  if (!isLogin) {\n    return (\n      <div>查看个人信息请先登录</div>\n    );\n  }\n  if (!loading) {\n    return <div className=\"flex-center\"><DomLoading /></div>;\n  }\n  return (\n    <div className=\"domUserDetail\">\n      <div className=\"domUserDetail_header p-8\">\n        <div className=\"avatar rounded-full overflow-hidden flex-none\">\n          <img src={`${user.profile.avatarUrl}?param=200y200`} alt=\"\" className=\"ui_coverimg\" />\n        </div>\n        <div className=\"content\">\n          <div className=\"name\">{user.profile.nickname}</div>\n          <div className=\"contain\">\n            <div className=\"left flex-center\">\n              {\n                user.profile.vipType === 11\n                && (\n                  <>\n                    <a href=\"https://music.163.com/#/member\">黑胶会员</a>\n                      &nbsp;\n                  </>\n                )\n              }\n              {\n                user.identify\n                && (\n                  <span className=\"authentication\" title={user.identify.imageDesc}>\n                    <span className=\"ico\">\n                      <img className=\"ui_containimg\" src={user.identify.imageUrl} alt=\"\" />\n                    </span>\n                    {user.identify.imageDesc}\n                  </span>\n                )\n              }\n              <a className=\"level\" href=\"https://music.163.com/#/user/level\">\n                Lv\n                {user.level}\n              </a>\n              <DomGender gender={user.profile.gender} size={16} />\n            </div>\n            <div className=\"right ml-auto flex-center\">\n              {\n                isSelf\n                  ? (\n                    <Link to={({ pathname }) => `${pathname}/edit`} className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex-center\">\n                      <IconEdit size={18} stroke={1.5} />\n                      &nbsp;\n                      编辑个人信息\n                    </Link>\n                  )\n                  : (\n                    <>\n                      <button type=\"button\" className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex-center\">\n                        <IconMail size={20} stroke={1} />\n                                &nbsp;发私信\n                      </button>\n                      {\n                        user.profile.followed\n                          ? (\n                            <button\n                              type=\"button\"\n                              className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex-center\"\n                              onClick={() => handleFollow(user.profile.userId)}\n                            >\n                              <IconCheck size={16} />\n                              &nbsp;\n                              已关注\n                            </button>\n                          )\n                          : (\n                            <button\n                              type=\"button\"\n                              className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex-center\"\n                              onClick={() => handleFollow(user.profile.userId)}\n                            >\n                              <IconPlus size={16} style={{ color: '#EC4141' }} />\n                              &nbsp;\n                              关注\n                            </button>\n                          )\n                      }\n                    </>\n                  )\n              }\n            </div>\n          </div>\n          <hr />\n          <div className=\"infos text-center divide-x grid mt-5\" style={{ gridTemplateColumns: 'repeat(3, 88px)' }}>\n            <Link to={({ pathname }) => `${pathname}/dynamic`} className=\"info\">\n              <div className=\"num text-base\">{user.profile.eventCount}</div>\n              <div className=\"string\">动态</div>\n            </Link>\n            <Link to={({ pathname }) => `${pathname}/follow`} className=\"info\">\n              <div className=\"num text-base\">{user.profile.follows}</div>\n              <div className=\"string\">关注</div>\n            </Link>\n            <Link to={({ pathname }) => `${pathname}/fans`} className=\"info\">\n              <div className=\"num text-base\">{user.profile.followeds}</div>\n              <div className=\"string\">粉丝</div>\n            </Link>\n          </div>\n          <div className=\"list\">\n            {/* <div className=\"item\">\n                <span>所在地区：</span>\n                <span className=\"text-gray-400\">浙江省 温州市</span>\n              </div> */}\n            <div className=\"item\">\n              <span>社交网络：</span>\n              {\n                user.bindings.map((item) => {\n                  if (item.url) {\n                    switch (item.type) {\n                      case 2:\n                        return (\n                          <a href={item.url} key={item.url}>\n                            <SymbolWB size={16} active key={item.url} />\n                          </a>\n                        );\n                      default:\n                        return null;\n                    }\n                  }\n                })\n              }\n            </div>\n            <div className=\"item\">\n              <span>个人介绍：</span>\n              <span className=\"text-gray-400\" style={{ whiteSpace: 'pre-wrap' }}>\n                {user.profile.signature || '暂无介绍'}\n\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"domUserDetail_main\">\n        <Domlayout uid={uid} list={ownPlaylist} />\n        <Domlayout uid={uid} list={savePlaylist} />\n      </div>\n    </div>\n  );\n});\n"],"names":["DomRank","uid","profile","useSelector","account","userId","Number","className","Link","to","location","pathname","type","IconPlayerPlay","size","memo","list","map","item","key","id","index","src","coverImgUrl","alt","name","style","width","trackCount","creator","nickname","IconFolderPlus","subscribedCount","transPlayCount","playCount","layouts","IconLayoutGrid","IconLayoutList","IconList","Mains","grid","DomGrid","DomList","column","DomColumn","Layout","useState","layout","setLayout","title","Ico","onClick","isLogin","common","user","setUser","playlist","setPlaylist","loading","setLoading","isSelf","setIsSelf","useEffect","String","ownPlaylist","filter","savePlaylist","handleGetUserInfo","Promise","all","apiUserDetail","apiUserPlaylist","console","log","handleFollow","followed","apiFollow","t","code","avatarUrl","vipType","href","identify","imageDesc","imageUrl","level","gender","IconEdit","stroke","IconMail","IconCheck","IconPlus","color","gridTemplateColumns","eventCount","follows","followeds","bindings","url","SymbolWB","active","whiteSpace","signature"],"sourceRoot":""}