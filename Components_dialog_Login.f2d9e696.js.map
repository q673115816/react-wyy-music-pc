{"version":3,"file":"Components_dialog_Login.f2d9e696.js","mappings":"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","sources":["webpack://wyy/./src/components/Dialog/Login/Content.ts","webpack://wyy/./src/components/Dialog/Login/Scan.tsx","webpack://wyy/./src/components/Dialog/Login/components/Select.tsx","webpack://wyy/./src/components/Dialog/Login/components/Threes.tsx","webpack://wyy/./src/components/Dialog/Login/components/Input.tsx","webpack://wyy/./src/components/Dialog/Login/SignIn.tsx","webpack://wyy/./src/components/Dialog/Login/SignUp.tsx","webpack://wyy/./src/components/Dialog/Login/Reset.tsx","webpack://wyy/./src/components/Dialog/Login/Identify.tsx","webpack://wyy/./src/components/Dialog/Login/Base.tsx"],"sourcesContent":["import { createContext } from \"react\";\nimport { Reducer } from \"use-immer\";\n\nexport const LoginContext = createContext<any>(null);\n\nexport const SET_TYPE = \"SET_TYPE\";\nexport const SET_SIGNIN_WARN = \"SET_SIGNIN_WARN\";\nexport const SET_SIGNIN_PHONE = \"SET_SIGNIN_PHONE\";\nexport const SET_SIGNIN_PASSWORD = \"SET_SIGNIN_PASSWORD\";\nexport const SET_SIGNIN_ARGEEARGUMENT = \"SET_SIGNIN_ARGEEARGUMENT\";\nexport const SET_SIGNIN_COUNTRYCODE = \"SET_SIGNIN_COUNTRYCODE\";\n\nexport const LoginReducer: Reducer = (draft, action) => {\n  switch (action.type) {\n    case SET_TYPE:\n      draft.type = action.payload.type;\n      return;\n    case SET_SIGNIN_WARN:\n      return;\n    case SET_SIGNIN_PHONE:\n      draft.loginphone = action.payload.loginphone;\n      return;\n    case SET_SIGNIN_PASSWORD:\n      draft.loginpassword = action.payload.loginpassword;\n      return;\n    case SET_SIGNIN_ARGEEARGUMENT:\n      draft.argeeArgument = action.payload.argeeArgument;\n      return;\n    case SET_SIGNIN_COUNTRYCODE:\n      draft.countrycode = action.payload.countrycode;\n      return;\n    default:\n      return;\n  }\n};\n\nexport type LoginType = \"scan\" | \"signin\" | \"signup\" | \"reset\" | \"identify\";\n\nexport interface LoginState {\n  argeeArgument: boolean;\n  loginphone: string;\n  loginpassword: string;\n  registerphone: string;\n  registerpassword: string;\n  type: LoginType;\n  countrycode: string;\n}\n\nexport const LoginInitialState: LoginState = {\n  argeeArgument: true,\n  loginphone: \"\",\n  loginpassword: \"\",\n  registerphone: \"\",\n  registerpassword: \"\",\n  type: \"scan\",\n  countrycode: \"86\",\n};\n","import React, {\n  FC,\n  memo,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n  MouseEventHandler,\n} from \"react\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { IconFaceId, IconScan } from \"@tabler/icons\";\nimport { apiLoginQrCheck, apiLoginQrCreate, apiLoginQrKey } from \"@/api\";\nimport { setCookie } from \"@/api/cookie\";\nimport { LoginContext, SET_TYPE } from \"./Content\";\nimport { useQuery } from \"react-query\";\n\ninterface iRefreshProps {\n  handleInit: MouseEventHandler;\n}\n\nconst DomRefresh: FC<iRefreshProps> = memo(({ handleInit }) => (\n  <div className=\"absolute bg-black bg-opacity-60 flex-center flex-col inset-0 mask text-white\">\n    <div>二维码已失效</div>\n    <button\n      type=\"button\"\n      className=\"btn w-20 h-8 rounded mt-2 bg-blue-500\"\n      onClick={handleInit}\n    >\n      点击刷新\n    </button>\n  </div>\n));\n\nconst DomSuccess = () => (\n  <div className=\"scansuccess flex-center flex-col\">\n    <div className=\"flex-center ui_themeColor my-10\">\n      <IconFaceId size={64} stroke=\"1\" />\n    </div>\n    <span className=\"text-gray-400 text-sm\">扫描成功</span>\n    <div className=\"tips text-base mt-4\">请在手机上确认登录</div>\n  </div>\n);\n\ninterface iWaitingProps {\n  qrimg: string;\n  handleChooseOtherSign: MouseEventHandler;\n}\n\nconst Waiting: FC<iWaitingProps> = memo(\n  ({ qrimg, handleChooseOtherSign, children }) => (\n    <div className=\"scanwait text-center\">\n      <div className=\"qrbox relative\">\n        <div className=\"left\">\n          <div className=\"ico ui_themeColor flex-center\">\n            <IconScan size={64} />\n          </div>\n        </div>\n        <div className=\"right\">\n          <div className=\"qrimg relative m-auto\">\n            <img src={qrimg} alt=\"\" />\n            {children}\n          </div>\n          <div className=\"tips text-sm mt-4\">\n            使用\n            <a href=\"https://music.163.com/#/download\" className=\"ui_link\">\n              网易云音乐APP\n            </a>\n            扫码登录\n          </div>\n        </div>\n      </div>\n      <button type=\"button\" onClick={handleChooseOtherSign}>\n        选择其他登录模式&nbsp;&gt;\n      </button>\n    </div>\n  )\n);\n\nexport default memo(() => {\n  const [qrimg, setQrimg] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [status, setStatus] = useState(0);\n  const timer = useRef<NodeJS.Timer>();\n  const { loginDispatch } = useContext(LoginContext);\n  const handleInit = useCallback(async () => {\n    try {\n      const {\n        data: { unikey },\n      } = await apiLoginQrKey();\n      const {\n        data: { qrimg },\n      } = await apiLoginQrCreate({\n        key: unikey,\n        qrimg: true,\n      });\n      unstable_batchedUpdates(() => {\n        setKey(unikey);\n        setQrimg(qrimg);\n        setStatus(0);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const handleLoop = async () => {\n    const { code, cookie } = await apiLoginQrCheck({\n      key,\n    }).catch((error: Error) => console.log(error));\n    switch (code) {\n      case 800:\n        if (timer.current) clearInterval(timer.current);\n        setStatus(800);\n        break;\n      case 802:\n        setStatus(802);\n        break;\n      case 803:\n        setCookie(cookie);\n        window.location.reload();\n        break;\n    }\n  };\n\n  const handleChooseOtherSign = useCallback(\n    () => loginDispatch({ type: SET_TYPE, payload: { type: \"signin\" } }),\n    []\n  );\n\n  useEffect(() => {\n    handleInit();\n  }, []);\n\n  useEffect(() => {\n    timer.current = setInterval(handleLoop, 5000);\n    return () => {\n      if (timer.current) clearInterval(timer.current);\n    };\n  }, [key]);\n\n  return (\n    <div className=\"qr pt-24 flex items-center flex-col\">\n      <div className=\"title text-2xl\">扫码登录</div>\n      {(status === 0 || status === 800) && (\n        <Waiting {...{ qrimg, handleChooseOtherSign }}>\n          {status === 800 && <DomRefresh handleInit={handleInit} />}\n        </Waiting>\n      )}\n      {status === 802 && <DomSuccess />}\n    </div>\n  );\n});\n","import React, { memo, useContext, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { IconCaretDown, IconDeviceMobile } from \"@tabler/icons\";\nimport { SET_SIGNIN_COUNTRYCODE, LoginContext } from \"../Content\";\nimport { useAppSelector } from \"@/reducers/hooks\";\nimport { CountriesCodeItem, CountryItem } from \"@/reducers/common/slice\";\n\nexport default memo(() => {\n  const { countriesCodeList } = useAppSelector(({ common }) => common);\n  const {\n    loginReducer: { countrycode },\n    loginDispatch,\n  } = useContext(LoginContext);\n\n  const [visibility, setVisibility] = useState(false);\n  const handleChoose = (countrycode: string) => {\n    loginDispatch({\n      type: SET_SIGNIN_COUNTRYCODE,\n      payload: { countrycode },\n    });\n  };\n  return (\n    <div className=\"customSelect\">\n      <button\n        onClick={() => setVisibility(!visibility)}\n        type=\"button\"\n        className=\"default\"\n      >\n        <IconDeviceMobile size={24} stroke={0.5} className=\"ico\" />+\n        {countrycode}\n        <div className=\"arrow\">\n          <IconCaretDown size={12} className=\"fill-current\" />\n        </div>\n      </button>\n      <div\n        className=\"customOptionGroup\"\n        style={{ display: visibility ? \"\" : \"none\" }}\n      >\n        {countriesCodeList.map(({ countryList }: CountriesCodeItem) =>\n          countryList.map(({ zh, code }: CountryItem) => (\n            <button\n              key={zh}\n              type=\"button\"\n              className={classNames(\"customOption flex w-full px-3 h-6\", {\n                on: code === countrycode,\n              })}\n              onClick={() => handleChoose(code)}\n            >\n              <div className=\"flag w-8\">{}</div>\n              <div className=\"zh\">{zh}</div>\n              <div className=\"code ml-auto\">{`+${code}`}</div>\n            </button>\n          ))\n        )}\n      </div>\n    </div>\n  );\n});\n","import { SymbolQQ, SymbolWB, SymbolWX, SymbolWY } from \"@/components/Symbol\";\nimport React, { memo } from \"react\";\n\nexport default memo(() => (\n  <div className=\"threes flex justify-between\">\n    <button type=\"button\" className=\"three\">\n      <SymbolWX hover />\n    </button>\n    <button type=\"button\" className=\"three\">\n      <SymbolQQ hover />\n    </button>\n    <button type=\"button\" className=\"three\">\n      <SymbolWB hover />\n    </button>\n    <button type=\"button\" className=\"three\">\n      <SymbolWY hover />\n    </button>\n  </div>\n));\n","import React, { ChangeEventHandler, memo, useCallback, useState } from \"react\";\nimport { IconEye, IconEyeOff } from \"@tabler/icons\";\n\ninterface InputProps {\n  value: any;\n  onChange: ChangeEventHandler;\n  name?: string;\n  type?: string;\n  placeholder?: string;\n}\n\nexport default memo<InputProps>(\n  ({\n    value = \"\",\n    onChange,\n    name = \"name\",\n    type = \"text\",\n    placeholder = \"\",\n  }) => {\n    const [Type, setType] = useState(type);\n    // const [isFocus, setIsFocus] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    // const handleFocus = useCallback(() => setIsFocus(true), []);\n    const handleTogglePassword = useCallback(() => {\n      setType(showPassword ? \"password\" : \"text\");\n      setShowPassword(!showPassword);\n    }, [showPassword]);\n    return (\n      <>\n        <input\n          type={Type}\n          name={name}\n          placeholder={placeholder}\n          className=\"input\"\n          // readOnly={isFocus}\n          // onFocus={handleFocus}\n          value={value}\n          onChange={onChange}\n        />\n        {type === \"password\" && (\n          <button\n            type=\"button\"\n            className=\"togglePassword\"\n            onClick={handleTogglePassword}\n          >\n            {showPassword ? <IconEye size={16} /> : <IconEyeOff size={16} />}\n          </button>\n        )}\n      </>\n    );\n  }\n);\n","import React, {\n  ChangeEventHandler,\n  FormEventHandler,\n  memo,\n  useCallback,\n  useContext,\n  useRef,\n  useState,\n} from \"react\";\nimport { apiLoginCellphone } from \"@/api\";\nimport { IconFaceId, IconQrcode } from \"@tabler/icons\";\nimport { setCookie } from \"@/api/cookie\";\n\nimport Checkbox from \"@/components/Checkbox\";\nimport { LoginContext, SET_SIGNIN_PHONE } from \"./Content\";\nimport DomSelect from \"./components/Select\";\nimport DomThrees from \"./components/Threes\";\nimport DomSubmitBtn from \"./components/SubmitBtn\";\nimport {\n  SET_SIGNIN_ARGEEARGUMENT,\n  SET_SIGNIN_PASSWORD,\n  SET_TYPE,\n} from \"./Content\";\nimport Input from \"./components/Input\";\n\nexport default memo(() => {\n  const {\n    loginReducer: { argeeArgument, loginphone, loginpassword, countrycode },\n    loginDispatch,\n  } = useContext(LoginContext);\n\n  const [warn, setWarn] = useState(\"\");\n  const [autoLogin, setAutoLogin] = useState(true);\n\n  const handleAutoLogin: ChangeEventHandler<HTMLInputElement> = useCallback(\n    ({ target }) => {\n      setAutoLogin(target.checked);\n    },\n    []\n  );\n  const handleLogin = async () => {\n    try {\n      const { data, code, msg, cookie, token, profile } =\n        await apiLoginCellphone({\n          phone: loginphone,\n          password: loginpassword,\n          countrycode,\n        });\n      if (code === 200) {\n        setCookie(cookie);\n        // handleToggle();\n        // dispatch(setLoginInfo(profile));\n        // dispatch(setIsLogin());\n        window.location.reload();\n      }\n      if (code === 502) {\n        setWarn(\"⚠️当前登录失败，请稍后再试\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit: FormEventHandler = (e) => {\n    e.preventDefault();\n    if (!argeeArgument) {\n      alert(\"请先勾选同意《服务条款》《服务条款》《服务条款》\");\n    } else if (!loginphone) {\n      setWarn(\"⚠️请输入手机号\");\n    } else if (!loginpassword) {\n      setWarn(\"⚠️请输入密码\");\n    } else if (!/\\d{11}/.test(loginphone)) {\n      setWarn(\"⚠️请输入11位数字的手机号\");\n    } else {\n      handleLogin();\n    }\n  };\n\n  const handlePhone: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (event) => {\n      const loginphone = event.target.value;\n      loginDispatch({\n        type: SET_SIGNIN_PHONE,\n        payload: {\n          loginphone,\n        },\n      });\n    },\n    []\n  );\n  const handlePassword: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (event) => {\n      const loginpassword = event.target.value;\n      loginDispatch({\n        type: SET_SIGNIN_PASSWORD,\n        payload: {\n          loginpassword,\n        },\n      });\n    },\n    []\n  );\n\n  const handleArgument: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (event) => {\n      const argeeArgument = event.target.checked;\n      loginDispatch({\n        type: SET_SIGNIN_ARGEEARGUMENT,\n        payload: {\n          argeeArgument,\n        },\n      });\n    },\n    []\n  );\n\n  const handleToSignUp = () => {\n    if (argeeArgument) {\n      loginDispatch({\n        type: SET_TYPE,\n        payload: { type: \"signup\" },\n      });\n    } else {\n      alert(\"请先勾选同意《服务条款》《服务条款》《服务条款》\");\n    }\n  };\n\n  return (\n    <div className=\"form px-10\">\n      <div className=\"angle absolute top-0 left-0\">\n        <button\n          type=\"button\"\n          onClick={() =>\n            loginDispatch({ type: SET_TYPE, payload: { type: \"scan\" } })\n          }\n        >\n          <IconQrcode size={36} />\n        </button>\n        <span className=\"absolute top-3 left-12 pr-3 pl-4 py-1.5 tips text-white whitespace-nowrap bg-gray-400\">\n          扫码登录更安全\n        </span>\n      </div>\n      <div style={{ height: 200 }} className=\"flex-center ui_themeColor\">\n        <IconFaceId size={100} stroke={1} />\n      </div>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <table className=\"table\">\n          <colgroup>\n            <col style={{ width: 84 }} />\n            <col style={{ width: `calc(100% - 168px)` }} />\n            <col style={{ width: 84 }} />\n          </colgroup>\n          <tbody>\n            <tr>\n              <td>\n                <DomSelect />\n              </td>\n              <td colSpan={2}>\n                <Input\n                  type=\"text\"\n                  name=\"phone\"\n                  placeholder=\"请输入手机号\"\n                  value={loginphone}\n                  onChange={handlePhone}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"请输入密码\"\n                  value={loginpassword}\n                  onChange={handlePassword}\n                />\n              </td>\n              <td>\n                <div className=\"flex-center\">\n                  <button\n                    type=\"button\"\n                    className=\"text-gray-400\"\n                    onClick={() =>\n                      loginDispatch({\n                        type: SET_TYPE,\n                        payload: { type: \"reset\" },\n                      })\n                    }\n                  >\n                    重设密码\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div className=\"info\">\n          <label htmlFor=\"autoLogin\" className=\"auto\">\n            {/* <input type=\"checkbox\" name=\"auto\" hidden />\n            <i className=\"ico flex-center\">✔</i> */}\n            <Checkbox\n              onChange={handleAutoLogin}\n              checked={autoLogin}\n              name=\"autoLogin\"\n            />\n            &nbsp; 自动登录\n          </label>\n          <div className=\"warn ml-auto text-red-500\">{warn}</div>\n        </div>\n        <div className=\"actions\">\n          <button type=\"submit\" className=\"submit\">\n            登&nbsp;录\n          </button>\n          <button\n            type=\"button\"\n            className=\"signup underline my-2 mx-auto text-sm block w-min whitespace-nowrap\"\n            onClick={handleToSignUp}\n          >\n            注册\n          </button>\n          <DomThrees />\n        </div>\n        <Argument>\n          <Checkbox\n            name=\"argument\"\n            onChange={handleArgument}\n            checked={argeeArgument}\n          />\n        </Argument>\n      </form>\n    </div>\n  );\n});\n\nconst Argument = memo(({ children }) => (\n  <label\n    htmlFor=\"argument\"\n    className=\"argument flex items-center whitespace-nowrap mt-9\"\n  >\n    {children}\n    &nbsp;\n    <span className=\"text-gray-400\">同意</span>\n    <a\n      className=\"ui_link hover\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href=\"https://st.music.163.com/official-terms/service\"\n    >\n      《服务条款》\n    </a>\n    <a\n      className=\"ui_link hover\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href=\"https://st.music.163.com/official-terms/privacy\"\n    >\n      《隐私条款》\n    </a>\n    <a\n      className=\"ui_link hover\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href=\"https://st.music.163.com/official-terms/children\"\n    >\n      《儿童隐私条款》\n    </a>\n  </label>\n));\n","import React, {\n  FormEventHandler,\n  memo,\n  useCallback,\n  useContext,\n  useState,\n} from \"react\";\nimport { IconFaceId, IconDeviceMobile } from \"@tabler/icons\";\nimport DomSelect from \"./components/Select\";\nimport DomThrees from \"./components/Threes\";\n\nimport { LoginContext } from \"./Content\";\nimport { SET_TYPE } from \"./Content\";\n\nexport default memo(() => {\n  const [warn, setWarn] = useState(\"\");\n  const {\n    loginReducer: { registerphone, registerpassword, countrycode },\n    loginDispatch,\n  } = useContext(LoginContext);\n\n  const handleSubmit: FormEventHandler = (e) => {\n    e.preventDefault();\n    if (!registerphone) {\n      setWarn(\"⚠️请输入手机号码\");\n    } else if (!registerpassword) {\n      setWarn(\"⚠️请输入登录密码\");\n    }\n  };\n\n  const handleFocus = useCallback(\n    ({ target }) => target.removeAttribute(\"readonly\"),\n    []\n  );\n\n  const handlePhone = () => {};\n\n  const handlePassword = () => {};\n\n  return (\n    <div className=\"form px-10\">\n      <div className=\"angle absolute top-0 left-0\">\n        <button\n          className=\"mt-2.5\"\n          type=\"button\"\n          onClick={() =>\n            loginDispatch({ type: SET_TYPE, payload: { type: \"signin\" } })\n          }\n        >\n          &lt; 返回登录\n        </button>\n      </div>\n      <div\n        style={{ height: 200, color: \"var(--themeColor)\" }}\n        className=\"flex-center\"\n      >\n        <IconFaceId size={100} stroke={1} />\n      </div>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <table className=\"table\">\n          <colgroup>\n            <col width=\"84\" />\n            <col width=\"auto\" />\n            <col width=\"84\" />\n          </colgroup>\n          <tbody>\n            <tr>\n              <td>\n                <DomSelect />\n              </td>\n              <td colSpan={2}>\n                <input\n                  type=\"text\"\n                  name=\"phone\"\n                  placeholder=\"请输入手机号\"\n                  className=\"input\"\n                  readOnly\n                  onFocus={handleFocus}\n                  value={registerphone}\n                  onChange={handlePhone}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={3}>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"设置登录密码\"\n                  className=\"input\"\n                  readOnly\n                  onFocus={handleFocus}\n                  value={registerpassword}\n                  minLength={8}\n                  maxLength={20}\n                  onChange={handlePassword}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div className=\"info\">\n          {warn ? (\n            <div className=\"warn ui_red\">{warn}</div>\n          ) : (\n            <span className=\"text-gray-400\">\n              密码8-20位，至少包含字母/数字/字符2中组合\n            </span>\n          )}\n        </div>\n        <div className=\"actions\">\n          <button type=\"submit\" className=\"submit\">\n            注册\n          </button>\n          <div className=\"hint flex items-center justify-between mt-8 mb-4\">\n            其他注册方式\n          </div>\n          <DomThrees />\n        </div>\n      </form>\n    </div>\n  );\n});\n","import React, {\n  useState,\n  useContext,\n  FormEventHandler,\n  ChangeEventHandler,\n} from \"react\";\nimport { IconFaceId } from \"@tabler/icons\";\nimport { apiRegisterCellphone } from \"@/api\";\nimport { LoginContext } from \"./Content\";\nimport DomSelect from \"./components/Select\";\nimport { SET_TYPE } from \"./Content\";\n\nexport default () => {\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [warn, setWarn] = useState(\"\");\n  const {\n    loginReducer: { countrycode },\n    loginDispatch,\n  } = useContext(LoginContext);\n\n  const handleFocus = () => {};\n\n  const handlePhone: ChangeEventHandler<HTMLInputElement> = ({ target }) =>\n    setPhone(target.value);\n\n  const handlePassword: ChangeEventHandler<HTMLInputElement> = ({ target }) =>\n    setPassword(target.value);\n\n  const handleSubmit: FormEventHandler = (e) => {\n    e.preventDefault();\n    if (!phone) {\n      setWarn(\"⚠️请输入手机号码\");\n    } else if (!password) {\n      setWarn(\"⚠️请输入登录密码\");\n    } else {\n      loginDispatch({ type: SET_TYPE, payload: { type: \"identify\" } });\n    }\n  };\n\n  return (\n    <div className=\"form\">\n      <div className=\"angle\">\n        <button\n          className=\"mt-2.5\"\n          type=\"button\"\n          onClick={() =>\n            loginDispatch({ type: SET_TYPE, payload: { type: \"signin\" } })\n          }\n        >\n          &lt; 返回登录\n        </button>\n      </div>\n      <div\n        style={{ height: 200, color: \"var(--themeColor)\" }}\n        className=\"flex-center\"\n      >\n        <IconFaceId size={100} stroke={1} />\n      </div>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <table className=\"table\">\n          <colgroup>\n            <col width=\"84\" />\n            <col width=\"auto\" />\n            <col width=\"84\" />\n          </colgroup>\n          <tbody>\n            <tr>\n              <td>\n                <DomSelect />\n              </td>\n              <td colSpan={2}>\n                <input\n                  type=\"text\"\n                  name=\"phone\"\n                  placeholder=\"请输入手机号\"\n                  className=\"input\"\n                  value={phone}\n                  onFocus={handleFocus}\n                  onChange={handlePhone}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={3}>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"设置登录密码\"\n                  className=\"input\"\n                  value={password}\n                  minLength={8}\n                  maxLength={20}\n                  onFocus={handleFocus}\n                  onChange={handlePassword}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div className=\"info\">\n          {warn ? (\n            <div className=\"warn text-red-500 ml-auto\">{warn}</div>\n          ) : (\n            <span className=\"text-gray-400\">\n              密码8-20位，至少包含字母/数字/字符2中组合\n            </span>\n          )}\n        </div>\n        <div className=\"actions\">\n          <button type=\"submit\" className=\"submit\">\n            下一步\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { IconFaceId, IconKey } from \"@tabler/icons\";\nimport { apiCaptchaSent } from \"@/api\";\nimport { LoginContext } from \"./Content\";\nimport { SET_TYPE } from \"./Content\";\n\nexport default () => {\n  const [warn, setWarn] = useState(\"\");\n  const {\n    loginReducer: {},\n    loginDispatch,\n  } = useContext(LoginContext);\n  const handleSubmit = () => {};\n\n  const handleSend = async () => {\n    try {\n      const {} = apiCaptchaSent({\n        phone: \"\",\n        captcha: \"\",\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"form\">\n      <div className=\"angle\">\n        <button\n          className=\"mt-2.5\"\n          type=\"button\"\n          onClick={() =>\n            loginDispatch({ type: SET_TYPE, payload: { type: \"signin\" } })\n          }\n        >\n          &lt; 返回登录\n        </button>\n      </div>\n      <div\n        style={{ height: 200, color: \"var(--themeColor)\" }}\n        className=\"flex-center\"\n      >\n        <IconFaceId size={100} stroke={1} />\n      </div>\n      <div>为了安全，我们会向您的手机发送短信检验码</div>\n      <form onSubmit={handleSubmit} className=\"mt-6\" autoComplete=\"off\">\n        <div className=\"flex space-x-4\">\n          <div className=\"flex-1 relative\">\n            <i className=\"absolute inset-y-0 flex\">\n              <IconKey size={16} className=\"m-auto w-6\" />\n            </i>\n            <input\n              type=\"text\"\n              className=\"border h-full pl-6 rounded\"\n              placeholder=\"填写验证码\"\n            />\n          </div>\n          <div className=\"flex-1\">\n            <button type=\"button\" className=\"submit\">\n              重新获取\n            </button>\n          </div>\n        </div>\n        <div className=\"info\">\n          <div className=\"warn text-red-500 ml-auto\">{warn}</div>\n        </div>\n        <div className=\"actions\">\n          <button type=\"submit\" className=\"submit\">\n            完成\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React, {\n  createContext,\n  memo,\n  ReactNode,\n  useMemo,\n  useReducer,\n} from \"react\";\nimport { IconX } from \"@tabler/icons\";\nimport { setLoginVisibilty } from \"@/reducers/common/slice\";\nimport { useImmerReducer } from \"use-immer\";\nimport \"./style.scss\";\nimport Scan from \"./Scan\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport Reset from \"./Reset\";\nimport Identify from \"./Identify\";\nimport { useAppDispatch, useAppSelector } from \"@/reducers/hooks\";\nimport {\n  LoginInitialState,\n  LoginReducer,\n  LoginContext,\n  LoginType,\n  LoginState,\n} from \"./Content\";\n\nconst Build: { [key in LoginType]: ReactNode } = {\n  scan: <Scan />,\n  signin: <SignIn />,\n  signup: <SignUp />,\n  reset: <Reset />,\n  identify: <Identify />,\n};\n\nexport default memo(() => {\n  const dispatch = useAppDispatch();\n  const { loginVisibility } = useAppSelector(({ common }) => common);\n  const [loginReducer, loginDispatch] = useImmerReducer<LoginState>(\n    LoginReducer,\n    LoginInitialState\n  );\n  if (!loginVisibility) return null;\n  return (\n    <div\n      id=\"dialogLogin\"\n      className=\"-translate-x-1/2 -translate-y-1/2 bg-white fixed left-1/2 rounded shadow top-1/2 transform ui_dialog\"\n    >\n      <button\n        type=\"button\"\n        className=\"ui_dialog_close close\"\n        onClick={() => dispatch(setLoginVisibilty())}\n      >\n        <IconX stroke={1.5} />\n      </button>\n      <LoginContext.Provider value={{ loginReducer, loginDispatch }}>\n        {Build[loginReducer.type]}\n      </LoginContext.Provider>\n    </div>\n  );\n});\n"],"names":["LoginContext","createContext","SET_TYPE","SET_SIGNIN_PHONE","SET_SIGNIN_PASSWORD","SET_SIGNIN_ARGEEARGUMENT","SET_SIGNIN_COUNTRYCODE","LoginReducer","draft","action","type","payload","loginphone","loginpassword","argeeArgument","countrycode","LoginInitialState","registerphone","registerpassword","DomRefresh","memo","handleInit","className","onClick","DomSuccess","IconFaceId","size","stroke","Waiting","qrimg","handleChooseOtherSign","children","IconScan","src","alt","href","useState","setQrimg","key","setKey","status","setStatus","timer","useRef","loginDispatch","useContext","useCallback","apiLoginQrKey","unikey","data","apiLoginQrCreate","unstable_batchedUpdates","console","log","handleLoop","apiLoginQrCheck","catch","error","code","cookie","current","clearInterval","setCookie","window","location","reload","useEffect","setInterval","countriesCodeList","useAppSelector","common","loginReducer","visibility","setVisibility","IconDeviceMobile","IconCaretDown","style","display","map","countryList","zh","classNames","on","handleChoose","Symbol","hover","value","onChange","name","placeholder","Type","setType","showPassword","setShowPassword","handleTogglePassword","IconEye","IconEyeOff","warn","setWarn","autoLogin","setAutoLogin","handleAutoLogin","target","checked","handleLogin","apiLoginCellphone","phone","password","msg","token","profile","handlePhone","event","handlePassword","handleArgument","IconQrcode","height","onSubmit","e","preventDefault","test","alert","autoComplete","width","colSpan","Input","htmlFor","Checkbox","Argument","rel","handleFocus","removeAttribute","color","readOnly","onFocus","minLength","maxLength","setPhone","setPassword","IconKey","Build","scan","Scan","signin","SignIn","signup","SignUp","reset","Reset","identify","Identify","dispatch","useAppDispatch","loginVisibility","useImmerReducer","id","setLoginVisibilty","IconX","Provider"],"sourceRoot":""}