{"version":3,"file":"Exclusive.055479f3.js","mappings":"4QAmBaA,GAAgBC,EAAAA,EAAAA,kBAC3B,iBAD2C,mCAE3C,WAAOC,GAAP,kFAA6BC,EAAAA,EAAAA,IAAkCD,GAA/D,mFAF2C,uDAMvCE,GAAQC,EAAAA,EAAAA,aAAY,CACxBC,KAAM,YACNC,aAbmC,CACnCC,OAAQ,GACRC,UAAW,GAYXC,SAAU,CACRC,sBADQ,SAENC,EAFM,GAIN,MADEC,EACF,EADEA,SAEF,EAAAD,EAAMJ,QAAOM,KAAb,gBAAqBD,EAAQL,UAE/BO,wBAPQ,SAOgBH,GACtBA,EAAMJ,OAAOQ,OAAS,GAExBC,sBAVQ,SAUcL,EAAOM,GAA8C,MACzEN,EAAMH,UAAN,UAAkBS,EAAOL,eAAzB,aAAkB,EAAgBJ,YAGtCU,eAAe,UACZnB,EAAcoB,UAAUC,MAAO,SAC9BT,EAD8B,GAG3B,MACKJ,EADL,EADDK,QAEML,QACR,EAAAI,EAAMJ,QAAOM,KAAb,gBAAqBN,SAKZJ,EAAf,QAEO,MAIHA,EAAMkB,Q,GAJH,EACLX,sBADK,EAELI,wBAFK,EAGLE,sB,SCrCF,SAAeM,EAAAA,EAAAA,OAAK,YACDC,EAAAA,EAAAA,eAAjB,IACMC,GAAWC,EAAAA,EAAAA,KACjB,GAA8BC,EAAAA,EAAAA,IAAe,qBAAGC,aAAxCpB,EAAR,EAAQA,OAEFqB,GAFN,EAAgBpB,WAEDqB,EAAAA,EAAAA,QAAO,IAKhBC,GAAYD,EAAAA,EAAAA,QAAuB,MACnCE,GAAcF,EAAAA,EAAAA,QAAuB,MAmB3C,OAlBAG,EAAAA,EAAAA,IANmB,WACjBR,EAASzB,EAAc,CAAEkC,MAHb,GAGoBL,OAAQA,EAAOM,WAC/CN,EAAOM,SAJK,KAQUJ,EAAWC,GAmBjC,yBAAKI,UAAU,2BAA2BC,IAAKN,GAC7C,yBAAKK,UAAU,YACb,yBAAKA,UAAU,WAAf,QACA,kBAACE,EAAA,EAAD,CACEF,UAAU,aACVG,MAAM,cACNC,IAAI,eAEHhC,EAAOiC,KAAI,SAACC,GAAD,OACV,yBAAKC,IAAKD,EAAKE,QACb,kBAAC,EAAAC,KAAD,CACEC,GACEJ,EAAKK,QAAL,wBACqBL,EAAKK,SAD1B,qBAEkBL,EAAKM,IAEzBZ,UAAU,gDAEV,yBACEa,QAAS,OACTC,IAAKR,EAAKE,OACVR,UAAU,kDACVe,IAAI,KAEN,0BAAMf,UAAU,uHACd,kBAAC,EAAAgB,eAAD,CAAgBC,KAAM,GAAIjB,UAAU,mBAGxC,yBAAKA,UAAU,QACb,kBAAC,EAAAS,KAAD,CACEC,GAAE,qBAAgBJ,EAAKM,IACvBZ,UAAU,+BAETM,EAAKpC,WAKd,yBAAK+B,IAAKL,UC/EpB,EARe,WACb,OACE,kBAAC,EAAAsB,OAAD,KACE,kBAAC,EAAAC,MAAD,CAAOC,OAAK,EAACC,QAAS,kBAACC,EAAD","sources":["webpack://wyy/./src/reducers/exclusive/slice.ts","webpack://wyy/./src/features/Exclusive/Exclusive.tsx","webpack://wyy/./src/features/Exclusive/Router.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { apiPersonalizedPrivatecontentList } from \"@/api\";\n\nexport interface ResultProps {\n  picUrl: string;\n  videoId: number;\n  id: number;\n  name: string;\n}\nexport interface ExclusiveState {\n  result: ResultProps[];\n  scrollTop: number;\n}\n\nconst initialState: ExclusiveState = {\n  result: [],\n  scrollTop: 0,\n};\n\nexport const handleGetData = createAsyncThunk(\n  \"exclusive/init\",\n  async (params: any) => await apiPersonalizedPrivatecontentList(params)\n  // .catch(() => initialState);\n);\n\nconst slice = createSlice({\n  name: \"exclusive\",\n  initialState,\n  reducers: {\n    setExclusiveResultAdd(\n      state,\n      { payload }: PayloadAction<{ result: ResultProps[] }>\n    ) {\n      state.result.push(...payload.result);\n    },\n    setExclusiveResultEmpty(state) {\n      state.result.length = 0;\n    },\n    setExclusiveScrollTop(state, action: PayloadAction<{ scrollTop: number }>) {\n      state.scrollTop = action.payload?.scrollTop;\n    },\n  },\n  extraReducers: {\n    [handleGetData.fulfilled.type]: (\n      state,\n      { payload }: PayloadAction<{ result: [] }>\n    ) => {\n      const { result } = payload;\n      state.result.push(...result);\n    },\n  },\n});\n\nexport default slice.reducer;\n\nexport const {\n  setExclusiveResultAdd,\n  setExclusiveResultEmpty,\n  setExclusiveScrollTop,\n} = slice.actions;\n","import React, {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { IconPlayerPlay } from \"@tabler/icons\";\nimport { apiPersonalizedPrivatecontentList } from \"@/api\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport { useAppDispatch, useAppSelector } from \"@/reducers/hooks\";\nimport {\n  ResultProps,\n  setExclusiveResultAdd,\n  setExclusiveResultEmpty,\n  setExclusiveScrollTop,\n  handleGetData,\n} from \"@/reducers/exclusive/slice\";\nimport ResizeObserver from \"@/components/ResizeObserver\";\n\nexport default memo(function Exclusive() {\n  const location = useLocation();\n  const dispatch = useAppDispatch();\n  const { result, scrollTop } = useAppSelector(({ exclusive }) => exclusive);\n  const limit = 60;\n  const offset = useRef(0);\n  const handleInit = () => {\n    dispatch(handleGetData({ limit, offset: offset.current }));\n    offset.current += limit;\n  };\n  const DomScroll = useRef<HTMLDivElement>(null);\n  const DomObserver = useRef<HTMLDivElement>(null);\n  useInfinite(handleInit, DomScroll, DomObserver);\n  // useEffect(() => {\n  //   if (location === \"PUSH\") {\n  //     dispatch(setExclusiveResultEmpty());\n  //   } else if (DomScroll.current) {\n  //     DomScroll.current.scrollTop = scrollTop;\n  //   }\n  // }, [location]);\n  // useLayoutEffect(\n  //   () => () => {\n  //     dispatch(\n  //       setExclusiveScrollTop({\n  //         scrollTop: DomScroll.current?.scrollTop || 0,\n  //       })\n  //     );\n  //   },\n  //   []\n  // );\n  return (\n    <div className=\"overflow-auto p-8 h-full\" ref={DomScroll}>\n      <div className=\"ui_w1100\">\n        <div className=\"h1 pb-4\">独家放送</div>\n        <ResizeObserver\n          className=\"grid gap-5\"\n          small=\"grid-cols-2\"\n          big=\"grid-cols-3\"\n        >\n          {result.map((item: ResultProps) => (\n            <div key={item.picUrl}>\n              <Link\n                to={\n                  item.videoId\n                    ? `/player/video/${item.videoId}`\n                    : `/player/mv/${item.id}`\n                }\n                className=\"flex relative rounded border overflow-hidden\"\n              >\n                <img\n                  loading={\"lazy\"}\n                  src={item.picUrl}\n                  className=\"w-full h-full object-cover ui_aspect-ratio-24/9\"\n                  alt=\"\"\n                />\n                <span className=\"ico absolute top-2 left-2 rounded-full text-white w-6 h-6 bg-black bg-opacity-40 flex-center border border-gray-200\">\n                  <IconPlayerPlay size={14} className=\"fill-current\" />\n                </span>\n              </Link>\n              <div className=\"mt-2\">\n                <Link\n                  to={`/player/mv/${item.id}`}\n                  className=\"text-sm ui_text_black_hover\"\n                >\n                  {item.name}\n                </Link>\n              </div>\n            </div>\n          ))}\n          <div ref={DomObserver} />\n        </ResizeObserver>\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Exclusive from \"./Exclusive\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route index element={<Exclusive />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["handleGetData","createAsyncThunk","params","apiPersonalizedPrivatecontentList","slice","createSlice","name","initialState","result","scrollTop","reducers","setExclusiveResultAdd","state","payload","push","setExclusiveResultEmpty","length","setExclusiveScrollTop","action","extraReducers","fulfilled","type","actions","memo","useLocation","dispatch","useAppDispatch","useAppSelector","exclusive","offset","useRef","DomScroll","DomObserver","useInfinite","limit","current","className","ref","ResizeObserver","small","big","map","item","key","picUrl","Link","to","videoId","id","loading","src","alt","IconPlayerPlay","size","Routes","Route","index","element","Exclusive"],"sourceRoot":""}