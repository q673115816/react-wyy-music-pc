{"version":3,"file":"Components_Contextmenu.c40a1140.js","mappings":"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","sources":["webpack://wyy/./src/components/Contextmenu/Contextmenu.tsx"],"sourcesContent":["import React, {\n  useMemo, useState, useCallback, useEffect,\n} from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  IconMessage,\n  IconArrowForward,\n  IconPlayerPlay,\n  IconFolderPlus,\n  IconShare,\n  IconLink,\n  IconCircleX,\n  IconDownload,\n  IconCirclePlus,\n  IconMusic,\n  IconLock,\n} from '@tabler/icons';\nimport {\n  setDialogReset,\n  setDialogShareShow,\n  setDialogCreatePlaylistShow,\n  setContextMenuShareLink,\n  setToast,\n} from '@/reducers/mask/slice';\nimport { setLoginVisibilty } from '@/reducers/common/slice';\nimport { setAudioImmediate, setAudioImmediateNext } from '@/reducers/audio/slice';\nimport { apiMVSub } from '@/api';\nimport useCopyLink from '@/hooks/useCopyLink';\nimport DomMask from '@/components/Mask';\nimport './Contextmenu.scss';\n\nconst initBuild = (functionClose) => ({\n  评论: ({ contextMenuItem, contextMenuTotal, contextMenuType }) => (\n    <li className=\"ui_contextmenu_item\">\n      <Link\n        to={`/comment/${contextMenuType}/${contextMenuItem.id}`}\n        onClick={functionClose}\n        className=\"ui_contextmenu_btn \"\n      >\n        <i className=\"ico\">\n          <IconMessage size={22} stroke={1} />\n        </i>\n        查看评论\n        (\n        {contextMenuTotal}\n        )\n      </Link>\n    </li>\n  ),\n  播放: ({ handlePlay }) => (\n    <li className=\"ui_contextmenu_item\">\n      <button\n        type=\"button\"\n        onClick={handlePlay}\n        className=\"ui_contextmenu_btn \"\n      >\n        <i className=\"ico\">\n          <IconPlayerPlay size={22} stroke={1} />\n        </i>\n        播放(Enter)\n      </button>\n    </li>\n  ),\n  下一首播放: ({ handlePlayNext }) => (\n    <li className=\"ui_contextmenu_item\">\n      <button onClick={handlePlayNext} type=\"button\" className=\"ui_contextmenu_btn \">\n        <i className=\"ico\">\n          <IconArrowForward size={22} stroke={1} />\n        </i>\n        下一首播放\n      </button>\n    </li>\n  ),\n  播放歌单: ({ handlePlayPlaylist }) => (\n    <li className=\"ui_contextmenu_item\">\n      <button\n        type=\"button\"\n        onClick={handlePlayPlaylist}\n        className=\"ui_contextmenu_btn \"\n      >\n        <i className=\"ico\">\n          <IconPlayerPlay size={22} stroke={1} />\n        </i>\n        播放(Enter)\n      </button>\n    </li>\n  ),\n  下一首播放歌单: ({ handlePlayNextPlaylist }) => (\n    <li className=\"ui_contextmenu_item\">\n      <button onClick={handlePlayNextPlaylist} type=\"button\" className=\"ui_contextmenu_btn \">\n        <i className=\"ico\">\n          <IconArrowForward size={22} stroke={1} />\n        </i>\n        下一首播放\n      </button>\n    </li>\n  ),\n  查看歌单: ({ contextMenuItem }) => (\n    <li className=\"ui_contextmenu_item\">\n      <Link\n        to={`/playlist/music/${contextMenuItem.id}`}\n        onClick={functionClose}\n        className=\"ui_contextmenu_btn \"\n      >\n        <i className=\"ico\">\n          <IconPlayerPlay size={22} stroke={1} />\n        </i>\n        查看歌单\n      </Link>\n    </li>\n  ),\n  播放MV: ({ contextMenuItem, contextMenuType }) => (\n    <li className=\"ui_contextmenu_item\">\n      <Link\n        to={`/player/${contextMenuType}/${contextMenuItem.id}`}\n        onClick={functionClose}\n        className=\"ui_contextmenu_btn \"\n      >\n        <i className=\"ico\">\n          <IconPlayerPlay size={22} stroke={1} />\n        </i>\n        播放MV\n      </Link>\n    </li>\n  ),\n  收藏MV: ({ handleSubscribeMV }) => (\n    <li className=\"ui_contextmenu_item\">\n      <button onClick={handleSubscribeMV} type=\"button\" className=\"ui_contextmenu_btn \">\n        <i className=\"ico\">\n          <IconFolderPlus size={22} stroke={1} />\n        </i>\n        收藏MV\n      </button>\n    </li>\n  ),\n  收藏到歌单: ({ handleCreatePlaylist, ownPlaylist = [] }) => (\n    <li className=\"ui_contextmenu_item\">\n      <span className=\"ui_contextmenu_btn \">\n        <i className=\"ico\">\n          <IconFolderPlus size={22} stroke={1} />\n        </i>\n        收藏到歌单(Ctrl+S)\n        <i className=\"arrow\" />\n      </span>\n      <ul className=\"ui_contextmenu sub\">\n        <li className=\"ui_contextmenu_item\">\n          <button\n            type=\"button\"\n            onClick={handleCreatePlaylist}\n            className=\"ui_contextmenu_btn \"\n          >\n            <i className=\"ico\">\n              <IconCirclePlus size={22} stroke={1} />\n            </i>\n            创建新歌单\n          </button>\n        </li>\n        <li className=\"hr\" />\n        {\n          ownPlaylist.map((item) => (\n            <li className=\"ui_contextmenu_item\" key={item.id}>\n              <button type=\"button\" className=\"ui_contextmenu_btn \">\n                <i className=\"ico\">\n                  {\n                    item.privacy === 10\n                      ? <IconLock size={22} stroke={1} />\n                      : <IconMusic size={22} stroke={1} />\n                  }\n                </i>\n                {item.name}\n              </button>\n            </li>\n          ))\n        }\n      </ul>\n    </li>\n  ),\n  分享: ({ handleDialogShare }) => (\n    <li className=\"ui_contextmenu_item\">\n      <button\n        onClick={handleDialogShare}\n        type=\"button\"\n        className=\"ui_contextmenu_btn \"\n      >\n        <i className=\"ico\">\n          <IconShare size={22} stroke={1} />\n        </i>\n        分享.....\n      </button>\n    </li>\n  ),\n  复制链接: ({ handleCopyLink }) => (\n    <li className=\"ui_contextmenu_item\">\n      <button\n        type=\"button\"\n        onClick={handleCopyLink}\n        className=\"ui_contextmenu_btn \"\n      >\n        <i className=\"ico\">\n          <IconLink size={22} stroke={1} />\n        </i>\n        复制链接\n      </button>\n    </li>\n  ),\n  不感兴趣: ({ }) => (\n    <li className=\"ui_contextmenu_item\">\n      <span className=\"ui_contextmenu_btn \">\n        <i className=\"ico\">\n          <IconCircleX size={22} stroke={1} />\n        </i>\n        不感兴趣\n        <i className=\"arrow\" />\n      </span>\n      <ul className=\"ui_contextmenu sub\">\n        <li className=\"ui_contextmenu_item\">\n          <button\n            type=\"button\"\n            className=\"ui_contextmenu_btn \"\n          >\n            <i className=\"ico\" />\n            创建新歌单\n          </button>\n        </li>\n        <li className=\"hr\" />\n        <li className=\"ui_contextmenu_item\">\n          <button type=\"button\" className=\"ui_contextmenu_btn \">\n            <i className=\"ico\" />\n            创建新歌单\n          </button>\n        </li>\n        <li className=\"ui_contextmenu_item\">\n          <button type=\"button\" className=\"ui_contextmenu_btn \">\n            <i className=\"ico\" />\n            创建新歌单\n          </button>\n        </li>\n      </ul>\n    </li>\n  ),\n  下载: () => (\n    <li className=\"ui_contextmenu_item \">\n      <span className=\"ui_contextmenu_btn \">\n        <i className=\"ico\">\n          <IconDownload size={22} stroke={1} />\n        </i>\n        下载(L)\n        <i className=\"arrow\" />\n      </span>\n      <ul className=\"ui_contextmenu sub\">\n        <li className=\"ui_contextmenu_item\">\n          <button type=\"button\" className=\"ui_contextmenu_btn \">\n            <i className=\"ico\"><IconCirclePlus size={22} stroke={1} /></i>\n            创建新歌单\n          </button>\n        </li>\n        <li className=\"hr\" />\n        <li className=\"ui_contextmenu_item\">\n          <button type=\"button\" className=\"ui_contextmenu_btn \">\n            <i className=\"ico\"><IconMusic size={22} stroke={1} /></i>\n            创建新歌单\n          </button>\n        </li>\n        <li className=\"ui_contextmenu_item\">\n          <button type=\"button\" className=\"ui_contextmenu_btn \">\n            <i className=\"ico\"><IconMusic size={22} stroke={1} /></i>\n            创建新歌单\n          </button>\n        </li>\n      </ul>\n    </li>\n  ),\n\n});\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { baseUrl } = useSelector(({ common }) => common);\n  const { profile, playlist } = useSelector(({ account }) => account);\n  const {\n    contextMenuVisibility,\n    contextMenuX,\n    contextMenuY,\n    contextMenuItem,\n    contextMenuTotal,\n    contextMenuSechma,\n    contextMenuType,\n    contextMenuItemId,\n  } = useSelector(({ mask }) => mask);\n  const { globalX, globalY } = useSelector(({ inset }) => inset);\n  // console.log(globalLastY, contextMenuY);\n  const ownPlaylist = playlist.filter((item) => item.subscribed === false);\n  const ShareUrl = `${baseUrl}/${contextMenuType}?id=${contextMenuItemId}&userId=${profile.userId}`;\n  useEffect(() => {\n    dispatch(setContextMenuShareLink({\n      contextMenuShareLink: ShareUrl,\n    }));\n  }, []);\n\n  const handlePlay = () => {\n    dispatch(setAudioImmediate({\n      currentSong: contextMenuItem,\n    }));\n    dispatch(setDialogReset());\n  };\n\n  const handlePlayNext = () => {\n    dispatch(setAudioImmediateNext({\n      currentSong: contextMenuItem,\n    }));\n    dispatch(setDialogReset());\n  };\n\n  const handlePlayPlaylist = () => {\n    console.log('播放歌单');\n  };\n  const handlePlayNextPlaylist = () => {\n    console.log('下一首播放歌单');\n  };\n\n  const handleSubscribeMV = async () => {\n    try {\n      const { message } = await apiMVSub({\n        mvid: contextMenuItemId,\n        t: 1,\n      });\n      dispatch(setDialogReset());\n      dispatch(setToast(message));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCopyLink = () => {\n    // const data = new DataTransfer();\n    // data.items.add('text/plain', ShareUrl);\n    // await navigator.clipboard.writeText(ShareUrl);\n    // alert('链接复制成功');\n    useCopyLink(ShareUrl, () => {\n      dispatch(setToast('复制链接成功'));\n    });\n    dispatch(setDialogReset());\n  };\n\n  const handleCreatePlaylist = () => {\n    dispatch(setDialogCreatePlaylistShow());\n  };\n\n  const handleDialogShare = useCallback(() =>\n    // if (!isLogin) {\n    //   dispatch(setLoginVisibilty());\n    //   return dispatch(setDialogReset());\n    // }\n    dispatch(setDialogShareShow()),\n  []);\n\n  const Build = useMemo(() => {\n    const Dom = initBuild(() => dispatch(setDialogReset()));\n    return contextMenuSechma.map((block) => [block.join(','), block.map((item) => [item, Dom[item]])]);\n  }, [contextMenuSechma]);\n  if (!contextMenuVisibility) return null;\n  return (\n    <DomMask>\n      <ul\n        id=\"contextmenu\"\n        className=\"ui_contextmenu divide-y\"\n        style={{ left: contextMenuX - globalX, top: contextMenuY - globalY }}\n      >\n        {\n          Build.map(([wrapname, block]) => (\n            <div key={wrapname}>\n              {block.map(([item, Dom]) => (\n                <Dom\n                  {...{\n                    contextMenuTotal,\n                    contextMenuItem,\n                    handlePlay,\n                    handlePlayNext,\n                    handlePlayPlaylist,\n                    handlePlayNextPlaylist,\n                    handleDialogShare,\n                    handleCopyLink,\n                    handleCreatePlaylist,\n                    handleSubscribeMV,\n                    ownPlaylist,\n                    contextMenuType,\n                  }}\n                  key={item}\n                />\n              ))}\n            </div>\n          ))\n        }\n      </ul>\n    </DomMask>\n  );\n};\n"],"names":["dispatch","useDispatch","baseUrl","useSelector","common","account","profile","playlist","mask","contextMenuVisibility","contextMenuX","contextMenuY","contextMenuItem","contextMenuTotal","contextMenuSechma","contextMenuType","contextMenuItemId","inset","globalX","globalY","ownPlaylist","filter","item","subscribed","ShareUrl","userId","useEffect","setContextMenuShareLink","contextMenuShareLink","handlePlay","setAudioImmediate","currentSong","setDialogReset","handlePlayNext","setAudioImmediateNext","handlePlayPlaylist","console","log","handlePlayNextPlaylist","handleSubscribeMV","apiMVSub","mvid","t","message","setToast","handleCopyLink","useCopyLink","handleCreatePlaylist","setDialogCreatePlaylistShow","handleDialogShare","useCallback","setDialogShareShow","Build","useMemo","functionClose","Dom","评论","className","Link","to","id","onClick","IconMessage","size","stroke","播放","type","IconPlayerPlay","下一首播放","IconArrowForward","播放歌单","下一首播放歌单","查看歌单","播放MV","收藏MV","IconFolderPlus","收藏到歌单","IconCirclePlus","map","key","privacy","IconLock","IconMusic","name","分享","IconShare","复制链接","IconLink","不感兴趣","IconCircleX","下载","IconDownload","block","join","style","left","top","wrapname"],"sourceRoot":""}