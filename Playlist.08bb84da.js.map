{"version":3,"file":"Playlist.08bb84da.js","mappings":"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","sources":["webpack://wyy/./src/pages/Playlist/components/Header.tsx","webpack://wyy/./src/pages/Playlist/components/Subscribers/Subscribers.tsx","webpack://wyy/./src/pages/Playlist/Music.tsx","webpack://wyy/./src/pages/Playlist/components/Playlist.tsx","webpack://wyy/./src/pages/Playlist/components/Comments.tsx","webpack://wyy/./src/pages/Playlist/DJ.tsx","webpack://wyy/./src/pages/Playlist/Album.tsx","webpack://wyy/./src/pages/Playlist/Base.tsx"],"sourcesContent":["import React, { useState, memo } from 'react';\nimport classNames from 'classnames';\nimport DomGroupPlay from '@/components/GroupPlay';\nimport { transPlayCount, transSubscribeCount } from '@/common/utils';\nimport {\n  IconPlayerPlay,\n  IconFolderPlus,\n  IconScreenShare,\n  IconCloudDownload,\n  IconPlus,\n  IconCheckbox,\n  IconCaretUp,\n  IconCaretDown,\n} from '@tabler/icons';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\n\nconst DomT = memo(({ tags = [] }) => {\n  if (tags.length === 0) return null;\n  return (\n    <div className=\"tags\">\n      <span>标签：</span>\n      {tags.map((tag, index) => (\n        <span key={tag}>\n          {index > 0 && ' / '}\n          <Link to={`/home/playlist/${tag}`} className=\"tag ui_link\">\n            {tag}\n          </Link>\n        </span>\n      ))}\n    </div>\n  );\n});\n\nconst DomDescription = memo(({ description = '' }) => {\n  if (!description) return null;\n  const [open, setOpen] = useState(false);\n  const descriptionList = description.match(/^.*$/mg);\n  return (\n    <div className=\"relative pr-5\">\n      <div className=\"whitespace-pre-line leading-6\">\n        简介：\n        <span className={classNames('text-gray-500 select-text', !open && 'truncate inline-block max-w-xs align-bottom')}>\n          {open\n            ? description\n            : descriptionList[0]}\n        </span>\n        <button type=\"button\" onClick={() => setOpen(!open)} className=\"absolute top-0 right-0 text-gray-500\">\n          {\n            open\n              ? <IconCaretUp size={16} className=\"fill-current\" />\n              : <IconCaretDown size={16} className=\"fill-current\" />\n          }\n        </button>\n      </div>\n    </div>\n  );\n});\n\nexport default memo(({ data = {}, handleSub, songs }) =>\n  // console.log('playlist_music_header');\n  (\n    <div className=\"domPlaylistDetail_header p-8 flex\">\n      <div className=\"cover border rounded overflow-hidden flex-none w-92 h-92\">\n        <img\n          className=\"w-full h-full\"\n          src={`${data.playlist.coverImgUrl}?param=200y200`}\n          alt=\"\"\n        />\n      </div>\n      <div className=\"info flex-auto w-0 ml-5\">\n        <div className=\"name flex items-center\">\n          <span className=\"type text-red-500 border border-current px-1 py-0.5 rounded mr-2 leading-none\">歌单</span>\n          <span className=\"h1 select-text\">\n            {data.playlist.name || '我喜欢的音乐'}\n          </span>\n        </div>\n        <div className=\"creator flex items-center mt-2\">\n          <Link\n            to={`/user/${data.playlist.creator?.userId}`}\n            className=\"avator w-6 h-6 rounded-full overflow-hidden mr-2\"\n          >\n            <img\n              className=\"\"\n              src={`${data.playlist.creator?.avatarUrl}?param=50y50`}\n              alt=\"\"\n            />\n          </Link>\n\n          <Link to={`/user/${data.playlist.creator?.userId}`} className=\"nickname ui_link mr-2\">\n            {data.playlist.creator?.nickname}\n          </Link>\n\n          <span className=\"text-gray-500\">\n            {dayjs(data.playlist.createTime || Date.now()).format('YYYY-MM-DD')}\n            创建\n          </span>\n        </div>\n        <div className=\"actions flex space-x-2 mt-2\">\n          <DomGroupPlay playlist={songs} />\n          <button\n            onClick={() => handleSub(data.playlist.subscribed)}\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\"\n          >\n            {\n              data.playlist.subscribed\n                ? <IconCheckbox size={20} stroke={1} />\n                : <IconFolderPlus size={20} stroke={1} />\n            }\n              &nbsp;\n            {\n              data.playlist.subscribed\n                ? '已收藏'\n                : '收藏'\n            }\n            {`(${transSubscribeCount(data.playlist.subscribedCount)})`}\n          </button>\n          <button type=\"button\" className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\">\n            <IconScreenShare size={20} stroke={1} />\n            &nbsp;\n            分享\n            {`(${transSubscribeCount(data.playlist.shareCount)})`}\n          </button>\n          <button type=\"button\" className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\">\n            <IconCloudDownload size={20} stroke={1} />\n            &nbsp;\n            下载全部\n          </button>\n\n        </div>\n        <div className=\"space-y-1 mt-2\">\n          <DomT tags={data.playlist.tags} />\n\n          <div>\n            <span className=\"mr-3\">\n              歌曲：\n              <span className=\"text-gray-500\">\n                {data.playlist.trackCount}\n              </span>\n            </span>\n            <span>\n              播放：\n              <span className=\"text-gray-500\">\n                {transPlayCount(data.playlist.playCount)}\n              </span>\n            </span>\n          </div>\n          <DomDescription description={data.playlist.description} />\n        </div>\n      </div>\n    </div>\n  ));\n","import React, { memo, useEffect, useState } from \"react\";\nimport { apiPlaylistSubscribers } from \"@/api\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.scss\";\nimport Gender from \"@/components/Gender\";\nimport Page from \"@/components/Page\";\n// import { useQuery } from \"react-query\";\n\nexport default memo(({ id }) => {\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const limit = 60;\n  const [page, setPage] = useState(1);\n  // const {\n  //   data: { subscribers, total },\n  // } = useQuery(\"subscribers\", async () => {\n  //   const { subscribers, total } = await apiPlaylistSubscribers({\n  //     id,\n  //     limit,\n  //     offset: (page - 1) * limit,\n  //   });\n  //   return {\n  //     subscribers,\n  //     total,\n  //   };\n  // });\n  const handleInit = async () => {\n    try {\n      const { subscribers, total } = await apiPlaylistSubscribers({\n        id,\n        limit,\n        offset: (page - 1) * limit,\n      });\n      setData(subscribers);\n      setTotal(total);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, [page]);\n  return (\n    <div className=\"px-8\">\n      <div className=\"domPlaylistDetail_subscribers flex justify-between flex-wrap\">\n        {data.map((item) => (\n          <div key={item.userId} className=\"item flex mt-6\">\n            <Link\n              to={`/user/${item.userId}`}\n              className=\"avatar border rounded-full overflow-hidden\"\n            >\n              <img src={`${item.avatarUrl}?param=100y100`} alt=\"\" />\n            </Link>\n            <div className=\"ml-2 flex-auto w-0 flex flex-col justify-center\">\n              <div className=\"text-sm flex items-center\">\n                <Link to={`/user/${item.userId}`}>{item.nickname}</Link>\n                &nbsp;\n                <Gender gender={item.gender} size={16} />\n              </div>\n              <div className=\"mt-2 truncate\">{item.signature}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <Page total={Math.ceil(total / limit)} page={page} func={setPage} />\n    </div>\n  );\n});\n","import React, { useEffect, useState, memo, useCallback } from \"react\";\n\nimport { apiPlaylistDetail, apiPlaylistSubscribe, apiSongDetail } from \"@/api\";\n\nimport { setToast } from \"@/reducers/mask/slice\";\nimport classNames from \"classnames\";\nimport DomLoading from \"@/components/Loading\";\n\nimport produce from \"immer\";\nimport Header from \"./components/Header\";\nimport Playlist from \"./components/Playlist\";\nimport Comments from \"./components/Comments\";\nimport Subscribers from \"./components/Subscribers\";\nimport { useAppDispatch } from \"@/reducers/hooks\";\n\nconst navs = [\n  [\"歌曲列表\", \"playlist\"],\n  [\"评论\", \"comments\"],\n  [\"收藏者\", \"subscribers\"],\n];\n\nconst subpages = {\n  playlist: Playlist,\n  comments: Comments,\n  subscribers: Subscribers,\n};\n\nexport default memo(({ id }) => {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(true);\n  const [songs, setSongs] = useState([]);\n  const [data, setData] = useState({});\n  // const [privileges, setPrivileges] = useState([]);\n  const [status, setStatus] = useState(\"playlist\");\n  const handleInit = async () => {\n    try {\n      const data = await apiPlaylistDetail({\n        id,\n      });\n      setData(\n        produce((draft) => {\n          for (const key in data) {\n            draft[key] = data[key];\n          }\n        })\n      );\n      if (data.playlist.trackCount > 0) {\n        const { songs } = await apiSongDetail({\n          ids: data.playlist.trackIds.map(({ id }) => id).join(\",\"),\n        });\n        setSongs(songs);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // TODO\n  const handleSub = useCallback(\n    async (isSub) => {\n      try {\n        const { code } = await apiPlaylistSubscribe({\n          t: isSub ? 2 : 1,\n          id,\n        });\n        if (code === 200) {\n          dispatch(setToast(isSub ? \"取消收藏成功！\" : \"收藏成功！\"));\n          setData(\n            produce((draft) => {\n              draft.playlist.subscribed = !isSub;\n            })\n          );\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    [id]\n  );\n\n  useEffect(() => {\n    handleInit();\n  }, [id]);\n\n  if (loading)\n    return (\n      <div className=\"w-full h-full flex-center\">\n        <DomLoading />\n      </div>\n    );\n  return (\n    <div className=\"overflow-auto h-full\">\n      <Header {...{ data, handleSub, songs }} />\n      <div className=\"mt-4\">\n        <div className=\"space-x-4 flex items-baseline px-8\">\n          {navs.map(([nav, code]) => (\n            <button\n              type=\"button\"\n              className={classNames(\n                \"text-sm\",\n                status === code && \"font-bold ui_underline\"\n              )}\n              key={nav}\n              onClick={() => setStatus(code)}\n            >\n              {nav}\n              {nav === \"评论\" && `(${data.playlist.commentCount})`}\n            </button>\n          ))}\n        </div>\n        <div>\n          {((SubPage, params) => (\n            <SubPage {...params} />\n          ))(subpages[status], { id, songs })}\n          {/* <DomMain id={id} status={status} songs={songs} /> */}\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\n\nimport DomMenuCreate from '@/components/MenuCreate';\nimport DomRank from '@/components/Table/Rank';\nimport DomHeart from '@/components/Table/Heart';\nimport DomDownload from '@/components/Table/Download';\nimport DomName from '@/components/Table/Name';\nimport DomArtists from '@/components/Table/Artists';\nimport DomAlbum from '@/components/Table/Album';\n\nexport default ({ songs = [] }) => {\n  // console.log('playlist_music_playlist');\n  if (songs.length === 0) {\n    return (\n      <div className=\"pt-16 text-center text-sm text-gray-400\">暂无音乐</div>\n    );\n  }\n  return (\n    <div style={{ '--ui_grid_template': '36px / 30px 30px 30px 36% 4fr 6fr 2fr' }} className=\"mt-4\">\n      <div className=\"grid ui_grid_template pl-8\">\n        <div />\n        <div />\n        <div />\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">音乐标题</div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">歌手</div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">专辑</div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">时长</div>\n      </div>\n      {songs.map((item, index) => (\n        <DomMenuCreate\n          schema={[\n            ['评论',\n              '播放',\n              '下一首播放'],\n            ['收藏到歌单',\n              '分享',\n              '复制链接',\n              '不感兴趣',\n              '下载'],\n          ]}\n          type=\"song\"\n          item={item}\n          key={item.id}\n        >\n          <div\n            tabIndex=\"2\"\n            className={classNames('grid items-center focus:outline-none focus:bg-gray-200 hover:bg-gray-100 ui_grid_template pl-8', index % 2 === 0 && 'bg-gray-50')}\n          >\n            <div className=\"px-1\">\n              <DomRank index={index} id={item.id} />\n            </div>\n            <div className=\"px-1\">\n              <DomHeart id={item.id} />\n            </div>\n            <div className=\"px-1\">\n              <DomDownload />\n            </div>\n            <DomName className=\"px-1\" item={item} />\n            <DomArtists className=\"px-1\" artists={item.ar} />\n            <DomAlbum className=\"px-1\" name={item.al.name} id={item.al.id} />\n            <div className=\"text-gray-500 px-1\">\n              {dayjs(item.dt).format('mm:ss')}\n            </div>\n          </div>\n        </DomMenuCreate>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport DomCommentsList from '@/components/CommentsList';\nimport DomWrite from '@/components/Write';\nimport { apiCommentPlaylist } from '@/api';\n\nexport default ({ id }) => {\n  const [comments, setComments] = useState({});\n  const handleInit = async () => {\n    try {\n      const comments = await apiCommentPlaylist({\n        id,\n      });\n      setComments(comments);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"px-8\">\n      {/* TODO */}\n      <div className=\"pt-10 pb-10\">\n        <DomWrite />\n      </div>\n      <DomCommentsList comments={comments} />\n    </div>\n  );\n};\n","import React, { memo, useEffect } from \"react\";\nimport { apiDjDetail } from \"@/api\";\n\nexport default memo(({ id }) => {\n  const handleInit = async () => {\n    try {\n      const {} = await apiDjDetail({\n        rid: id,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"domPlaylistDetail\">\n      <div className=\"domPlaylistDetail_header\">{}</div>\n      <div className=\"domPlaylistDetail_main\">TODO</div>\n    </div>\n  );\n});\n","import React, { useState } from 'react';\n\nexport default () => {\n  const [data] = useState(0);\n  return (\n    <div>TOTO</div>\n  );\n};\n","import React, { memo } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport useMemoParams from \"@/hooks/useMemoParams\";\nimport Music from \"./Music\";\nimport DJ from \"./DJ\";\nimport Album from \"./Album\";\n\nexport default memo(() => (\n  <Switch>\n    <Route path=\"/playlist/music/:id\">{useMemoParams(Music)}</Route>\n    <Route path=\"/playlist/dj/:id\">{useMemoParams(DJ)}</Route>\n    <Route path=\"/playlist/album/:id\">{useMemoParams(Album)}</Route>\n    <Route path=\"/playlist\">\n      <Music />\n    </Route>\n  </Switch>\n));\n"],"names":["DomT","memo","tags","length","className","map","tag","index","key","Link","to","DomDescription","description","useState","open","setOpen","descriptionList","match","classNames","type","onClick","IconCaretUp","size","IconCaretDown","data","handleSub","songs","src","playlist","coverImgUrl","alt","name","creator","userId","avatarUrl","nickname","dayjs","createTime","Date","now","format","subscribed","IconCheckbox","stroke","IconFolderPlus","transSubscribeCount","subscribedCount","IconScreenShare","shareCount","IconCloudDownload","trackCount","transPlayCount","playCount","id","setData","total","setTotal","page","setPage","handleInit","apiPlaylistSubscribers","limit","offset","subscribers","console","log","useEffect","item","Gender","gender","signature","Page","Math","ceil","func","navs","subpages","style","schema","tabIndex","artists","ar","al","dt","comments","setComments","apiCommentPlaylist","Subscribers","SubPage","params","dispatch","useAppDispatch","loading","setLoading","setSongs","status","setStatus","apiPlaylistDetail","produce","draft","apiSongDetail","ids","trackIds","join","useCallback","isSub","apiPlaylistSubscribe","t","code","setToast","Header","nav","commentCount","apiDjDetail","rid","Switch","Route","path","useMemoParams","Music","DJ","Album"],"sourceRoot":""}