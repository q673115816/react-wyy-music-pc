{"version":3,"file":"Message.a2401e7a.js","mappings":"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","sources":["webpack://wyy/./src/features/Message/Download.tsx","webpack://wyy/./src/reducers/local/slice.ts","webpack://wyy/./src/features/Message/Local.tsx","webpack://wyy/./src/features/Message/Config.ts","webpack://wyy/./src/features/Message/Message.tsx","webpack://wyy/./src/features/Message/Router.tsx"],"sourcesContent":["import React, { useState, memo, useCallback } from \"react\";\nimport classNames from \"classnames\";\n\nconst nav = [\"已下载单曲\", \"已下载电台节目\", \"已下载MV\", \"正在下载\"];\n\nexport default memo(() => {\n  console.log(\"download\");\n  const [visibility, setVisibility] = useState(false);\n  const [current, setCurrent] = useState(\"已下载单曲\");\n  const handleToggleVisibility = useCallback(() => {\n    setVisibility(!visibility);\n  }, []);\n  return (\n    <div className=\"domManage\">\n      <div className=\"domManage_main\">\n        <div className=\"domManage_nav\">\n          {nav.map((item) => (\n            <button\n              onClick={() => setCurrent(item)}\n              key={item}\n              className={classNames(\"domManage_nav_link\", {\n                on: item === current,\n              })}\n              type=\"button\"\n            >\n              {item}\n            </button>\n          ))}\n        </div>\n        <div className=\"domManage_list overflow-auto max-h-full flex-auto\" />\n        {visibility && (\n          <div className=\"domManage_dialog\">\n            <button\n              type=\"button\"\n              className=\"close\"\n              onClick={handleToggleVisibility}\n            >\n              ×\n            </button>\n            <div className=\"title\">选择本地音乐文件夹</div>\n            <div className=\"tips\">\n              将自动扫描您勾选的目录，文件增删实时同步。\n            </div>\n            <ul>\n              <li>\n                <span className=\"checkbox\">\n                  <input type=\"text\" />\n                  <i className=\"material-icons\">checkbox</i>\n                </span>\n                暂时没法做\n              </li>\n            </ul>\n            <div className=\"actions\">\n              <button\n                type=\"button\"\n                className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full red\"\n              >\n                确认\n              </button>\n              <button\n                type=\"button\"\n                className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full\"\n              >\n                添加文件\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport interface LocalState {\n  current: string;\n}\n\nconst initialState: LocalState = {\n  current: \"歌曲\",\n};\n\nconst slice = createSlice({\n  name: \"local\",\n  initialState,\n  reducers: {\n    setLocalCurrent(state, action) {\n      state.current = action.payload.current;\n    },\n  },\n});\n\nexport default slice.reducer;\n\nexport const { setLocalCurrent } = slice.actions;\n","import React, { useCallback, useState, memo } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"@/reducers/hooks\";\nimport classNames from \"classnames\";\nimport { setLocalCurrent } from \"@/reducers/local/slice\";\n\nconst nav = [\"歌曲\", \"歌手\", \"专辑\", \"文件夹\"];\n\nconst Local = () => {\n  const dispatch = useAppDispatch();\n  const [visibility, setVisibility] = useState(false);\n  const { current } = useAppSelector(({ local }) => local);\n  const handleToggleVisibility = useCallback(() => {\n    setVisibility(!visibility);\n  }, [visibility]);\n  return (\n    <div className=\"domManage\">\n      <div className=\"domManage_header ui_header\">\n        <span className=\"domManage_header_title h1\">本地音乐</span>\n        <span className=\"domManage_header_total\">共0首</span>\n        <button\n          type=\"button\"\n          className=\"domManage_header_selectFolder\"\n          onClick={handleToggleVisibility}\n        >\n          选择目录\n        </button>\n      </div>\n      <div className=\"domManage_main\">\n        <div className=\"domManage_nav\">\n          {nav.map((item) => (\n            <button\n              onClick={() => dispatch(setLocalCurrent({ current: item }))}\n              key={item}\n              className={classNames(\n                \"domManage_nav_link focus:outline-none\",\n                item === current && \"ui_underline font-bold\"\n              )}\n              type=\"button\"\n            >\n              {item}\n            </button>\n          ))}\n        </div>\n        <div className=\"domManage_noFolder\">\n          <div className=\"domManage_noFolder_title\">请添加本地文件夹</div>\n          <div className=\"domManage_noFolder_tips\">\n            升级本地音乐为高品质音乐并和好友分享！\n          </div>\n          <button\n            type=\"button\"\n            className=\"domManage_noFolder_button\"\n            onClick={handleToggleVisibility}\n          >\n            选择本地音乐文件夹\n          </button>\n        </div>\n        <div\n          className=\"domManage_dialog\"\n          style={{ display: visibility ? \"\" : \"none\" }}\n        >\n          <button\n            type=\"button\"\n            className=\"close\"\n            onClick={handleToggleVisibility}\n          >\n            ×\n          </button>\n          <div className=\"title\">选择本地音乐文件夹</div>\n          <div className=\"tips\">将自动扫描您勾选的目录，文件增删实时同步。</div>\n          <ul>\n            <li>\n              <span className=\"checkbox\">\n                <input type=\"text\" />\n                <i className=\"material-icons\">checkbox</i>\n              </span>\n              暂时没法做\n            </li>\n          </ul>\n          <div className=\"actions\">\n            <button\n              type=\"button\"\n              className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full red\"\n            >\n              确认\n            </button>\n            <button\n              type=\"button\"\n              className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full\"\n            >\n              添加文件\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Local);\n","import { FC } from \"react\";\nimport Download from \"./Download\";\nimport Local from \"./Local\";\ninterface Nav {\n  name: string;\n  path: string;\n  Element: FC;\n}\n\nexport const navs: Nav[] = [\n  {\n    name: \"下载管理\",\n    path: \"download\",\n    Element: Download,\n  },\n  {\n    name: \"本地音乐\",\n    path: \"local\",\n    Element: Local,\n  },\n];\n","import React, { memo } from \"react\";\nimport { NavLink, Outlet } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { navs } from \"./Config\";\nconst Message = () => {\n  return (\n    <div>\n      <div className=\"px-8 py-5 space-x-4 text-base\">\n        {navs.map(({ path, name }) => (\n          <NavLink\n            key={path}\n            to={path}\n            className={({ isActive }) =>\n              classNames(isActive && \"text-xl font-black ui_underline\")\n            }\n          >\n            {name}\n          </NavLink>\n        ))}\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default memo(Message);\n","import React, { FC } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport Message from \"./Message\";\nimport { navs } from \"./Config\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route element={<Message />}>\n        {navs.map(({ path, Element }) => (\n          <Route path={path} key={path} element={<Element />} />\n        ))}\n        <Route path=\"*\" element={<Navigate to={\"download\"} />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["nav","memo","console","log","useState","visibility","setVisibility","current","setCurrent","handleToggleVisibility","useCallback","className","map","item","onClick","key","classNames","on","type","slice","createSlice","name","initialState","reducers","setLocalCurrent","state","action","payload","actions","Local","dispatch","useAppDispatch","useAppSelector","local","style","display","navs","path","Element","Download","Message","NavLink","to","isActive","Outlet","Routes","Route","element","Navigate"],"sourceRoot":""}