{"version":3,"file":"sentry.5df9bd7f.js","mappings":"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","sources":["webpack://wyy/./node_modules/@sentry/hub/esm/session.js","webpack://wyy/./node_modules/@sentry/hub/esm/hub.js","webpack://wyy/./node_modules/@sentry/hub/esm/scope.js","webpack://wyy/./node_modules/@sentry/core/esm/version.js","webpack://wyy/./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack://wyy/./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack://wyy/./node_modules/@sentry/utils/esm/polyfill.js","webpack://wyy/./node_modules/@sentry/utils/esm/error.js","webpack://wyy/./node_modules/@sentry/utils/esm/dsn.js","webpack://wyy/./node_modules/@sentry/core/esm/integration.js","webpack://wyy/./node_modules/@sentry/core/esm/baseclient.js","webpack://wyy/./node_modules/@sentry/types/esm/status.js","webpack://wyy/./node_modules/@sentry/core/esm/transports/noop.js","webpack://wyy/./node_modules/@sentry/types/esm/severity.js","webpack://wyy/./node_modules/@sentry/core/esm/basebackend.js","webpack://wyy/./node_modules/@sentry/browser/esm/tracekit.js","webpack://wyy/./node_modules/@sentry/browser/esm/parsers.js","webpack://wyy/./node_modules/@sentry/browser/esm/eventbuilder.js","webpack://wyy/./node_modules/@sentry/core/esm/request.js","webpack://wyy/./node_modules/@sentry/core/esm/api.js","webpack://wyy/./node_modules/@sentry/browser/esm/transports/utils.js","webpack://wyy/./node_modules/@sentry/utils/esm/promisebuffer.js","webpack://wyy/./node_modules/@sentry/browser/esm/transports/base.js","webpack://wyy/./node_modules/@sentry/utils/esm/async.js","webpack://wyy/./node_modules/@sentry/browser/esm/transports/fetch.js","webpack://wyy/./node_modules/@sentry/browser/esm/transports/xhr.js","webpack://wyy/./node_modules/@sentry/browser/esm/backend.js","webpack://wyy/./node_modules/@sentry/minimal/esm/index.js","webpack://wyy/./node_modules/@sentry/browser/esm/helpers.js","webpack://wyy/./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack://wyy/./node_modules/@sentry/browser/esm/client.js","webpack://wyy/./node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack://wyy/./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack://wyy/./node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack://wyy/./node_modules/@sentry/browser/esm/integrations/dedupe.js","webpack://wyy/./node_modules/@sentry/browser/esm/integrations/useragent.js","webpack://wyy/./node_modules/@sentry/browser/esm/sdk.js","webpack://wyy/./node_modules/@sentry/react/esm/sdk.js","webpack://wyy/./node_modules/@sentry/core/esm/sdk.js","webpack://wyy/./node_modules/@sentry/types/esm/transaction.js","webpack://wyy/./node_modules/@sentry/tracing/esm/errors.js","webpack://wyy/./node_modules/@sentry/tracing/esm/hubextensions.js","webpack://wyy/./node_modules/@sentry/tracing/esm/idletransaction.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/backgroundtab.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/metrics.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/request.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/router.js","webpack://wyy/./node_modules/@sentry/tracing/esm/browser/browsertracing.js","webpack://wyy/./node_modules/@sentry/tracing/esm/integrations/node/express.js","webpack://wyy/./node_modules/@sentry/tracing/esm/integrations/node/postgres.js","webpack://wyy/./node_modules/@sentry/tracing/esm/integrations/node/mysql.js","webpack://wyy/./node_modules/@sentry/tracing/esm/integrations/node/mongo.js","webpack://wyy/./node_modules/@sentry/tracing/esm/index.js","webpack://wyy/./node_modules/@sentry/tracing/esm/span.js","webpack://wyy/./node_modules/@sentry/tracing/esm/spanstatus.js","webpack://wyy/./node_modules/@sentry/tracing/esm/transaction.js","webpack://wyy/./node_modules/@sentry/tracing/esm/utils.js","webpack://wyy/./node_modules/@sentry/types/esm/session.js","webpack://wyy/./node_modules/@sentry/types/esm/transport.js","webpack://wyy/./node_modules/@sentry/utils/esm/browser.js","webpack://wyy/./node_modules/@sentry/utils/esm/instrument.js","webpack://wyy/./node_modules/@sentry/utils/esm/is.js","webpack://wyy/./node_modules/@sentry/utils/esm/logger.js","webpack://wyy/./node_modules/@sentry/utils/esm/misc.js","webpack://wyy/./node_modules/@sentry/utils/esm/node.js","webpack://wyy/./node_modules/@sentry/utils/esm/memo.js","webpack://wyy/./node_modules/@sentry/utils/esm/object.js","webpack://wyy/./node_modules/@sentry/utils/esm/stacktrace.js","webpack://wyy/./node_modules/@sentry/utils/esm/string.js","webpack://wyy/./node_modules/@sentry/utils/esm/supports.js","webpack://wyy/./node_modules/@sentry/utils/esm/syncpromise.js","webpack://wyy/./node_modules/@sentry/utils/esm/time.js"],"sourcesContent":["import { SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * @inheritdoc\n */\nvar Session = /** @class */ (function () {\n    function Session(context) {\n        this.errors = 0;\n        this.sid = uuid4();\n        this.duration = 0;\n        this.status = SessionStatus.Ok;\n        this.init = true;\n        this.ignoreDuration = false;\n        // Both timestamp and started are in seconds since the UNIX epoch.\n        var startingTime = timestampInSeconds();\n        this.timestamp = startingTime;\n        this.started = startingTime;\n        if (context) {\n            this.update(context);\n        }\n    }\n    /** JSDoc */\n    // eslint-disable-next-line complexity\n    Session.prototype.update = function (context) {\n        if (context === void 0) { context = {}; }\n        if (context.user) {\n            if (!this.ipAddress && context.user.ip_address) {\n                this.ipAddress = context.user.ip_address;\n            }\n            if (!this.did && !context.did) {\n                this.did = context.user.id || context.user.email || context.user.username;\n            }\n        }\n        this.timestamp = context.timestamp || timestampInSeconds();\n        if (context.ignoreDuration) {\n            this.ignoreDuration = context.ignoreDuration;\n        }\n        if (context.sid) {\n            // Good enough uuid validation. — Kamil\n            this.sid = context.sid.length === 32 ? context.sid : uuid4();\n        }\n        if (context.init !== undefined) {\n            this.init = context.init;\n        }\n        if (!this.did && context.did) {\n            this.did = \"\" + context.did;\n        }\n        if (typeof context.started === 'number') {\n            this.started = context.started;\n        }\n        if (this.ignoreDuration) {\n            this.duration = undefined;\n        }\n        else if (typeof context.duration === 'number') {\n            this.duration = context.duration;\n        }\n        else {\n            var duration = this.timestamp - this.started;\n            this.duration = duration >= 0 ? duration : 0;\n        }\n        if (context.release) {\n            this.release = context.release;\n        }\n        if (context.environment) {\n            this.environment = context.environment;\n        }\n        if (!this.ipAddress && context.ipAddress) {\n            this.ipAddress = context.ipAddress;\n        }\n        if (!this.userAgent && context.userAgent) {\n            this.userAgent = context.userAgent;\n        }\n        if (typeof context.errors === 'number') {\n            this.errors = context.errors;\n        }\n        if (context.status) {\n            this.status = context.status;\n        }\n    };\n    /** JSDoc */\n    Session.prototype.close = function (status) {\n        if (status) {\n            this.update({ status: status });\n        }\n        else if (this.status === SessionStatus.Ok) {\n            this.update({ status: SessionStatus.Exited });\n        }\n        else {\n            this.update();\n        }\n    };\n    /** JSDoc */\n    Session.prototype.toJSON = function () {\n        return dropUndefinedKeys({\n            sid: \"\" + this.sid,\n            init: this.init,\n            // Make sure that sec is converted to ms for date constructor\n            started: new Date(this.started * 1000).toISOString(),\n            timestamp: new Date(this.timestamp * 1000).toISOString(),\n            status: this.status,\n            errors: this.errors,\n            did: typeof this.did === 'number' || typeof this.did === 'string' ? \"\" + this.did : undefined,\n            duration: this.duration,\n            attrs: dropUndefinedKeys({\n                release: this.release,\n                environment: this.environment,\n                ip_address: this.ipAddress,\n                user_agent: this.userAgent,\n            }),\n        });\n    };\n    return Session;\n}());\nexport { Session };\n//# sourceMappingURL=session.js.map","import { __assign, __read, __spread } from \"tslib\";\n/* eslint-disable max-lines */\nimport { SessionStatus, } from '@sentry/types';\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalObject, isNodeEnv, logger, uuid4 } from '@sentry/utils';\nimport { Scope } from './scope';\nimport { Session } from './session';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 4;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, _version) {\n        if (scope === void 0) { scope = new Scope(); }\n        if (_version === void 0) { _version = API_VERSION; }\n        this._version = _version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this._stack = [{}];\n        this.getStackTop().scope = scope;\n        if (client) {\n            this.bindClient(client);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this._version < version;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n        if (client && client.setupIntegrations) {\n            client.setupIntegrations();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var scope = Scope.clone(this.getScope());\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.popScope = function () {\n        if (this.getStack().length <= 1)\n            return false;\n        return !!this.getStack().pop();\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this._stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this._stack[this._stack.length - 1];\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimic the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error('Sentry syntheticException');\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: exception,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureException', exception, __assign(__assign({}, finalHint), { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimic the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error(message);\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: message,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureMessage', message, level, __assign(__assign({}, finalHint), { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = uuid4();\n        if (event.type !== 'transaction') {\n            this._lastEventId = eventId;\n        }\n        this._invokeClient('captureEvent', event, __assign(__assign({}, hint), { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        var _a = this.getStackTop(), scope = _a.scope, client = _a.client;\n        if (!scope || !client)\n            return;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _b = (client.getOptions && client.getOptions()) || {}, _c = _b.beforeBreadcrumb, beforeBreadcrumb = _c === void 0 ? null : _c, _d = _b.maxBreadcrumbs, maxBreadcrumbs = _d === void 0 ? DEFAULT_BREADCRUMBS : _d;\n        if (maxBreadcrumbs <= 0)\n            return;\n        var timestamp = dateTimestampInSeconds();\n        var mergedBreadcrumb = __assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null)\n            return;\n        scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setUser = function (user) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setUser(user);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTags = function (tags) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setTags(tags);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtras = function (extras) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setExtras(extras);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTag = function (key, value) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setTag(key, value);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtra = function (key, extra) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setExtra(key, extra);\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype.setContext = function (name, context) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setContext(name, context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var _a = this.getStackTop(), scope = _a.scope, client = _a.client;\n        if (scope && client) {\n            callback(scope);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getIntegration = function (integration) {\n        var client = this.getClient();\n        if (!client)\n            return null;\n        try {\n            return client.getIntegration(integration);\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startSpan = function (context) {\n        return this._callExtensionMethod('startSpan', context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startTransaction = function (context, customSamplingContext) {\n        return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.traceHeaders = function () {\n        return this._callExtensionMethod('traceHeaders');\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureSession = function (endSession) {\n        if (endSession === void 0) { endSession = false; }\n        // both send the update and pull the session from the scope\n        if (endSession) {\n            return this.endSession();\n        }\n        // only send the update\n        this._sendSessionUpdate();\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.endSession = function () {\n        var _a, _b, _c, _d, _e;\n        (_c = (_b = (_a = this.getStackTop()) === null || _a === void 0 ? void 0 : _a.scope) === null || _b === void 0 ? void 0 : _b.getSession()) === null || _c === void 0 ? void 0 : _c.close();\n        this._sendSessionUpdate();\n        // the session is over; take it off of the scope\n        (_e = (_d = this.getStackTop()) === null || _d === void 0 ? void 0 : _d.scope) === null || _e === void 0 ? void 0 : _e.setSession();\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startSession = function (context) {\n        var _a = this.getStackTop(), scope = _a.scope, client = _a.client;\n        var _b = (client && client.getOptions()) || {}, release = _b.release, environment = _b.environment;\n        // Will fetch userAgent if called from browser sdk\n        var global = getGlobalObject();\n        var userAgent = (global.navigator || {}).userAgent;\n        var session = new Session(__assign(__assign(__assign({ release: release,\n            environment: environment }, (scope && { user: scope.getUser() })), (userAgent && { userAgent: userAgent })), context));\n        if (scope) {\n            // End existing session if there's one\n            var currentSession = scope.getSession && scope.getSession();\n            if (currentSession && currentSession.status === SessionStatus.Ok) {\n                currentSession.update({ status: SessionStatus.Exited });\n            }\n            this.endSession();\n            // Afterwards we set the new session on the scope\n            scope.setSession(session);\n        }\n        return session;\n    };\n    /**\n     * Sends the current Session on the scope\n     */\n    Hub.prototype._sendSessionUpdate = function () {\n        var _a = this.getStackTop(), scope = _a.scope, client = _a.client;\n        if (!scope)\n            return;\n        var session = scope.getSession && scope.getSession();\n        if (session) {\n            if (client && client.captureSession) {\n                client.captureSession(session);\n            }\n        }\n    };\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client.\n     * @param args Arguments to pass to the client function.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype._invokeClient = function (method) {\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _b = this.getStackTop(), scope = _b.scope, client = _b.client;\n        if (client && client[method]) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n            (_a = client)[method].apply(_a, __spread(args, [scope]));\n        }\n    };\n    /**\n     * Calls global extension method and binding current instance to the function call\n     */\n    // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype._callExtensionMethod = function (method) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var carrier = getMainCarrier();\n        var sentry = carrier.__SENTRY__;\n        if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n            return sentry.extensions[method].apply(this, args);\n        }\n        logger.warn(\"Extension method \" + method + \" couldn't be found, doing nothing.\");\n    };\n    return Hub;\n}());\nexport { Hub };\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier() {\n    var carrier = getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        extensions: {},\n        hub: undefined,\n    };\n    return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there (applicable only to Node environment)\n    if (isNodeEnv()) {\n        return getHubFromActiveDomain(registry);\n    }\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n}\n/**\n * Returns the active domain, if one exists\n * @deprecated No longer used; remove in v7\n * @returns The domain, or undefined if there is no active domain\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveDomain() {\n    logger.warn('Function `getActiveDomain` is deprecated and will be removed in a future version.');\n    var sentry = getMainCarrier().__SENTRY__;\n    return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n    var _a, _b, _c;\n    try {\n        var activeDomain = (_c = (_b = (_a = getMainCarrier().__SENTRY__) === null || _a === void 0 ? void 0 : _a.extensions) === null || _b === void 0 ? void 0 : _b.domain) === null || _c === void 0 ? void 0 : _c.active;\n        // If there's no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or it's an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub)\n        return carrier.__SENTRY__.hub;\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = new Hub();\n    return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier, hub) {\n    if (!carrier)\n        return false;\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = hub;\n    return true;\n}\n//# sourceMappingURL=hub.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { dateTimestampInSeconds, getGlobalObject, isPlainObject, isThenable, SyncPromise } from '@sentry/utils';\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifying is happening. */\n        this._notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this._scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this._eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this._breadcrumbs = [];\n        /** User */\n        this._user = {};\n        /** Tags */\n        this._tags = {};\n        /** Extra */\n        this._extra = {};\n        /** Contexts */\n        this._contexts = {};\n    }\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        if (scope) {\n            newScope._breadcrumbs = __spread(scope._breadcrumbs);\n            newScope._tags = __assign({}, scope._tags);\n            newScope._extra = __assign({}, scope._extra);\n            newScope._contexts = __assign({}, scope._contexts);\n            newScope._user = scope._user;\n            newScope._level = scope._level;\n            newScope._span = scope._span;\n            newScope._session = scope._session;\n            newScope._transactionName = scope._transactionName;\n            newScope._fingerprint = scope._fingerprint;\n            newScope._eventProcessors = __spread(scope._eventProcessors);\n            newScope._requestSession = scope._requestSession;\n        }\n        return newScope;\n    };\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n        this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this._eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n        this._user = user || {};\n        if (this._session) {\n            this._session.update({ user: user });\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getUser = function () {\n        return this._user;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getRequestSession = function () {\n        return this._requestSession;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setRequestSession = function (requestSession) {\n        this._requestSession = requestSession;\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n        this._tags = __assign(__assign({}, this._tags), tags);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this._tags = __assign(__assign({}, this._tags), (_a = {}, _a[key] = value, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extras) {\n        this._extra = __assign(__assign({}, this._extra), extras);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this._extra = __assign(__assign({}, this._extra), (_a = {}, _a[key] = extra, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this._fingerprint = fingerprint;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n        this._level = level;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransactionName = function (name) {\n        this._transactionName = name;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Can be removed in major version.\n     * @deprecated in favor of {@link this.setTransactionName}\n     */\n    Scope.prototype.setTransaction = function (name) {\n        return this.setTransactionName(name);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setContext = function (key, context) {\n        var _a;\n        if (context === null) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete this._contexts[key];\n        }\n        else {\n            this._contexts = __assign(__assign({}, this._contexts), (_a = {}, _a[key] = context, _a));\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n        this._span = span;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getSpan = function () {\n        return this._span;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getTransaction = function () {\n        var _a, _b, _c, _d;\n        // often, this span will be a transaction, but it's not guaranteed to be\n        var span = this.getSpan();\n        // try it the new way first\n        if ((_a = span) === null || _a === void 0 ? void 0 : _a.transaction) {\n            return (_b = span) === null || _b === void 0 ? void 0 : _b.transaction;\n        }\n        // fallback to the old way (known bug: this only finds transactions with sampled = true)\n        if ((_d = (_c = span) === null || _c === void 0 ? void 0 : _c.spanRecorder) === null || _d === void 0 ? void 0 : _d.spans[0]) {\n            return span.spanRecorder.spans[0];\n        }\n        // neither way found a transaction\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSession = function (session) {\n        if (!session) {\n            delete this._session;\n        }\n        else {\n            this._session = session;\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getSession = function () {\n        return this._session;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.update = function (captureContext) {\n        if (!captureContext) {\n            return this;\n        }\n        if (typeof captureContext === 'function') {\n            var updatedScope = captureContext(this);\n            return updatedScope instanceof Scope ? updatedScope : this;\n        }\n        if (captureContext instanceof Scope) {\n            this._tags = __assign(__assign({}, this._tags), captureContext._tags);\n            this._extra = __assign(__assign({}, this._extra), captureContext._extra);\n            this._contexts = __assign(__assign({}, this._contexts), captureContext._contexts);\n            if (captureContext._user && Object.keys(captureContext._user).length) {\n                this._user = captureContext._user;\n            }\n            if (captureContext._level) {\n                this._level = captureContext._level;\n            }\n            if (captureContext._fingerprint) {\n                this._fingerprint = captureContext._fingerprint;\n            }\n            if (captureContext._requestSession) {\n                this._requestSession = captureContext._requestSession;\n            }\n        }\n        else if (isPlainObject(captureContext)) {\n            // eslint-disable-next-line no-param-reassign\n            captureContext = captureContext;\n            this._tags = __assign(__assign({}, this._tags), captureContext.tags);\n            this._extra = __assign(__assign({}, this._extra), captureContext.extra);\n            this._contexts = __assign(__assign({}, this._contexts), captureContext.contexts);\n            if (captureContext.user) {\n                this._user = captureContext.user;\n            }\n            if (captureContext.level) {\n                this._level = captureContext.level;\n            }\n            if (captureContext.fingerprint) {\n                this._fingerprint = captureContext.fingerprint;\n            }\n            if (captureContext.requestSession) {\n                this._requestSession = captureContext.requestSession;\n            }\n        }\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n        this._breadcrumbs = [];\n        this._tags = {};\n        this._extra = {};\n        this._user = {};\n        this._contexts = {};\n        this._level = undefined;\n        this._transactionName = undefined;\n        this._fingerprint = undefined;\n        this._requestSession = undefined;\n        this._span = undefined;\n        this._session = undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        var maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n        // No data has been changed, so don't notify scope listeners\n        if (maxCrumbs <= 0) {\n            return this;\n        }\n        var mergedBreadcrumb = __assign({ timestamp: dateTimestampInSeconds() }, breadcrumb);\n        this._breadcrumbs = __spread(this._breadcrumbs, [mergedBreadcrumb]).slice(-maxCrumbs);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n        this._breadcrumbs = [];\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional information about the original exception.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n        var _a;\n        if (this._extra && Object.keys(this._extra).length) {\n            event.extra = __assign(__assign({}, this._extra), event.extra);\n        }\n        if (this._tags && Object.keys(this._tags).length) {\n            event.tags = __assign(__assign({}, this._tags), event.tags);\n        }\n        if (this._user && Object.keys(this._user).length) {\n            event.user = __assign(__assign({}, this._user), event.user);\n        }\n        if (this._contexts && Object.keys(this._contexts).length) {\n            event.contexts = __assign(__assign({}, this._contexts), event.contexts);\n        }\n        if (this._level) {\n            event.level = this._level;\n        }\n        if (this._transactionName) {\n            event.transaction = this._transactionName;\n        }\n        // We want to set the trace context for normal events only if there isn't already\n        // a trace context on the event. There is a product feature in place where we link\n        // errors with transaction and it relies on that.\n        if (this._span) {\n            event.contexts = __assign({ trace: this._span.getTraceContext() }, event.contexts);\n            var transactionName = (_a = this._span.transaction) === null || _a === void 0 ? void 0 : _a.name;\n            if (transactionName) {\n                event.tags = __assign({ transaction: transactionName }, event.tags);\n            }\n        }\n        this._applyFingerprint(event);\n        event.breadcrumbs = __spread((event.breadcrumbs || []), this._breadcrumbs);\n        event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n        return this._notifyEventProcessors(__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n        var _this = this;\n        if (index === void 0) { index = 0; }\n        return new SyncPromise(function (resolve, reject) {\n            var processor = processors[index];\n            if (event === null || typeof processor !== 'function') {\n                resolve(event);\n            }\n            else {\n                var result = processor(__assign({}, event), hint);\n                if (isThenable(result)) {\n                    void result\n                        .then(function (final) { return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve); })\n                        .then(null, reject);\n                }\n                else {\n                    void _this._notifyEventProcessors(processors, result, hint, index + 1)\n                        .then(resolve)\n                        .then(null, reject);\n                }\n            }\n        });\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n        var _this = this;\n        // We need this check for this._notifyingListeners to be able to work on scope during updates\n        // If this check is not here we'll produce endless recursion when something is done with the scope\n        // during the callback.\n        if (!this._notifyingListeners) {\n            this._notifyingListeners = true;\n            this._scopeListeners.forEach(function (callback) {\n                callback(_this);\n            });\n            this._notifyingListeners = false;\n        }\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this._fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this._fingerprint);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    return Scope;\n}());\nexport { Scope };\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access  */\n    var global = getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n    /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\n//# sourceMappingURL=scope.js.map","export var SDK_VERSION = '6.13.3';\n//# sourceMappingURL=version.js.map","var originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        originalFunctionToString = Function.prototype.toString;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry_original__ || this;\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map","import { __read, __spread } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(_options) {\n        if (_options === void 0) { _options = {}; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            var hub = getCurrentHub();\n            if (!hub) {\n                return event;\n            }\n            var self = hub.getIntegration(InboundFilters);\n            if (self) {\n                var client = hub.getClient();\n                var clientOptions = client ? client.getOptions() : {};\n                // This checks prevents most of the occurrences of the bug linked below:\n                // https://github.com/getsentry/sentry-javascript/issues/2622\n                // The bug is caused by multiple SDK instances, where one is minified and one is using non-mangled code.\n                // Unfortunatelly we cannot fix it reliably (thus reserved property in rollup's terser config),\n                // as we cannot force people using multiple instances in their apps to sync SDK versions.\n                var options = typeof self._mergeOptions === 'function' ? self._mergeOptions(clientOptions) : {};\n                if (typeof self._shouldDropEvent !== 'function') {\n                    return event;\n                }\n                return self._shouldDropEvent(event, options) ? null : event;\n            }\n            return event;\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._shouldDropEvent = function (event, options) {\n        if (this._isSentryError(event, options)) {\n            logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isIgnoredError(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isDeniedUrl(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `denyUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        if (!this._isAllowedUrl(event, options)) {\n            logger.warn(\"Event dropped due to not being matched by `allowUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isSentryError = function (event, options) {\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            return ((event &&\n                event.exception &&\n                event.exception.values &&\n                event.exception.values[0] &&\n                event.exception.values[0].type === 'SentryError') ||\n                false);\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isIgnoredError = function (event, options) {\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this._getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isDeniedUrl = function (event, options) {\n        // TODO: Use Glob instead?\n        if (!options.denyUrls || !options.denyUrls.length) {\n            return false;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? false : options.denyUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isAllowedUrl = function (event, options) {\n        // TODO: Use Glob instead?\n        if (!options.allowUrls || !options.allowUrls.length) {\n            return true;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? true : options.allowUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            allowUrls: __spread((this._options.whitelistUrls || []), (this._options.allowUrls || []), (clientOptions.whitelistUrls || []), (clientOptions.allowUrls || [])),\n            denyUrls: __spread((this._options.blacklistUrls || []), (this._options.denyUrls || []), (clientOptions.blacklistUrls || []), (clientOptions.denyUrls || [])),\n            ignoreErrors: __spread((this._options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        if (event.exception) {\n            try {\n                var _a = (event.exception.values && event.exception.values[0]) || {}, _b = _a.type, type = _b === void 0 ? '' : _b, _c = _a.value, value = _c === void 0 ? '' : _c;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n                return [];\n            }\n        }\n        return [];\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getLastValidUrl = function (frames) {\n        if (frames === void 0) { frames = []; }\n        var _a, _b;\n        for (var i = frames.length - 1; i >= 0; i--) {\n            var frame = frames[i];\n            if (((_a = frame) === null || _a === void 0 ? void 0 : _a.filename) !== '<anonymous>' && ((_b = frame) === null || _b === void 0 ? void 0 : _b.filename) !== '[native code]') {\n                return frame.filename || null;\n            }\n        }\n        return null;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                var frames_1 = event.stacktrace.frames;\n                return this._getLastValidUrl(frames_1);\n            }\n            if (event.exception) {\n                var frames_2 = event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n                return this._getLastValidUrl(frames_2);\n            }\n            return null;\n        }\n        catch (oO) {\n            logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexport { InboundFilters };\n//# sourceMappingURL=inboundfilters.js.map","export var setPrototypeOf = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf(obj, proto) {\n    // @ts-ignore __proto__ does not exist on obj\n    obj.__proto__ = proto;\n    return obj;\n}\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties(obj, proto) {\n    for (var prop in proto) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (!obj.hasOwnProperty(prop)) {\n            // @ts-ignore typescript complains about indexing so we remove\n            obj[prop] = proto[prop];\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=polyfill.js.map","import { __extends } from \"tslib\";\nimport { setPrototypeOf } from './polyfill';\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /** @class */ (function (_super) {\n    __extends(SentryError, _super);\n    function SentryError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        _this.name = _newTarget.prototype.constructor.name;\n        setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return SentryError;\n}(Error));\nexport { SentryError };\n//# sourceMappingURL=error.js.map","import { __read } from \"tslib\";\nimport { SentryError } from './error';\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n/** Error message */\nvar ERROR_MESSAGE = 'Invalid Dsn';\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this._fromString(from);\n        }\n        else {\n            this._fromComponents(from);\n        }\n        this._validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, publicKey = _a.publicKey;\n        return (protocol + \"://\" + publicKey + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype._fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        var _a = __read(match.slice(1), 6), protocol = _a[0], publicKey = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        if (projectId) {\n            var projectMatch = projectId.match(/^\\d+/);\n            if (projectMatch) {\n                projectId = projectMatch[0];\n            }\n        }\n        this._fromComponents({ host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, publicKey: publicKey });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype._fromComponents = function (components) {\n        // TODO this is for backwards compatibility, and can be removed in a future version\n        if ('user' in components && !('publicKey' in components)) {\n            components.publicKey = components.user;\n        }\n        this.user = components.publicKey || '';\n        this.protocol = components.protocol;\n        this.publicKey = components.publicKey || '';\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype._validate = function () {\n        var _this = this;\n        ['protocol', 'publicKey', 'host', 'projectId'].forEach(function (component) {\n            if (!_this[component]) {\n                throw new SentryError(ERROR_MESSAGE + \": \" + component + \" missing\");\n            }\n        });\n        if (!this.projectId.match(/^\\d+$/)) {\n            throw new SentryError(ERROR_MESSAGE + \": Invalid projectId \" + this.projectId);\n        }\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new SentryError(ERROR_MESSAGE + \": Invalid protocol \" + this.protocol);\n        }\n        if (this.port && isNaN(parseInt(this.port, 10))) {\n            throw new SentryError(ERROR_MESSAGE + \": Invalid port \" + this.port);\n        }\n    };\n    return Dsn;\n}());\nexport { Dsn };\n//# sourceMappingURL=dsn.js.map","import { __read, __spread } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nexport var installedIntegrations = [];\n/**\n * @private\n */\nfunction filterDuplicates(integrations) {\n    return integrations.reduce(function (acc, integrations) {\n        if (acc.every(function (accIntegration) { return integrations.name !== accIntegration.name; })) {\n            acc.push(integrations);\n        }\n        return acc;\n    }, []);\n}\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && __spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = __spread(filterDuplicates(defaultIntegrations));\n    if (Array.isArray(userIntegrations)) {\n        // Filter out integrations that are also included in user options\n        integrations = __spread(integrations.filter(function (integrations) {\n            return userIntegrations.every(function (userIntegration) { return userIntegration.name !== integrations.name; });\n        }), filterDuplicates(userIntegrations));\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(integrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    // Make sure that if present, `Debug` integration will always run last\n    var integrationsNames = integrations.map(function (i) { return i.name; });\n    var alwaysLastToRun = 'Debug';\n    if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n        integrations.push.apply(integrations, __spread(integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1)));\n    }\n    return integrations;\n}\n/** Setup given integration */\nexport function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    // set the `initialized` flag so we don't run through the process again unecessarily; use `Object.defineProperty`\n    // because by default it creates a property which is nonenumerable, which we want since `initialized` shouldn't be\n    // considered a member of the index the way the actual integrations are\n    Object.defineProperty(integrations, 'initialized', { value: true });\n    return integrations;\n}\n//# sourceMappingURL=integration.js.map","import { __assign, __read, __spread, __values } from \"tslib\";\n/* eslint-disable max-lines */\nimport { Scope } from '@sentry/hub';\nimport { Outcome, SessionStatus, } from '@sentry/types';\nimport { dateTimestampInSeconds, Dsn, isPlainObject, isPrimitive, isThenable, logger, normalize, SentryError, SyncPromise, truncate, uuid4, } from '@sentry/utils';\nimport { setupIntegrations } from './integration';\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** Array of used integrations. */\n        this._integrations = {};\n        /** Number of calls being processed */\n        this._numProcessing = 0;\n        this._backend = new backendClass(options);\n        this._options = options;\n        if (options.dsn) {\n            this._dsn = new Dsn(options.dsn);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._process(this._getBackend()\n            .eventFromException(exception, hint)\n            .then(function (event) { return _this._captureEvent(event, hint, scope); })\n            .then(function (result) {\n            eventId = result;\n        }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        var promisedEvent = isPrimitive(message)\n            ? this._getBackend().eventFromMessage(String(message), level, hint)\n            : this._getBackend().eventFromException(message, hint);\n        this._process(promisedEvent\n            .then(function (event) { return _this._captureEvent(event, hint, scope); })\n            .then(function (result) {\n            eventId = result;\n        }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        var eventId = hint && hint.event_id;\n        this._process(this._captureEvent(event, hint, scope).then(function (result) {\n            eventId = result;\n        }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureSession = function (session) {\n        if (!this._isEnabled()) {\n            logger.warn('SDK not enabled, will not capture session.');\n            return;\n        }\n        if (!(typeof session.release === 'string')) {\n            logger.warn('Discarded session because of missing or non-string release');\n        }\n        else {\n            this._sendSession(session);\n            // After sending, we set init false to indicate it's not the first occurrence\n            session.update({ init: false });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getTransport = function () {\n        return this._getBackend().getTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n        var _this = this;\n        return this._isClientDoneProcessing(timeout).then(function (clientFinished) {\n            return _this.getTransport()\n                .close(timeout)\n                .then(function (transportFlushed) { return clientFinished && transportFlushed; });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        var _this = this;\n        return this.flush(timeout).then(function (result) {\n            _this.getOptions().enabled = false;\n            return result;\n        });\n    };\n    /**\n     * Sets up the integrations\n     */\n    BaseClient.prototype.setupIntegrations = function () {\n        if (this._isEnabled() && !this._integrations.initialized) {\n            this._integrations = setupIntegrations(this._options);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this._integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    /** Updates existing session based on the provided event */\n    BaseClient.prototype._updateSessionFromEvent = function (session, event) {\n        var e_1, _a;\n        var crashed = false;\n        var errored = false;\n        var exceptions = event.exception && event.exception.values;\n        if (exceptions) {\n            errored = true;\n            try {\n                for (var exceptions_1 = __values(exceptions), exceptions_1_1 = exceptions_1.next(); !exceptions_1_1.done; exceptions_1_1 = exceptions_1.next()) {\n                    var ex = exceptions_1_1.value;\n                    var mechanism = ex.mechanism;\n                    if (mechanism && mechanism.handled === false) {\n                        crashed = true;\n                        break;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (exceptions_1_1 && !exceptions_1_1.done && (_a = exceptions_1.return)) _a.call(exceptions_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        // A session is updated and that session update is sent in only one of the two following scenarios:\n        // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n        // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n        var sessionNonTerminal = session.status === SessionStatus.Ok;\n        var shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n        if (shouldUpdateAndSend) {\n            session.update(__assign(__assign({}, (crashed && { status: SessionStatus.Crashed })), { errors: session.errors || Number(errored || crashed) }));\n            this.captureSession(session);\n        }\n    };\n    /** Deliver captured session to Sentry */\n    BaseClient.prototype._sendSession = function (session) {\n        this._getBackend().sendSession(session);\n    };\n    /**\n     * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n     * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n     *\n     * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n     * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n     * `true`.\n     * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n     * `false` otherwise\n     */\n    BaseClient.prototype._isClientDoneProcessing = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var ticked = 0;\n            var tick = 1;\n            var interval = setInterval(function () {\n                if (_this._numProcessing == 0) {\n                    clearInterval(interval);\n                    resolve(true);\n                }\n                else {\n                    ticked += tick;\n                    if (timeout && ticked >= timeout) {\n                        clearInterval(interval);\n                        resolve(false);\n                    }\n                }\n            }, tick);\n        });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n        return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n        return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional information about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n        var _this = this;\n        var _a = this.getOptions().normalizeDepth, normalizeDepth = _a === void 0 ? 3 : _a;\n        var prepared = __assign(__assign({}, event), { event_id: event.event_id || (hint && hint.event_id ? hint.event_id : uuid4()), timestamp: event.timestamp || dateTimestampInSeconds() });\n        this._applyClientOptions(prepared);\n        this._applyIntegrationsMetadata(prepared);\n        // If we have scope given to us, use it as the base for further modifications.\n        // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n        var finalScope = scope;\n        if (hint && hint.captureContext) {\n            finalScope = Scope.clone(finalScope).update(hint.captureContext);\n        }\n        // We prepare the result here with a resolved Event.\n        var result = SyncPromise.resolve(prepared);\n        // This should be the last thing called, since we want that\n        // {@link Hub.addEventProcessor} gets the finished prepared event.\n        if (finalScope) {\n            // In case we have a hub we reassign it.\n            result = finalScope.applyToEvent(prepared, hint);\n        }\n        return result.then(function (evt) {\n            if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n                return _this._normalizeEvent(evt, normalizeDepth);\n            }\n            return evt;\n        });\n    };\n    /**\n     * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n     * Normalized keys:\n     * - `breadcrumbs.data`\n     * - `user`\n     * - `contexts`\n     * - `extra`\n     * @param event Event\n     * @returns Normalized event\n     */\n    BaseClient.prototype._normalizeEvent = function (event, depth) {\n        if (!event) {\n            return null;\n        }\n        var normalized = __assign(__assign(__assign(__assign(__assign({}, event), (event.breadcrumbs && {\n            breadcrumbs: event.breadcrumbs.map(function (b) { return (__assign(__assign({}, b), (b.data && {\n                data: normalize(b.data, depth),\n            }))); }),\n        })), (event.user && {\n            user: normalize(event.user, depth),\n        })), (event.contexts && {\n            contexts: normalize(event.contexts, depth),\n        })), (event.extra && {\n            extra: normalize(event.extra, depth),\n        }));\n        // event.contexts.trace stores information about a Transaction. Similarly,\n        // event.spans[] stores information about child Spans. Given that a\n        // Transaction is conceptually a Span, normalization should apply to both\n        // Transactions and Spans consistently.\n        // For now the decision is to skip normalization of Transactions and Spans,\n        // so this block overwrites the normalized event to add back the original\n        // Transaction information prior to normalization.\n        if (event.contexts && event.contexts.trace) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            normalized.contexts.trace = event.contexts.trace;\n        }\n        var _a = this.getOptions()._experiments, _experiments = _a === void 0 ? {} : _a;\n        if (_experiments.ensureNoCircularStructures) {\n            return normalize(normalized);\n        }\n        return normalized;\n    };\n    /**\n     *  Enhances event using the client configuration.\n     *  It takes care of all \"static\" values like environment, release and `dist`,\n     *  as well as truncating overly long values.\n     * @param event event instance to be enhanced\n     */\n    BaseClient.prototype._applyClientOptions = function (event) {\n        var options = this.getOptions();\n        var environment = options.environment, release = options.release, dist = options.dist, _a = options.maxValueLength, maxValueLength = _a === void 0 ? 250 : _a;\n        if (!('environment' in event)) {\n            event.environment = 'environment' in options ? environment : 'production';\n        }\n        if (event.release === undefined && release !== undefined) {\n            event.release = release;\n        }\n        if (event.dist === undefined && dist !== undefined) {\n            event.dist = dist;\n        }\n        if (event.message) {\n            event.message = truncate(event.message, maxValueLength);\n        }\n        var exception = event.exception && event.exception.values && event.exception.values[0];\n        if (exception && exception.value) {\n            exception.value = truncate(exception.value, maxValueLength);\n        }\n        var request = event.request;\n        if (request && request.url) {\n            request.url = truncate(request.url, maxValueLength);\n        }\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param event The event that will be filled with all integrations.\n     */\n    BaseClient.prototype._applyIntegrationsMetadata = function (event) {\n        var integrationsArray = Object.keys(this._integrations);\n        if (integrationsArray.length > 0) {\n            event.sdk = event.sdk || {};\n            event.sdk.integrations = __spread((event.sdk.integrations || []), integrationsArray);\n        }\n    };\n    /**\n     * Tells the backend to send this event\n     * @param event The Sentry event to send\n     */\n    BaseClient.prototype._sendEvent = function (event) {\n        this._getBackend().sendEvent(event);\n    };\n    /**\n     * Processes the event and logs an error in case of rejection\n     * @param event\n     * @param hint\n     * @param scope\n     */\n    BaseClient.prototype._captureEvent = function (event, hint, scope) {\n        return this._processEvent(event, hint, scope).then(function (finalEvent) {\n            return finalEvent.event_id;\n        }, function (reason) {\n            logger.error(reason);\n            return undefined;\n        });\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional information about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n        var _this = this;\n        var _a, _b;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _c = this.getOptions(), beforeSend = _c.beforeSend, sampleRate = _c.sampleRate;\n        var transport = this.getTransport();\n        if (!this._isEnabled()) {\n            return SyncPromise.reject(new SentryError('SDK not enabled, will not capture event.'));\n        }\n        var isTransaction = event.type === 'transaction';\n        // 1.0 === 100% events are sent\n        // 0.0 === 0% events are sent\n        // Sampling for transaction happens somewhere else\n        if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n            (_b = (_a = transport).recordLostEvent) === null || _b === void 0 ? void 0 : _b.call(_a, Outcome.SampleRate, 'event');\n            return SyncPromise.reject(new SentryError(\"Discarding event because it's not included in the random sample (sampling rate = \" + sampleRate + \")\"));\n        }\n        return this._prepareEvent(event, scope, hint)\n            .then(function (prepared) {\n            var _a, _b;\n            if (prepared === null) {\n                (_b = (_a = transport).recordLostEvent) === null || _b === void 0 ? void 0 : _b.call(_a, Outcome.EventProcessor, event.type || 'event');\n                throw new SentryError('An event processor returned null, will not send event.');\n            }\n            var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n            if (isInternalException || isTransaction || !beforeSend) {\n                return prepared;\n            }\n            var beforeSendResult = beforeSend(prepared, hint);\n            return _this._ensureBeforeSendRv(beforeSendResult);\n        })\n            .then(function (processedEvent) {\n            var _a, _b;\n            if (processedEvent === null) {\n                (_b = (_a = transport).recordLostEvent) === null || _b === void 0 ? void 0 : _b.call(_a, Outcome.BeforeSend, event.type || 'event');\n                throw new SentryError('`beforeSend` returned `null`, will not send event.');\n            }\n            var session = scope && scope.getSession && scope.getSession();\n            if (!isTransaction && session) {\n                _this._updateSessionFromEvent(session, processedEvent);\n            }\n            _this._sendEvent(processedEvent);\n            return processedEvent;\n        })\n            .then(null, function (reason) {\n            if (reason instanceof SentryError) {\n                throw reason;\n            }\n            _this.captureException(reason, {\n                data: {\n                    __sentry__: true,\n                },\n                originalException: reason,\n            });\n            throw new SentryError(\"Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: \" + reason);\n        });\n    };\n    /**\n     * Occupies the client with processing and event\n     */\n    BaseClient.prototype._process = function (promise) {\n        var _this = this;\n        this._numProcessing += 1;\n        void promise.then(function (value) {\n            _this._numProcessing -= 1;\n            return value;\n        }, function (reason) {\n            _this._numProcessing -= 1;\n            return reason;\n        });\n    };\n    /**\n     * Verifies that return value of configured `beforeSend` is of expected type.\n     */\n    BaseClient.prototype._ensureBeforeSendRv = function (rv) {\n        var nullErr = '`beforeSend` method has to return `null` or a valid event.';\n        if (isThenable(rv)) {\n            return rv.then(function (event) {\n                if (!(isPlainObject(event) || event === null)) {\n                    throw new SentryError(nullErr);\n                }\n                return event;\n            }, function (e) {\n                throw new SentryError(\"beforeSend rejected with \" + e);\n            });\n        }\n        else if (!(isPlainObject(rv) || rv === null)) {\n            throw new SentryError(nullErr);\n        }\n        return rv;\n    };\n    return BaseClient;\n}());\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map","/** The status of an event. */\n// eslint-disable-next-line import/export\nexport var Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error occurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status || (Status = {}));\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status || (Status = {}));\n//# sourceMappingURL=status.js.map","import { Status } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return SyncPromise.resolve({\n            reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n            status: Status.Skipped,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return SyncPromise.resolve(true);\n    };\n    return NoopTransport;\n}());\nexport { NoopTransport };\n//# sourceMappingURL=noop.js.map","/** JSDoc */\n// eslint-disable-next-line import/export\nexport var Severity;\n(function (Severity) {\n    /** JSDoc */\n    Severity[\"Fatal\"] = \"fatal\";\n    /** JSDoc */\n    Severity[\"Error\"] = \"error\";\n    /** JSDoc */\n    Severity[\"Warning\"] = \"warning\";\n    /** JSDoc */\n    Severity[\"Log\"] = \"log\";\n    /** JSDoc */\n    Severity[\"Info\"] = \"info\";\n    /** JSDoc */\n    Severity[\"Debug\"] = \"debug\";\n    /** JSDoc */\n    Severity[\"Critical\"] = \"critical\";\n})(Severity || (Severity = {}));\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\n(function (Severity) {\n    /**\n     * Converts a string-based level into a {@link Severity}.\n     *\n     * @param level string representation of Severity\n     * @returns Severity\n     */\n    function fromString(level) {\n        switch (level) {\n            case 'debug':\n                return Severity.Debug;\n            case 'info':\n                return Severity.Info;\n            case 'warn':\n            case 'warning':\n                return Severity.Warning;\n            case 'error':\n                return Severity.Error;\n            case 'fatal':\n                return Severity.Fatal;\n            case 'critical':\n                return Severity.Critical;\n            case 'log':\n            default:\n                return Severity.Log;\n        }\n    }\n    Severity.fromString = fromString;\n})(Severity || (Severity = {}));\n//# sourceMappingURL=severity.js.map","import { logger, SentryError } from '@sentry/utils';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n        this._options = options;\n        if (!this._options.dsn) {\n            logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this._transport = this._setupTransport();\n    }\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        void this._transport.sendEvent(event).then(null, function (reason) {\n            logger.error(\"Error while sending event: \" + reason);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendSession = function (session) {\n        if (!this._transport.sendSession) {\n            logger.warn(\"Dropping session because custom transport doesn't implement sendSession\");\n            return;\n        }\n        void this._transport.sendSession(session).then(null, function (reason) {\n            logger.error(\"Error while sending session: \" + reason);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this._transport;\n    };\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n        return new NoopTransport();\n    };\n    return BaseBackend;\n}());\nexport { BaseBackend };\n//# sourceMappingURL=basebackend.js.map","/**\n * This was originally forked from https://github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n */\nimport { __assign, __read } from \"tslib\";\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nvar geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nvar chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nvar reactMinifiedRegexp = /Minified React error #\\d+;/i;\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function computeStackTrace(ex) {\n    var stack = null;\n    var popSize = 0;\n    if (ex) {\n        if (typeof ex.framesToPop === 'number') {\n            popSize = ex.framesToPop;\n        }\n        else if (reactMinifiedRegexp.test(ex.message)) {\n            popSize = 1;\n        }\n    }\n    try {\n        // This must be tried first because Opera 10 *destroys*\n        // its stacktrace property if you try to access the stack\n        // property first!!\n        stack = computeStackTraceFromStacktraceProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    try {\n        stack = computeStackTraceFromStackProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex && ex.name,\n        stack: [],\n        failed: true,\n    };\n}\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, complexity\nfunction computeStackTraceFromStackProp(ex) {\n    var _a, _b;\n    if (!ex || !ex.stack) {\n        return null;\n    }\n    var stack = [];\n    var lines = ex.stack.split('\\n');\n    var isEval;\n    var submatch;\n    var parts;\n    var element;\n    for (var i = 0; i < lines.length; ++i) {\n        if ((parts = chrome.exec(lines[i]))) {\n            var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n            isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n            if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n                // throw out eval line/column and use top-most line/column number\n                parts[2] = submatch[1]; // url\n                parts[3] = submatch[2]; // line\n                parts[4] = submatch[3]; // column\n            }\n            // Arpad: Working with the regexp above is super painful. it is quite a hack, but just stripping the `address at `\n            // prefix here seems like the quickest solution for now.\n            var url = parts[2] && parts[2].indexOf('address at ') === 0 ? parts[2].substr('address at '.length) : parts[2];\n            // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n            // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n            var func = parts[1] || UNKNOWN_FUNCTION;\n            _a = __read(extractSafariExtensionDetails(func, url), 2), func = _a[0], url = _a[1];\n            element = {\n                url: url,\n                func: func,\n                args: isNative ? [parts[2]] : [],\n                line: parts[3] ? +parts[3] : null,\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = winjs.exec(lines[i]))) {\n            element = {\n                url: parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: [],\n                line: +parts[3],\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = gecko.exec(lines[i]))) {\n            isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n            if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n                // throw out eval line/column and use top-most line number\n                parts[1] = parts[1] || \"eval\";\n                parts[3] = submatch[1];\n                parts[4] = submatch[2];\n                parts[5] = ''; // no column when eval\n            }\n            else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n                // FireFox uses this awesome columnNumber property for its top frame\n                // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n                // so adding 1\n                // NOTE: this hack doesn't work if top-most frame is eval\n                stack[0].column = ex.columnNumber + 1;\n            }\n            var url = parts[3];\n            var func = parts[1] || UNKNOWN_FUNCTION;\n            _b = __read(extractSafariExtensionDetails(func, url), 2), func = _b[0], url = _b[1];\n            element = {\n                url: url,\n                func: func,\n                args: parts[2] ? parts[2].split(',') : [],\n                line: parts[4] ? +parts[4] : null,\n                column: parts[5] ? +parts[5] : null,\n            };\n        }\n        else {\n            continue;\n        }\n        if (!element.func && element.line) {\n            element.func = UNKNOWN_FUNCTION;\n        }\n        stack.push(element);\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction computeStackTraceFromStacktraceProp(ex) {\n    if (!ex || !ex.stacktrace) {\n        return null;\n    }\n    // Access and store the stacktrace property before doing ANYTHING\n    // else to it because Opera is not very good at providing it\n    // reliably in other circumstances.\n    var stacktrace = ex.stacktrace;\n    var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n    var opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\((.*)\\))? in (.*):\\s*$/i;\n    var lines = stacktrace.split('\\n');\n    var stack = [];\n    var parts;\n    for (var line = 0; line < lines.length; line += 2) {\n        var element = null;\n        if ((parts = opera10Regex.exec(lines[line]))) {\n            element = {\n                url: parts[2],\n                func: parts[3],\n                args: [],\n                line: +parts[1],\n                column: null,\n            };\n        }\n        else if ((parts = opera11Regex.exec(lines[line]))) {\n            element = {\n                url: parts[6],\n                func: parts[3] || parts[4],\n                args: parts[5] ? parts[5].split(',') : [],\n                line: +parts[1],\n                column: +parts[2],\n            };\n        }\n        if (element) {\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n            stack.push(element);\n        }\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunatelly \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nvar extractSafariExtensionDetails = function (func, url) {\n    var isSafariExtension = func.indexOf('safari-extension') !== -1;\n    var isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n    return isSafariExtension || isSafariWebExtension\n        ? [\n            func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n            isSafariExtension ? \"safari-extension:\" + url : \"safari-web-extension:\" + url,\n        ]\n        : [func, url];\n};\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace, popSize) {\n    try {\n        return __assign(__assign({}, stacktrace), { stack: stacktrace.stack.slice(popSize) });\n    }\n    catch (e) {\n        return stacktrace;\n    }\n}\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction extractMessage(ex) {\n    var message = ex && ex.message;\n    if (!message) {\n        return 'No error message';\n    }\n    if (message.error && typeof message.error.message === 'string') {\n        return message.error.message;\n    }\n    return message;\n}\n//# sourceMappingURL=tracekit.js.map","import { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\nimport { computeStackTrace } from './tracekit';\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n        type: stacktrace.name,\n        value: stacktrace.message,\n    };\n    if (frames && frames.length) {\n        exception.stacktrace = { frames: frames };\n    }\n    if (exception.type === undefined && exception.value === '') {\n        exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n}\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception, syntheticException, rejection) {\n    var event = {\n        exception: {\n            values: [\n                {\n                    type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n                    value: \"Non-Error \" + (rejection ? 'promise rejection' : 'exception') + \" captured with keys: \" + extractExceptionKeysForMessage(exception),\n                },\n            ],\n        },\n        extra: {\n            __serialized__: normalizeToSize(exception),\n        },\n    };\n    if (syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n        exception: {\n            values: [exception],\n        },\n    };\n}\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n        return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n        localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n        localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack\n        .slice(0, STACKTRACE_LIMIT)\n        .map(function (frame) { return ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n    }); })\n        .reverse();\n}\n//# sourceMappingURL=parsers.js.map","import { __assign } from \"tslib\";\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, addExceptionTypeValue, isDOMError, isDOMException, isError, isErrorEvent, isEvent, isPlainObject, SyncPromise, } from '@sentry/utils';\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nexport function eventFromException(options, exception, hint) {\n    var syntheticException = (hint && hint.syntheticException) || undefined;\n    var event = eventFromUnknownInput(exception, syntheticException, {\n        attachStacktrace: options.attachStacktrace,\n    });\n    addExceptionMechanism(event, {\n        handled: true,\n        type: 'generic',\n    });\n    event.level = Severity.Error;\n    if (hint && hint.event_id) {\n        event.event_id = hint.event_id;\n    }\n    return SyncPromise.resolve(event);\n}\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(options, message, level, hint) {\n    if (level === void 0) { level = Severity.Info; }\n    var syntheticException = (hint && hint.syntheticException) || undefined;\n    var event = eventFromString(message, syntheticException, {\n        attachStacktrace: options.attachStacktrace,\n    });\n    event.level = level;\n    if (hint && hint.event_id) {\n        event.event_id = hint.event_id;\n    }\n    return SyncPromise.resolve(event);\n}\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(exception, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event;\n    if (isErrorEvent(exception) && exception.error) {\n        // If it is an ErrorEvent with `error` property, extract it to get actual Error\n        var errorEvent = exception;\n        // eslint-disable-next-line no-param-reassign\n        exception = errorEvent.error;\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isDOMError(exception) || isDOMException(exception)) {\n        // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n        // then we just extract the name, code, and message, as they don't provide anything else\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n        var domException = exception;\n        var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n        var message = domException.message ? name_1 + \": \" + domException.message : name_1;\n        event = eventFromString(message, syntheticException, options);\n        addExceptionTypeValue(event, message);\n        if ('code' in domException) {\n            event.tags = __assign(__assign({}, event.tags), { 'DOMException.code': \"\" + domException.code });\n        }\n        return event;\n    }\n    if (isError(exception)) {\n        // we have a real Error object, do nothing\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isPlainObject(exception) || isEvent(exception)) {\n        // If it is plain Object or Event, serialize it manually and extract options\n        // This will allow us to group events based on top-level keys\n        // which is much better than creating new group when any key/value change\n        var objectException = exception;\n        event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n        addExceptionMechanism(event, {\n            synthetic: true,\n        });\n        return event;\n    }\n    // If none of previous checks were valid, then it means that it's not:\n    // - an instance of DOMError\n    // - an instance of DOMException\n    // - an instance of Event\n    // - an instance of Error\n    // - a valid ErrorEvent (one with an error property)\n    // - a plain Object\n    //\n    // So bail out and capture it as a simple message:\n    event = eventFromString(exception, syntheticException, options);\n    addExceptionTypeValue(event, \"\" + exception, undefined);\n    addExceptionMechanism(event, {\n        synthetic: true,\n    });\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromString(input, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event = {\n        message: input,\n    };\n    if (options.attachStacktrace && syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n//# sourceMappingURL=eventbuilder.js.map","import { __assign, __read, __rest, __spread } from \"tslib\";\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(api) {\n    if (!api.metadata || !api.metadata.sdk) {\n        return;\n    }\n    var _a = api.metadata.sdk, name = _a.name, version = _a.version;\n    return { name: name, version: version };\n}\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n    if (!sdkInfo) {\n        return event;\n    }\n    event.sdk = event.sdk || {};\n    event.sdk.name = event.sdk.name || sdkInfo.name;\n    event.sdk.version = event.sdk.version || sdkInfo.version;\n    event.sdk.integrations = __spread((event.sdk.integrations || []), (sdkInfo.integrations || []));\n    event.sdk.packages = __spread((event.sdk.packages || []), (sdkInfo.packages || []));\n    return event;\n}\n/** Creates a SentryRequest from a Session. */\nexport function sessionToSentryRequest(session, api) {\n    var sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n    var envelopeHeaders = JSON.stringify(__assign(__assign({ sent_at: new Date().toISOString() }, (sdkInfo && { sdk: sdkInfo })), (api.forceEnvelope() && { dsn: api.getDsn().toString() })));\n    // I know this is hacky but we don't want to add `session` to request type since it's never rate limited\n    var type = 'aggregates' in session ? 'sessions' : 'session';\n    var itemHeaders = JSON.stringify({\n        type: type,\n    });\n    return {\n        body: envelopeHeaders + \"\\n\" + itemHeaders + \"\\n\" + JSON.stringify(session),\n        type: type,\n        url: api.getEnvelopeEndpointWithUrlEncodedAuth(),\n    };\n}\n/** Creates a SentryRequest from an event. */\nexport function eventToSentryRequest(event, api) {\n    var sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n    var eventType = event.type || 'event';\n    var useEnvelope = eventType === 'transaction' || api.forceEnvelope();\n    var _a = event.debug_meta || {}, transactionSampling = _a.transactionSampling, metadata = __rest(_a, [\"transactionSampling\"]);\n    var _b = transactionSampling || {}, samplingMethod = _b.method, sampleRate = _b.rate;\n    if (Object.keys(metadata).length === 0) {\n        delete event.debug_meta;\n    }\n    else {\n        event.debug_meta = metadata;\n    }\n    var req = {\n        body: JSON.stringify(sdkInfo ? enhanceEventWithSdkInfo(event, api.metadata.sdk) : event),\n        type: eventType,\n        url: useEnvelope ? api.getEnvelopeEndpointWithUrlEncodedAuth() : api.getStoreEndpointWithUrlEncodedAuth(),\n    };\n    // https://develop.sentry.dev/sdk/envelopes/\n    // Since we don't need to manipulate envelopes nor store them, there is no\n    // exported concept of an Envelope with operations including serialization and\n    // deserialization. Instead, we only implement a minimal subset of the spec to\n    // serialize events inline here.\n    if (useEnvelope) {\n        var envelopeHeaders = JSON.stringify(__assign(__assign({ event_id: event.event_id, sent_at: new Date().toISOString() }, (sdkInfo && { sdk: sdkInfo })), (api.forceEnvelope() && { dsn: api.getDsn().toString() })));\n        var itemHeaders = JSON.stringify({\n            type: eventType,\n            // TODO: Right now, sampleRate may or may not be defined (it won't be in the cases of inheritance and\n            // explicitly-set sampling decisions). Are we good with that?\n            sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n        });\n        // The trailing newline is optional. We intentionally don't send it to avoid\n        // sending unnecessary bytes.\n        //\n        // const envelope = `${envelopeHeaders}\\n${itemHeaders}\\n${req.body}\\n`;\n        var envelope = envelopeHeaders + \"\\n\" + itemHeaders + \"\\n\" + req.body;\n        req.body = envelope;\n    }\n    return req;\n}\n//# sourceMappingURL=request.js.map","import { Dsn, urlEncode } from '@sentry/utils';\nvar SENTRY_API_VERSION = '7';\n/**\n * Helper class to provide urls, headers and metadata that can be used to form\n * different types of requests to Sentry endpoints.\n * Supports both envelopes and regular event requests.\n **/\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn, metadata, tunnel) {\n        if (metadata === void 0) { metadata = {}; }\n        this.dsn = dsn;\n        this._dsnObject = new Dsn(dsn);\n        this.metadata = metadata;\n        this._tunnel = tunnel;\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Does this transport force envelopes? */\n    API.prototype.forceEnvelope = function () {\n        return !!this._tunnel;\n    };\n    /** Returns the prefix to construct Sentry ingestion API endpoints. */\n    API.prototype.getBaseApiEndpoint = function () {\n        var dsn = this.getDsn();\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port + (dsn.path ? \"/\" + dsn.path : '') + \"/api/\";\n    };\n    /** Returns the store endpoint URL. */\n    API.prototype.getStoreEndpoint = function () {\n        return this._getIngestEndpoint('store');\n    };\n    /**\n     * Returns the store endpoint URL with auth in the query string.\n     *\n     * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n     */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        return this.getStoreEndpoint() + \"?\" + this._encodedAuth();\n    };\n    /**\n     * Returns the envelope endpoint URL with auth in the query string.\n     *\n     * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n     */\n    API.prototype.getEnvelopeEndpointWithUrlEncodedAuth = function () {\n        if (this.forceEnvelope()) {\n            return this._tunnel;\n        }\n        return this._getEnvelopeEndpoint() + \"?\" + this._encodedAuth();\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this.getDsn();\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /**\n     * Returns an object that can be used in request headers.\n     * This is needed for node and the old /store endpoint in sentry\n     */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        // CHANGE THIS to use metadata but keep clientName and clientVersion compatible\n        var dsn = this.getDsn();\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.publicKey);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this.getDsn();\n        var endpoint = this.getBaseApiEndpoint() + \"embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'dsn') {\n                continue;\n            }\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    /** Returns the envelope endpoint URL. */\n    API.prototype._getEnvelopeEndpoint = function () {\n        return this._getIngestEndpoint('envelope');\n    };\n    /** Returns the ingest API endpoint for target. */\n    API.prototype._getIngestEndpoint = function (target) {\n        if (this._tunnel) {\n            return this._tunnel;\n        }\n        var base = this.getBaseApiEndpoint();\n        var dsn = this.getDsn();\n        return \"\" + base + dsn.projectId + \"/\" + target + \"/\";\n    };\n    /** Returns a URL-encoded string with auth config suitable for a query string. */\n    API.prototype._encodedAuth = function () {\n        var dsn = this.getDsn();\n        var auth = {\n            // We send only the minimum set of required information. See\n            // https://github.com/getsentry/sentry-javascript/issues/2572.\n            sentry_key: dsn.publicKey,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        return urlEncode(auth);\n    };\n    return API;\n}());\nexport { API };\n//# sourceMappingURL=api.js.map","import { forget, getGlobalObject, isNativeFetch, logger, supportsFetch } from '@sentry/utils';\nvar global = getGlobalObject();\nvar cachedFetchImpl;\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation() {\n    var _a, _b;\n    if (cachedFetchImpl) {\n        return cachedFetchImpl;\n    }\n    /* eslint-disable @typescript-eslint/unbound-method */\n    // Fast path to avoid DOM I/O\n    if (isNativeFetch(global.fetch)) {\n        return (cachedFetchImpl = global.fetch.bind(global));\n    }\n    var document = global.document;\n    var fetchImpl = global.fetch;\n    // eslint-disable-next-line deprecation/deprecation\n    if (typeof ((_a = document) === null || _a === void 0 ? void 0 : _a.createElement) === \"function\") {\n        try {\n            var sandbox = document.createElement('iframe');\n            sandbox.hidden = true;\n            document.head.appendChild(sandbox);\n            if ((_b = sandbox.contentWindow) === null || _b === void 0 ? void 0 : _b.fetch) {\n                fetchImpl = sandbox.contentWindow.fetch;\n            }\n            document.head.removeChild(sandbox);\n        }\n        catch (e) {\n            logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n        }\n    }\n    return (cachedFetchImpl = fetchImpl.bind(global));\n    /* eslint-enable @typescript-eslint/unbound-method */\n}\n/**\n * Sends sdk client report using sendBeacon or fetch as a fallback if available\n *\n * @param url report endpoint\n * @param body report payload\n */\nexport function sendReport(url, body) {\n    var isRealNavigator = Object.prototype.toString.call(global && global.navigator) === '[object Navigator]';\n    var hasSendBeacon = isRealNavigator && typeof global.navigator.sendBeacon === 'function';\n    if (hasSendBeacon) {\n        // Prevent illegal invocations - https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n        var sendBeacon = global.navigator.sendBeacon.bind(global.navigator);\n        return sendBeacon(url, body);\n    }\n    if (supportsFetch()) {\n        var fetch_1 = getNativeFetchImplementation();\n        return forget(fetch_1(url, {\n            body: body,\n            method: 'POST',\n            credentials: 'omit',\n            keepalive: true,\n        }));\n    }\n}\n//# sourceMappingURL=utils.js.map","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n/** A simple queue that holds promises. */\nvar PromiseBuffer = /** @class */ (function () {\n    function PromiseBuffer(_limit) {\n        this._limit = _limit;\n        /** Internal set of queued Promises */\n        this._buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n        return this._limit === undefined || this.length() < this._limit;\n    };\n    /**\n     * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n     *\n     * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n     *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n     *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n     *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n     *        limit check.\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (taskProducer) {\n        var _this = this;\n        if (!this.isReady()) {\n            return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n        }\n        // start the task and add its promise to the queue\n        var task = taskProducer();\n        if (this._buffer.indexOf(task) === -1) {\n            this._buffer.push(task);\n        }\n        void task\n            .then(function () { return _this.remove(task); })\n            // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n            // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n            // have promises, so TS has to polyfill when down-compiling.)\n            .then(null, function () {\n            return _this.remove(task).then(null, function () {\n                // We have to add another catch here because `this.remove()` starts a new promise chain.\n            });\n        });\n        return task;\n    };\n    /**\n     * Remove a promise from the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n        var removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n        return removedTask;\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n        return this._buffer.length;\n    };\n    /**\n     * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n     *\n     * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n     * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n     * `true`.\n     * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n     * `false` otherwise\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n            var capturedSetTimeout = setTimeout(function () {\n                if (timeout && timeout > 0) {\n                    resolve(false);\n                }\n            }, timeout);\n            // if all promises resolve in time, cancel the timer and resolve to `true`\n            void SyncPromise.all(_this._buffer)\n                .then(function () {\n                clearTimeout(capturedSetTimeout);\n                resolve(true);\n            })\n                .then(null, function () {\n                resolve(true);\n            });\n        });\n    };\n    return PromiseBuffer;\n}());\nexport { PromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map","import { __read, __values } from \"tslib\";\nimport { API } from '@sentry/core';\nimport { Status, } from '@sentry/types';\nimport { dateTimestampInSeconds, getGlobalObject, logger, parseRetryAfterHeader, PromiseBuffer, SentryError, } from '@sentry/utils';\nimport { sendReport } from './utils';\nvar CATEGORY_MAPPING = {\n    event: 'error',\n    transaction: 'transaction',\n    session: 'session',\n    attachment: 'attachment',\n};\nvar global = getGlobalObject();\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        var _this = this;\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = new PromiseBuffer(30);\n        /** Locks transport after receiving rate limits in a response */\n        this._rateLimits = {};\n        this._outcomes = {};\n        this._api = new API(options.dsn, options._metadata, options.tunnel);\n        // eslint-disable-next-line deprecation/deprecation\n        this.url = this._api.getStoreEndpointWithUrlEncodedAuth();\n        if (this.options.sendClientReports && global.document) {\n            global.document.addEventListener('visibilitychange', function () {\n                if (global.document.visibilityState === 'hidden') {\n                    _this._flushOutcomes();\n                }\n            });\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n        throw new SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.recordLostEvent = function (reason, category) {\n        var _a;\n        if (!this.options.sendClientReports) {\n            return;\n        }\n        // We want to track each category (event, transaction, session) separately\n        // but still keep the distinction between different type of outcomes.\n        // We could use nested maps, but it's much easier to read and type this way.\n        // A correct type for map-based implementation if we want to go that route\n        // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n        var key = CATEGORY_MAPPING[category] + \":\" + reason;\n        logger.log(\"Adding outcome: \" + key);\n        this._outcomes[key] = (_a = this._outcomes[key], (_a !== null && _a !== void 0 ? _a : 0)) + 1;\n    };\n    /**\n     * Send outcomes as an envelope\n     */\n    BaseTransport.prototype._flushOutcomes = function () {\n        if (!this.options.sendClientReports) {\n            return;\n        }\n        var outcomes = this._outcomes;\n        this._outcomes = {};\n        // Nothing to send\n        if (!Object.keys(outcomes).length) {\n            logger.log('No outcomes to flush');\n            return;\n        }\n        logger.log(\"Flushing outcomes:\\n\" + JSON.stringify(outcomes, null, 2));\n        var url = this._api.getEnvelopeEndpointWithUrlEncodedAuth();\n        // Envelope header is required to be at least an empty object\n        var envelopeHeader = JSON.stringify({});\n        var itemHeaders = JSON.stringify({\n            type: 'client_report',\n        });\n        var item = JSON.stringify({\n            timestamp: dateTimestampInSeconds(),\n            discarded_events: Object.keys(outcomes).map(function (key) {\n                var _a = __read(key.split(':'), 2), category = _a[0], reason = _a[1];\n                return {\n                    reason: reason,\n                    category: category,\n                    quantity: outcomes[key],\n                };\n            }),\n        });\n        var envelope = envelopeHeader + \"\\n\" + itemHeaders + \"\\n\" + item;\n        try {\n            sendReport(url, envelope);\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    };\n    /**\n     * Handle Sentry repsonse for promise-based transports.\n     */\n    BaseTransport.prototype._handleResponse = function (_a) {\n        var requestType = _a.requestType, response = _a.response, headers = _a.headers, resolve = _a.resolve, reject = _a.reject;\n        var status = Status.fromHttpCode(response.status);\n        /**\n         * \"The name is case-insensitive.\"\n         * https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n         */\n        var limited = this._handleRateLimit(headers);\n        if (limited)\n            logger.warn(\"Too many \" + requestType + \" requests, backing off until: \" + this._disabledUntil(requestType));\n        if (status === Status.Success) {\n            resolve({ status: status });\n            return;\n        }\n        reject(response);\n    };\n    /**\n     * Gets the time that given category is disabled until for rate limiting\n     */\n    BaseTransport.prototype._disabledUntil = function (requestType) {\n        var category = CATEGORY_MAPPING[requestType];\n        return this._rateLimits[category] || this._rateLimits.all;\n    };\n    /**\n     * Checks if a category is rate limited\n     */\n    BaseTransport.prototype._isRateLimited = function (requestType) {\n        return this._disabledUntil(requestType) > new Date(Date.now());\n    };\n    /**\n     * Sets internal _rateLimits from incoming headers. Returns true if headers contains a non-empty rate limiting header.\n     */\n    BaseTransport.prototype._handleRateLimit = function (headers) {\n        var e_1, _a, e_2, _b;\n        var now = Date.now();\n        var rlHeader = headers['x-sentry-rate-limits'];\n        var raHeader = headers['retry-after'];\n        if (rlHeader) {\n            try {\n                // rate limit headers are of the form\n                //     <header>,<header>,..\n                // where each <header> is of the form\n                //     <retry_after>: <categories>: <scope>: <reason_code>\n                // where\n                //     <retry_after> is a delay in ms\n                //     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n                //         <category>;<category>;...\n                //     <scope> is what's being limited (org, project, or key) - ignored by SDK\n                //     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n                for (var _c = __values(rlHeader.trim().split(',')), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var limit = _d.value;\n                    var parameters = limit.split(':', 2);\n                    var headerDelay = parseInt(parameters[0], 10);\n                    var delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n                    try {\n                        for (var _e = (e_2 = void 0, __values(parameters[1].split(';'))), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var category = _f.value;\n                            this._rateLimits[category || 'all'] = new Date(now + delay);\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return true;\n        }\n        else if (raHeader) {\n            this._rateLimits.all = new Date(now + parseRetryAfterHeader(now, raHeader));\n            return true;\n        }\n        return false;\n    };\n    return BaseTransport;\n}());\nexport { BaseTransport };\n//# sourceMappingURL=base.js.map","/**\n * Consumes the promise and logs the error when it rejects.\n * @param promise A promise to forget.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function forget(promise) {\n    void promise.then(null, function (e) {\n        // TODO: Use a better logging mechanism\n        // eslint-disable-next-line no-console\n        console.error(e);\n    });\n}\n//# sourceMappingURL=async.js.map","import { __extends } from \"tslib\";\nimport { eventToSentryRequest, sessionToSentryRequest } from '@sentry/core';\nimport { Outcome } from '@sentry/types';\nimport { SentryError, supportsReferrerPolicy, SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\nimport { getNativeFetchImplementation } from './utils';\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    __extends(FetchTransport, _super);\n    function FetchTransport(options, fetchImpl) {\n        if (fetchImpl === void 0) { fetchImpl = getNativeFetchImplementation(); }\n        var _this = _super.call(this, options) || this;\n        _this._fetch = fetchImpl;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n        return this._sendRequest(eventToSentryRequest(event, this._api), event);\n    };\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendSession = function (session) {\n        return this._sendRequest(sessionToSentryRequest(session, this._api), session);\n    };\n    /**\n     * @param sentryRequest Prepared SentryRequest to be delivered\n     * @param originalPayload Original payload used to create SentryRequest\n     */\n    FetchTransport.prototype._sendRequest = function (sentryRequest, originalPayload) {\n        var _this = this;\n        if (this._isRateLimited(sentryRequest.type)) {\n            this.recordLostEvent(Outcome.RateLimitBackoff, sentryRequest.type);\n            return Promise.reject({\n                event: originalPayload,\n                type: sentryRequest.type,\n                reason: \"Transport for \" + sentryRequest.type + \" requests locked till \" + this._disabledUntil(sentryRequest.type) + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        var options = {\n            body: sentryRequest.body,\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        if (this.options.fetchParameters !== undefined) {\n            Object.assign(options, this.options.fetchParameters);\n        }\n        if (this.options.headers !== undefined) {\n            options.headers = this.options.headers;\n        }\n        return this._buffer\n            .add(function () {\n            return new SyncPromise(function (resolve, reject) {\n                void _this._fetch(sentryRequest.url, options)\n                    .then(function (response) {\n                    var headers = {\n                        'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n                        'retry-after': response.headers.get('Retry-After'),\n                    };\n                    _this._handleResponse({\n                        requestType: sentryRequest.type,\n                        response: response,\n                        headers: headers,\n                        resolve: resolve,\n                        reject: reject,\n                    });\n                })\n                    .catch(reject);\n            });\n        })\n            .then(undefined, function (reason) {\n            // It's either buffer rejection or any other xhr/fetch error, which are treated as NetworkError.\n            if (reason instanceof SentryError) {\n                _this.recordLostEvent(Outcome.QueueOverflow, sentryRequest.type);\n            }\n            else {\n                _this.recordLostEvent(Outcome.NetworkError, sentryRequest.type);\n            }\n            throw reason;\n        });\n    };\n    return FetchTransport;\n}(BaseTransport));\nexport { FetchTransport };\n//# sourceMappingURL=fetch.js.map","import { __extends } from \"tslib\";\nimport { eventToSentryRequest, sessionToSentryRequest } from '@sentry/core';\nimport { Outcome } from '@sentry/types';\nimport { SentryError, SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    __extends(XHRTransport, _super);\n    function XHRTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        return this._sendRequest(eventToSentryRequest(event, this._api), event);\n    };\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendSession = function (session) {\n        return this._sendRequest(sessionToSentryRequest(session, this._api), session);\n    };\n    /**\n     * @param sentryRequest Prepared SentryRequest to be delivered\n     * @param originalPayload Original payload used to create SentryRequest\n     */\n    XHRTransport.prototype._sendRequest = function (sentryRequest, originalPayload) {\n        var _this = this;\n        if (this._isRateLimited(sentryRequest.type)) {\n            this.recordLostEvent(Outcome.RateLimitBackoff, sentryRequest.type);\n            return Promise.reject({\n                event: originalPayload,\n                type: sentryRequest.type,\n                reason: \"Transport for \" + sentryRequest.type + \" requests locked till \" + this._disabledUntil(sentryRequest.type) + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        return this._buffer\n            .add(function () {\n            return new SyncPromise(function (resolve, reject) {\n                var request = new XMLHttpRequest();\n                request.onreadystatechange = function () {\n                    if (request.readyState === 4) {\n                        var headers = {\n                            'x-sentry-rate-limits': request.getResponseHeader('X-Sentry-Rate-Limits'),\n                            'retry-after': request.getResponseHeader('Retry-After'),\n                        };\n                        _this._handleResponse({ requestType: sentryRequest.type, response: request, headers: headers, resolve: resolve, reject: reject });\n                    }\n                };\n                request.open('POST', sentryRequest.url);\n                for (var header in _this.options.headers) {\n                    if (_this.options.headers.hasOwnProperty(header)) {\n                        request.setRequestHeader(header, _this.options.headers[header]);\n                    }\n                }\n                request.send(sentryRequest.body);\n            });\n        })\n            .then(undefined, function (reason) {\n            // It's either buffer rejection or any other xhr/fetch error, which are treated as NetworkError.\n            if (reason instanceof SentryError) {\n                _this.recordLostEvent(Outcome.QueueOverflow, sentryRequest.type);\n            }\n            else {\n                _this.recordLostEvent(Outcome.NetworkError, sentryRequest.type);\n            }\n            throw reason;\n        });\n    };\n    return XHRTransport;\n}(BaseTransport));\nexport { XHRTransport };\n//# sourceMappingURL=xhr.js.map","import { __assign, __extends } from \"tslib\";\nimport { BaseBackend } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { supportsFetch } from '@sentry/utils';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nvar BrowserBackend = /** @class */ (function (_super) {\n    __extends(BrowserBackend, _super);\n    function BrowserBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\n        return eventFromException(this._options, exception, hint);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n        if (level === void 0) { level = Severity.Info; }\n        return eventFromMessage(this._options, message, level, hint);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype._setupTransport = function () {\n        if (!this._options.dsn) {\n            // We return the noop transport here in case there is no Dsn.\n            return _super.prototype._setupTransport.call(this);\n        }\n        var transportOptions = __assign(__assign({}, this._options.transportOptions), { dsn: this._options.dsn, tunnel: this._options.tunnel, sendClientReports: this._options.sendClientReports, _metadata: this._options._metadata });\n        if (this._options.transport) {\n            return new this._options.transport(transportOptions);\n        }\n        if (supportsFetch()) {\n            return new FetchTransport(transportOptions);\n        }\n        return new XHRTransport(transportOptions);\n    };\n    return BrowserBackend;\n}(BaseBackend));\nexport { BrowserBackend };\n//# sourceMappingURL=backend.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { getCurrentHub } from '@sentry/hub';\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = getCurrentHub();\n    if (hub && hub[method]) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return hub[method].apply(hub, __spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function captureException(exception, captureContext) {\n    var syntheticException;\n    try {\n        throw new Error('Sentry syntheticException');\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureException', exception, {\n        captureContext: captureContext,\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message, captureContext) {\n    var syntheticException;\n    try {\n        throw new Error(message);\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    // This is necessary to provide explicit scopes upgrade, without changing the original\n    // arity of the `captureMessage(message, level)` method.\n    var level = typeof captureContext === 'string' ? captureContext : undefined;\n    var context = typeof captureContext !== 'string' ? { captureContext: captureContext } : undefined;\n    return callOnHub('captureMessage', message, level, __assign({ originalException: message, syntheticException: syntheticException }, context));\n}\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContext(name, context) {\n    callOnHub('setContext', name, context);\n}\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras) {\n    callOnHub('setExtras', extras);\n}\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags) {\n    callOnHub('setTags', tags);\n}\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key, extra) {\n    callOnHub('setExtra', key, extra);\n}\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key, value) {\n    callOnHub('setTag', key, value);\n}\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user) {\n    callOnHub('setUser', user);\n}\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback) {\n    callOnHub('withScope', callback);\n}\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, __spread(['_invokeClient', method], args));\n}\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nexport function startTransaction(context, customSamplingContext) {\n    return callOnHub('startTransaction', __assign({}, context), customSamplingContext);\n}\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { API, captureException, withScope } from '@sentry/core';\nimport { addExceptionMechanism, addExceptionTypeValue, getGlobalObject, logger } from '@sentry/utils';\nvar global = getGlobalObject();\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n        ignoreOnError -= 1;\n    });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n    if (options === void 0) { options = {}; }\n    if (typeof fn !== 'function') {\n        return fn;\n    }\n    try {\n        // We don't wanna wrap it twice\n        if (fn.__sentry__) {\n            return fn;\n        }\n        // If this has already been wrapped in the past, return that wrapped function\n        if (fn.__sentry_wrapped__) {\n            return fn.__sentry_wrapped__;\n        }\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\n        return fn;\n    }\n    /* eslint-disable prefer-rest-params */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var sentryWrapped = function () {\n        var args = Array.prototype.slice.call(arguments);\n        try {\n            if (before && typeof before === 'function') {\n                before.apply(this, arguments);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\n            if (fn.handleEvent) {\n                // Attempt to invoke user-land function\n                // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n                //       means the sentry.javascript SDK caught an error invoking your application code. This\n                //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                return fn.handleEvent.apply(this, wrappedArguments);\n            }\n            // Attempt to invoke user-land function\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n            //       means the sentry.javascript SDK caught an error invoking your application code. This\n            //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n            return fn.apply(this, wrappedArguments);\n        }\n        catch (ex) {\n            ignoreNextOnError();\n            withScope(function (scope) {\n                scope.addEventProcessor(function (event) {\n                    var processedEvent = __assign({}, event);\n                    if (options.mechanism) {\n                        addExceptionTypeValue(processedEvent, undefined, undefined);\n                        addExceptionMechanism(processedEvent, options.mechanism);\n                    }\n                    processedEvent.extra = __assign(__assign({}, processedEvent.extra), { arguments: args });\n                    return processedEvent;\n                });\n                captureException(ex);\n            });\n            throw ex;\n        }\n    };\n    /* eslint-enable prefer-rest-params */\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n        for (var property in fn) {\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\n                sentryWrapped[property] = fn[property];\n            }\n        }\n    }\n    catch (_oO) { } // eslint-disable-line no-empty\n    fn.prototype = fn.prototype || {};\n    sentryWrapped.prototype = fn.prototype;\n    Object.defineProperty(fn, '__sentry_wrapped__', {\n        enumerable: false,\n        value: sentryWrapped,\n    });\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    Object.defineProperties(sentryWrapped, {\n        __sentry__: {\n            enumerable: false,\n            value: true,\n        },\n        __sentry_original__: {\n            enumerable: false,\n            value: fn,\n        },\n    });\n    // Restore original function name (not all browsers allow that)\n    try {\n        var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n        if (descriptor.configurable) {\n            Object.defineProperty(sentryWrapped, 'name', {\n                get: function () {\n                    return fn.name;\n                },\n            });\n        }\n        // eslint-disable-next-line no-empty\n    }\n    catch (_oO) { }\n    return sentryWrapped;\n}\n/**\n * Injects the Report Dialog script\n * @hidden\n */\nexport function injectReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!global.document) {\n        return;\n    }\n    if (!options.eventId) {\n        logger.error(\"Missing eventId option in showReportDialog call\");\n        return;\n    }\n    if (!options.dsn) {\n        logger.error(\"Missing dsn option in showReportDialog call\");\n        return;\n    }\n    var script = global.document.createElement('script');\n    script.async = true;\n    script.src = new API(options.dsn).getReportDialogEndpoint(options);\n    if (options.onLoad) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        script.onload = options.onLoad;\n    }\n    var injectionPoint = global.document.head || global.document.body;\n    if (injectionPoint) {\n        injectionPoint.appendChild(script);\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { __assign, __read, __spread } from \"tslib\";\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable max-lines */\nimport { getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addInstrumentationHandler, getEventDescription, getGlobalObject, htmlTreeAsString, parseUrl, safeJoin, } from '@sentry/utils';\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nvar Breadcrumbs = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Breadcrumbs.id;\n        this._options = __assign({ console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\n    }\n    /**\n     * Create a breadcrumb of `sentry` from the events themselves\n     */\n    Breadcrumbs.prototype.addSentryBreadcrumb = function (event) {\n        if (!this._options.sentry) {\n            return;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: \"sentry.\" + (event.type === 'transaction' ? 'transaction' : 'event'),\n            event_id: event.event_id,\n            level: event.level,\n            message: getEventDescription(event),\n        }, {\n            event: event,\n        });\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n        var _this = this;\n        if (this._options.console) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._consoleBreadcrumb.apply(_this, __spread(args));\n                },\n                type: 'console',\n            });\n        }\n        if (this._options.dom) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._domBreadcrumb.apply(_this, __spread(args));\n                },\n                type: 'dom',\n            });\n        }\n        if (this._options.xhr) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._xhrBreadcrumb.apply(_this, __spread(args));\n                },\n                type: 'xhr',\n            });\n        }\n        if (this._options.fetch) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._fetchBreadcrumb.apply(_this, __spread(args));\n                },\n                type: 'fetch',\n            });\n        }\n        if (this._options.history) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._historyBreadcrumb.apply(_this, __spread(args));\n                },\n                type: 'history',\n            });\n        }\n    };\n    /**\n     * Creates breadcrumbs from console API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._consoleBreadcrumb = function (handlerData) {\n        var breadcrumb = {\n            category: 'console',\n            data: {\n                arguments: handlerData.args,\n                logger: 'console',\n            },\n            level: Severity.fromString(handlerData.level),\n            message: safeJoin(handlerData.args, ' '),\n        };\n        if (handlerData.level === 'assert') {\n            if (handlerData.args[0] === false) {\n                breadcrumb.message = \"Assertion failed: \" + (safeJoin(handlerData.args.slice(1), ' ') || 'console.assert');\n                breadcrumb.data.arguments = handlerData.args.slice(1);\n            }\n            else {\n                // Don't capture a breadcrumb for passed assertions\n                return;\n            }\n        }\n        getCurrentHub().addBreadcrumb(breadcrumb, {\n            input: handlerData.args,\n            level: handlerData.level,\n        });\n    };\n    /**\n     * Creates breadcrumbs from DOM API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._domBreadcrumb = function (handlerData) {\n        var target;\n        var keyAttrs = typeof this._options.dom === 'object' ? this._options.dom.serializeAttribute : undefined;\n        if (typeof keyAttrs === 'string') {\n            keyAttrs = [keyAttrs];\n        }\n        // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n        try {\n            target = handlerData.event.target\n                ? htmlTreeAsString(handlerData.event.target, keyAttrs)\n                : htmlTreeAsString(handlerData.event, keyAttrs);\n        }\n        catch (e) {\n            target = '<unknown>';\n        }\n        if (target.length === 0) {\n            return;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: \"ui.\" + handlerData.name,\n            message: target,\n        }, {\n            event: handlerData.event,\n            name: handlerData.name,\n            global: handlerData.global,\n        });\n    };\n    /**\n     * Creates breadcrumbs from XHR API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._xhrBreadcrumb = function (handlerData) {\n        if (handlerData.endTimestamp) {\n            // We only capture complete, non-sentry requests\n            if (handlerData.xhr.__sentry_own_request__) {\n                return;\n            }\n            var _a = handlerData.xhr.__sentry_xhr__ || {}, method = _a.method, url = _a.url, status_code = _a.status_code, body = _a.body;\n            getCurrentHub().addBreadcrumb({\n                category: 'xhr',\n                data: {\n                    method: method,\n                    url: url,\n                    status_code: status_code,\n                },\n                type: 'http',\n            }, {\n                xhr: handlerData.xhr,\n                input: body,\n            });\n            return;\n        }\n    };\n    /**\n     * Creates breadcrumbs from fetch API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._fetchBreadcrumb = function (handlerData) {\n        // We only capture complete fetch requests\n        if (!handlerData.endTimestamp) {\n            return;\n        }\n        if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n            // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n            return;\n        }\n        if (handlerData.error) {\n            getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: handlerData.fetchData,\n                level: Severity.Error,\n                type: 'http',\n            }, {\n                data: handlerData.error,\n                input: handlerData.args,\n            });\n        }\n        else {\n            getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: __assign(__assign({}, handlerData.fetchData), { status_code: handlerData.response.status }),\n                type: 'http',\n            }, {\n                input: handlerData.args,\n                response: handlerData.response,\n            });\n        }\n    };\n    /**\n     * Creates breadcrumbs from history API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._historyBreadcrumb = function (handlerData) {\n        var global = getGlobalObject();\n        var from = handlerData.from;\n        var to = handlerData.to;\n        var parsedLoc = parseUrl(global.location.href);\n        var parsedFrom = parseUrl(from);\n        var parsedTo = parseUrl(to);\n        // Initial pushState doesn't provide `from` information\n        if (!parsedFrom.path) {\n            parsedFrom = parsedLoc;\n        }\n        // Use only the path component of the URL if the URL matches the current\n        // document (almost all the time when using pushState)\n        if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n            to = parsedTo.relative;\n        }\n        if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n            from = parsedFrom.relative;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: 'navigation',\n            data: {\n                from: from,\n                to: to,\n            },\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n}());\nexport { Breadcrumbs };\n//# sourceMappingURL=breadcrumbs.js.map","import { __assign, __extends } from \"tslib\";\nimport { BaseClient, SDK_VERSION } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { injectReportDialog } from './helpers';\nimport { Breadcrumbs } from './integrations';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */ (function (_super) {\n    __extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n        if (options === void 0) { options = {}; }\n        var _this = this;\n        options._metadata = options._metadata || {};\n        options._metadata.sdk = options._metadata.sdk || {\n            name: 'sentry.javascript.browser',\n            packages: [\n                {\n                    name: 'npm:@sentry/browser',\n                    version: SDK_VERSION,\n                },\n            ],\n            version: SDK_VERSION,\n        };\n        _this = _super.call(this, BrowserBackend, options) || this;\n        return _this;\n    }\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        // doesn't work without a document (React Native)\n        var document = getGlobalObject().document;\n        if (!document) {\n            return;\n        }\n        if (!this._isEnabled()) {\n            logger.error('Trying to call showReportDialog with Sentry Client disabled');\n            return;\n        }\n        injectReportDialog(__assign(__assign({}, options), { dsn: options.dsn || this.getDsn() }));\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n        event.platform = event.platform || 'javascript';\n        return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._sendEvent = function (event) {\n        var integration = this.getIntegration(Breadcrumbs);\n        if (integration) {\n            integration.addSentryBreadcrumb(event);\n        }\n        _super.prototype._sendEvent.call(this, event);\n    };\n    return BrowserClient;\n}(BaseClient));\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map","import { __assign } from \"tslib\";\nimport { fill, getFunctionName, getGlobalObject } from '@sentry/utils';\nimport { wrap } from '../helpers';\nvar DEFAULT_EVENT_TARGET = [\n    'EventTarget',\n    'Window',\n    'Node',\n    'ApplicationCache',\n    'AudioTrackList',\n    'ChannelMergerNode',\n    'CryptoOperation',\n    'EventSource',\n    'FileReader',\n    'HTMLUnknownElement',\n    'IDBDatabase',\n    'IDBRequest',\n    'IDBTransaction',\n    'KeyOperation',\n    'MediaController',\n    'MessagePort',\n    'ModalWindow',\n    'Notification',\n    'SVGElementInstance',\n    'Screen',\n    'TextTrack',\n    'TextTrackCue',\n    'TextTrackList',\n    'WebSocket',\n    'WebSocketWorker',\n    'Worker',\n    'XMLHttpRequest',\n    'XMLHttpRequestEventTarget',\n    'XMLHttpRequestUpload',\n];\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function TryCatch(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = TryCatch.id;\n        this._options = __assign({ XMLHttpRequest: true, eventTarget: true, requestAnimationFrame: true, setInterval: true, setTimeout: true }, options);\n    }\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n        var global = getGlobalObject();\n        if (this._options.setTimeout) {\n            fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n        }\n        if (this._options.setInterval) {\n            fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n        }\n        if (this._options.requestAnimationFrame) {\n            fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n        }\n        if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n            fill(XMLHttpRequest.prototype, 'send', this._wrapXHR.bind(this));\n        }\n        if (this._options.eventTarget) {\n            var eventTarget = Array.isArray(this._options.eventTarget) ? this._options.eventTarget : DEFAULT_EVENT_TARGET;\n            eventTarget.forEach(this._wrapEventTarget.bind(this));\n        }\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var originalCallback = args[0];\n            args[0] = wrap(originalCallback, {\n                mechanism: {\n                    data: { function: getFunctionName(original) },\n                    handled: true,\n                    type: 'instrument',\n                },\n            });\n            return original.apply(this, args);\n        };\n    };\n    /** JSDoc */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TryCatch.prototype._wrapRAF = function (original) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return function (callback) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            return original.call(this, wrap(callback, {\n                mechanism: {\n                    data: {\n                        function: 'requestAnimationFrame',\n                        handler: getFunctionName(original),\n                    },\n                    handled: true,\n                    type: 'instrument',\n                },\n            }));\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var global = getGlobalObject();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        var proto = global[target] && global[target].prototype;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    if (typeof fn.handleEvent === 'function') {\n                        fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n                            mechanism: {\n                                data: {\n                                    function: 'handleEvent',\n                                    handler: getFunctionName(fn),\n                                    target: target,\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        });\n                    }\n                }\n                catch (err) {\n                    // can sometimes get 'Permission denied to access property \"handle Event'\n                }\n                return original.call(this, eventName, \n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                wrap(fn, {\n                    mechanism: {\n                        data: {\n                            function: 'addEventListener',\n                            handler: getFunctionName(fn),\n                            target: target,\n                        },\n                        handled: true,\n                        type: 'instrument',\n                    },\n                }), options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (originalRemoveEventListener) {\n            return function (eventName, fn, options) {\n                var _a;\n                /**\n                 * There are 2 possible scenarios here:\n                 *\n                 * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n                 * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n                 * as a pass-through, and call original `removeEventListener` with it.\n                 *\n                 * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n                 * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n                 * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n                 * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n                 * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n                 *\n                 * When someone adds a handler prior to initialization, and then do it again, but after,\n                 * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n                 * to get rid of the initial handler and it'd stick there forever.\n                 */\n                var wrappedEventHandler = fn;\n                try {\n                    var originalEventHandler = (_a = wrappedEventHandler) === null || _a === void 0 ? void 0 : _a.__sentry_wrapped__;\n                    if (originalEventHandler) {\n                        originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n                    }\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n            };\n        });\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapXHR = function (originalSend) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var xhr = this;\n            var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n            xmlHttpRequestProps.forEach(function (prop) {\n                if (prop in xhr && typeof xhr[prop] === 'function') {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    fill(xhr, prop, function (original) {\n                        var wrapOptions = {\n                            mechanism: {\n                                data: {\n                                    function: prop,\n                                    handler: getFunctionName(original),\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        };\n                        // If Instrument integration has been called before TryCatch, get the name of original function\n                        if (original.__sentry_original__) {\n                            wrapOptions.mechanism.data.handler = getFunctionName(original.__sentry_original__);\n                        }\n                        // Otherwise wrap directly\n                        return wrap(original, wrapOptions);\n                    });\n                }\n            });\n            return originalSend.apply(this, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n}());\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map","import { __assign } from \"tslib\";\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, addInstrumentationHandler, getLocationHref, isErrorEvent, isPrimitive, isString, logger, } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n/** Global handlers */\nvar GlobalHandlers = /** @class */ (function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = GlobalHandlers.id;\n        /** JSDoc */\n        this._onErrorHandlerInstalled = false;\n        /** JSDoc */\n        this._onUnhandledRejectionHandlerInstalled = false;\n        this._options = __assign({ onerror: true, onunhandledrejection: true }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n        Error.stackTraceLimit = 50;\n        if (this._options.onerror) {\n            logger.log('Global Handler attached: onerror');\n            this._installGlobalOnErrorHandler();\n        }\n        if (this._options.onunhandledrejection) {\n            logger.log('Global Handler attached: onunhandledrejection');\n            this._installGlobalOnUnhandledRejectionHandler();\n        }\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnErrorHandler = function () {\n        var _this = this;\n        if (this._onErrorHandlerInstalled) {\n            return;\n        }\n        addInstrumentationHandler({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            callback: function (data) {\n                var error = data.error;\n                var currentHub = getCurrentHub();\n                var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n                var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n                if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                    return;\n                }\n                var client = currentHub.getClient();\n                var event = error === undefined && isString(data.msg)\n                    ? _this._eventFromIncompleteOnError(data.msg, data.url, data.line, data.column)\n                    : _this._enhanceEventWithInitialFrame(eventFromUnknownInput(error || data.msg, undefined, {\n                        attachStacktrace: client && client.getOptions().attachStacktrace,\n                        rejection: false,\n                    }), data.url, data.line, data.column);\n                addExceptionMechanism(event, {\n                    handled: false,\n                    type: 'onerror',\n                });\n                currentHub.captureEvent(event, {\n                    originalException: error,\n                });\n            },\n            type: 'error',\n        });\n        this._onErrorHandlerInstalled = true;\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnUnhandledRejectionHandler = function () {\n        var _this = this;\n        if (this._onUnhandledRejectionHandlerInstalled) {\n            return;\n        }\n        addInstrumentationHandler({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            callback: function (e) {\n                var error = e;\n                // dig the object of the rejection out of known event types\n                try {\n                    // PromiseRejectionEvents store the object of the rejection under 'reason'\n                    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n                    if ('reason' in e) {\n                        error = e.reason;\n                    }\n                    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n                    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n                    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n                    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n                    // https://github.com/getsentry/sentry-javascript/issues/2380\n                    else if ('detail' in e && 'reason' in e.detail) {\n                        error = e.detail.reason;\n                    }\n                }\n                catch (_oO) {\n                    // no-empty\n                }\n                var currentHub = getCurrentHub();\n                var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n                var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n                if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                    return true;\n                }\n                var client = currentHub.getClient();\n                var event = isPrimitive(error)\n                    ? _this._eventFromRejectionWithPrimitive(error)\n                    : eventFromUnknownInput(error, undefined, {\n                        attachStacktrace: client && client.getOptions().attachStacktrace,\n                        rejection: true,\n                    });\n                event.level = Severity.Error;\n                addExceptionMechanism(event, {\n                    handled: false,\n                    type: 'onunhandledrejection',\n                });\n                currentHub.captureEvent(event, {\n                    originalException: error,\n                });\n                return;\n            },\n            type: 'unhandledrejection',\n        });\n        this._onUnhandledRejectionHandlerInstalled = true;\n    };\n    /**\n     * This function creates a stack from an old, error-less onerror handler.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    GlobalHandlers.prototype._eventFromIncompleteOnError = function (msg, url, line, column) {\n        var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n        // If 'message' is ErrorEvent, get real message from inside\n        var message = isErrorEvent(msg) ? msg.message : msg;\n        var name;\n        var groups = message.match(ERROR_TYPES_RE);\n        if (groups) {\n            name = groups[1];\n            message = groups[2];\n        }\n        var event = {\n            exception: {\n                values: [\n                    {\n                        type: name || 'Error',\n                        value: message,\n                    },\n                ],\n            },\n        };\n        return this._enhanceEventWithInitialFrame(event, url, line, column);\n    };\n    /**\n     * Create an event from a promise rejection where the `reason` is a primitive.\n     *\n     * @param reason: The `reason` property of the promise rejection\n     * @returns An Event object with an appropriate `exception` value\n     */\n    GlobalHandlers.prototype._eventFromRejectionWithPrimitive = function (reason) {\n        return {\n            exception: {\n                values: [\n                    {\n                        type: 'UnhandledRejection',\n                        // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n                        value: \"Non-Error promise rejection captured with value: \" + String(reason),\n                    },\n                ],\n            },\n        };\n    };\n    /** JSDoc */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    GlobalHandlers.prototype._enhanceEventWithInitialFrame = function (event, url, line, column) {\n        event.exception = event.exception || {};\n        event.exception.values = event.exception.values || [];\n        event.exception.values[0] = event.exception.values[0] || {};\n        event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n        event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n        var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n        var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n        var filename = isString(url) && url.length > 0 ? url : getLocationHref();\n        if (event.exception.values[0].stacktrace.frames.length === 0) {\n            event.exception.values[0].stacktrace.frames.push({\n                colno: colno,\n                filename: filename,\n                function: '?',\n                in_app: true,\n                lineno: lineno,\n            });\n        }\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n}());\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map","import { __read, __spread } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = LinkedErrors.id;\n        this._key = options.key || DEFAULT_KEY;\n        this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event, hint) {\n            var self = getCurrentHub().getIntegration(LinkedErrors);\n            if (self) {\n                var handler = self._handler && self._handler.bind(self);\n                return typeof handler === 'function' ? handler(event, hint) : event;\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n        if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n            return event;\n        }\n        var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n        event.exception.values = __spread(linkedErrors, event.exception.values);\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n        if (stack === void 0) { stack = []; }\n        if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n            return stack;\n        }\n        var stacktrace = computeStackTrace(error[key]);\n        var exception = exceptionFromStacktrace(stacktrace);\n        return this._walkErrorTree(error[key], key, __spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n}());\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map","import { logger } from '@sentry/utils';\n/** Deduplication filter */\nvar Dedupe = /** @class */ (function () {\n    function Dedupe() {\n        /**\n         * @inheritDoc\n         */\n        this.name = Dedupe.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    Dedupe.prototype.setupOnce = function (addGlobalEventProcessor, getCurrentHub) {\n        addGlobalEventProcessor(function (currentEvent) {\n            var self = getCurrentHub().getIntegration(Dedupe);\n            if (self) {\n                // Juuust in case something goes wrong\n                try {\n                    if (self._shouldDropEvent(currentEvent, self._previousEvent)) {\n                        logger.warn(\"Event dropped due to being a duplicate of previously captured event.\");\n                        return null;\n                    }\n                }\n                catch (_oO) {\n                    return (self._previousEvent = currentEvent);\n                }\n                return (self._previousEvent = currentEvent);\n            }\n            return currentEvent;\n        });\n    };\n    /** JSDoc */\n    Dedupe.prototype._shouldDropEvent = function (currentEvent, previousEvent) {\n        if (!previousEvent) {\n            return false;\n        }\n        if (this._isSameMessageEvent(currentEvent, previousEvent)) {\n            return true;\n        }\n        if (this._isSameExceptionEvent(currentEvent, previousEvent)) {\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    Dedupe.prototype._isSameMessageEvent = function (currentEvent, previousEvent) {\n        var currentMessage = currentEvent.message;\n        var previousMessage = previousEvent.message;\n        // If neither event has a message property, they were both exceptions, so bail out\n        if (!currentMessage && !previousMessage) {\n            return false;\n        }\n        // If only one event has a stacktrace, but not the other one, they are not the same\n        if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n            return false;\n        }\n        if (currentMessage !== previousMessage) {\n            return false;\n        }\n        if (!this._isSameFingerprint(currentEvent, previousEvent)) {\n            return false;\n        }\n        if (!this._isSameStacktrace(currentEvent, previousEvent)) {\n            return false;\n        }\n        return true;\n    };\n    /** JSDoc */\n    Dedupe.prototype._getFramesFromEvent = function (event) {\n        var exception = event.exception;\n        if (exception) {\n            try {\n                // @ts-ignore Object could be undefined\n                return exception.values[0].stacktrace.frames;\n            }\n            catch (_oO) {\n                return undefined;\n            }\n        }\n        else if (event.stacktrace) {\n            return event.stacktrace.frames;\n        }\n        return undefined;\n    };\n    /** JSDoc */\n    Dedupe.prototype._isSameStacktrace = function (currentEvent, previousEvent) {\n        var currentFrames = this._getFramesFromEvent(currentEvent);\n        var previousFrames = this._getFramesFromEvent(previousEvent);\n        // If neither event has a stacktrace, they are assumed to be the same\n        if (!currentFrames && !previousFrames) {\n            return true;\n        }\n        // If only one event has a stacktrace, but not the other one, they are not the same\n        if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n            return false;\n        }\n        currentFrames = currentFrames;\n        previousFrames = previousFrames;\n        // If number of frames differ, they are not the same\n        if (previousFrames.length !== currentFrames.length) {\n            return false;\n        }\n        // Otherwise, compare the two\n        for (var i = 0; i < previousFrames.length; i++) {\n            var frameA = previousFrames[i];\n            var frameB = currentFrames[i];\n            if (frameA.filename !== frameB.filename ||\n                frameA.lineno !== frameB.lineno ||\n                frameA.colno !== frameB.colno ||\n                frameA.function !== frameB.function) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /** JSDoc */\n    Dedupe.prototype._getExceptionFromEvent = function (event) {\n        return event.exception && event.exception.values && event.exception.values[0];\n    };\n    /** JSDoc */\n    Dedupe.prototype._isSameExceptionEvent = function (currentEvent, previousEvent) {\n        var previousException = this._getExceptionFromEvent(previousEvent);\n        var currentException = this._getExceptionFromEvent(currentEvent);\n        if (!previousException || !currentException) {\n            return false;\n        }\n        if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n            return false;\n        }\n        if (!this._isSameFingerprint(currentEvent, previousEvent)) {\n            return false;\n        }\n        if (!this._isSameStacktrace(currentEvent, previousEvent)) {\n            return false;\n        }\n        return true;\n    };\n    /** JSDoc */\n    Dedupe.prototype._isSameFingerprint = function (currentEvent, previousEvent) {\n        var currentFingerprint = currentEvent.fingerprint;\n        var previousFingerprint = previousEvent.fingerprint;\n        // If neither event has a fingerprint, they are assumed to be the same\n        if (!currentFingerprint && !previousFingerprint) {\n            return true;\n        }\n        // If only one event has a fingerprint, but not the other one, they are not the same\n        if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n            return false;\n        }\n        currentFingerprint = currentFingerprint;\n        previousFingerprint = previousFingerprint;\n        // Otherwise, compare the two\n        try {\n            return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Dedupe.id = 'Dedupe';\n    return Dedupe;\n}());\nexport { Dedupe };\n//# sourceMappingURL=dedupe.js.map","import { __assign } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\nvar UserAgent = /** @class */ (function () {\n    function UserAgent() {\n        /**\n         * @inheritDoc\n         */\n        this.name = UserAgent.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    UserAgent.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            var _a, _b, _c;\n            if (getCurrentHub().getIntegration(UserAgent)) {\n                // if none of the information we want exists, don't bother\n                if (!global.navigator && !global.location && !global.document) {\n                    return event;\n                }\n                // grab as much info as exists and add it to the event\n                var url = ((_a = event.request) === null || _a === void 0 ? void 0 : _a.url) || ((_b = global.location) === null || _b === void 0 ? void 0 : _b.href);\n                var referrer = (global.document || {}).referrer;\n                var userAgent = (global.navigator || {}).userAgent;\n                var headers = __assign(__assign(__assign({}, (_c = event.request) === null || _c === void 0 ? void 0 : _c.headers), (referrer && { Referer: referrer })), (userAgent && { 'User-Agent': userAgent }));\n                var request = __assign(__assign({}, (url && { url: url })), { headers: headers });\n                return __assign(__assign({}, event), { request: request });\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    UserAgent.id = 'UserAgent';\n    return UserAgent;\n}());\nexport { UserAgent };\n//# sourceMappingURL=useragent.js.map","import { __assign } from \"tslib\";\nimport { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { addInstrumentationHandler, getGlobalObject, logger, SyncPromise } from '@sentry/utils';\nimport { BrowserClient } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, Dedupe, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\nexport var defaultIntegrations = [\n    new CoreIntegrations.InboundFilters(),\n    new CoreIntegrations.FunctionToString(),\n    new TryCatch(),\n    new Breadcrumbs(),\n    new GlobalHandlers(),\n    new LinkedErrors(),\n    new Dedupe(),\n    new UserAgent(),\n];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options) {\n    if (options === void 0) { options = {}; }\n    if (options.defaultIntegrations === undefined) {\n        options.defaultIntegrations = defaultIntegrations;\n    }\n    if (options.release === undefined) {\n        var window_1 = getGlobalObject();\n        // This supports the variable that sentry-webpack-plugin injects\n        if (window_1.SENTRY_RELEASE && window_1.SENTRY_RELEASE.id) {\n            options.release = window_1.SENTRY_RELEASE.id;\n        }\n    }\n    if (options.autoSessionTracking === undefined) {\n        options.autoSessionTracking = true;\n    }\n    if (options.sendClientReports === undefined) {\n        options.sendClientReports = true;\n    }\n    initAndBind(BrowserClient, options);\n    if (options.autoSessionTracking) {\n        startSessionTracking();\n    }\n}\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    var hub = getCurrentHub();\n    var scope = hub.getScope();\n    if (scope) {\n        options.user = __assign(__assign({}, scope.getUser()), options.user);\n    }\n    if (!options.eventId) {\n        options.eventId = hub.lastEventId();\n    }\n    var client = hub.getClient();\n    if (client) {\n        client.showReportDialog(options);\n    }\n}\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId() {\n    return getCurrentHub().lastEventId();\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad() {\n    // Noop\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback) {\n    callback();\n}\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport function flush(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.flush(timeout);\n    }\n    logger.warn('Cannot flush events. No client defined.');\n    return SyncPromise.resolve(false);\n}\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport function close(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.close(timeout);\n    }\n    logger.warn('Cannot flush events and disable SDK. No client defined.');\n    return SyncPromise.resolve(false);\n}\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn) {\n    return internalWrap(fn)();\n}\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n    var window = getGlobalObject();\n    var document = window.document;\n    if (typeof document === 'undefined') {\n        logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n        return;\n    }\n    var hub = getCurrentHub();\n    // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n    // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n    // pinned at the same version in package.json, but there are edge cases where it's possible. See\n    // https://github.com/getsentry/sentry-javascript/issues/3207 and\n    // https://github.com/getsentry/sentry-javascript/issues/3234 and\n    // https://github.com/getsentry/sentry-javascript/issues/3278.\n    if (typeof hub.startSession !== 'function' || typeof hub.captureSession !== 'function') {\n        return;\n    }\n    // The session duration for browser sessions does not track a meaningful\n    // concept that can be used as a metric.\n    // Automatically captured sessions are akin to page views, and thus we\n    // discard their duration.\n    hub.startSession({ ignoreDuration: true });\n    hub.captureSession();\n    // We want to create a session for every navigation as well\n    addInstrumentationHandler({\n        callback: function (_a) {\n            var from = _a.from, to = _a.to;\n            // Don't create an additional session for the initial route or if the location did not change\n            if (from === undefined || from === to) {\n                return;\n            }\n            hub.startSession({ ignoreDuration: true });\n            hub.captureSession();\n        },\n        type: 'history',\n    });\n}\n//# sourceMappingURL=sdk.js.map","import { init as browserInit, SDK_VERSION } from '@sentry/browser';\n/**\n * Inits the React SDK\n */\nexport function init(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n        name: 'sentry.javascript.react',\n        packages: [\n            {\n                name: 'npm:@sentry/react',\n                version: SDK_VERSION,\n            },\n        ],\n        version: SDK_VERSION,\n    };\n    browserInit(options);\n}\n//# sourceMappingURL=sdk.js.map","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind(clientClass, options) {\n    var _a;\n    if (options.debug === true) {\n        logger.enable();\n    }\n    var hub = getCurrentHub();\n    (_a = hub.getScope()) === null || _a === void 0 ? void 0 : _a.update(options.initialScope);\n    var client = new clientClass(options);\n    hub.bindClient(client);\n}\n//# sourceMappingURL=sdk.js.map","export var TransactionSamplingMethod;\n(function (TransactionSamplingMethod) {\n    TransactionSamplingMethod[\"Explicit\"] = \"explicitly_set\";\n    TransactionSamplingMethod[\"Sampler\"] = \"client_sampler\";\n    TransactionSamplingMethod[\"Rate\"] = \"client_rate\";\n    TransactionSamplingMethod[\"Inheritance\"] = \"inheritance\";\n})(TransactionSamplingMethod || (TransactionSamplingMethod = {}));\n//# sourceMappingURL=transaction.js.map","import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { SpanStatus } from './spanstatus';\nimport { getActiveTransaction } from './utils';\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation() {\n    addInstrumentationHandler({\n        callback: errorCallback,\n        type: 'error',\n    });\n    addInstrumentationHandler({\n        callback: errorCallback,\n        type: 'unhandledrejection',\n    });\n}\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n    var activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n        logger.log(\"[Tracing] Transaction: \" + SpanStatus.InternalError + \" -> Global error occured\");\n        activeTransaction.setStatus(SpanStatus.InternalError);\n    }\n}\n//# sourceMappingURL=errors.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { getMainCarrier } from '@sentry/hub';\nimport { TransactionSamplingMethod, } from '@sentry/types';\nimport { dynamicRequire, isNodeEnv, loadModule, logger } from '@sentry/utils';\nimport { registerErrorInstrumentation } from './errors';\nimport { IdleTransaction } from './idletransaction';\nimport { Transaction } from './transaction';\nimport { hasTracingEnabled } from './utils';\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n    var scope = this.getScope();\n    if (scope) {\n        var span = scope.getSpan();\n        if (span) {\n            return {\n                'sentry-trace': span.toTraceparent(),\n            };\n        }\n    }\n    return {};\n}\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param hub: The hub off of which to read config options\n * @param transaction: The transaction needing a sampling decision\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(transaction, options, samplingContext) {\n    // nothing to do if tracing is not enabled\n    if (!hasTracingEnabled(options)) {\n        transaction.sampled = false;\n        return transaction;\n    }\n    // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n    if (transaction.sampled !== undefined) {\n        transaction.setMetadata({\n            transactionSampling: { method: TransactionSamplingMethod.Explicit },\n        });\n        return transaction;\n    }\n    // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n    // work; prefer the hook if so\n    var sampleRate;\n    if (typeof options.tracesSampler === 'function') {\n        sampleRate = options.tracesSampler(samplingContext);\n        transaction.setMetadata({\n            transactionSampling: {\n                method: TransactionSamplingMethod.Sampler,\n                // cast to number in case it's a boolean\n                rate: Number(sampleRate),\n            },\n        });\n    }\n    else if (samplingContext.parentSampled !== undefined) {\n        sampleRate = samplingContext.parentSampled;\n        transaction.setMetadata({\n            transactionSampling: { method: TransactionSamplingMethod.Inheritance },\n        });\n    }\n    else {\n        sampleRate = options.tracesSampleRate;\n        transaction.setMetadata({\n            transactionSampling: {\n                method: TransactionSamplingMethod.Rate,\n                // cast to number in case it's a boolean\n                rate: Number(sampleRate),\n            },\n        });\n    }\n    // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n    // only valid values are booleans or numbers between 0 and 1.)\n    if (!isValidSampleRate(sampleRate)) {\n        logger.warn(\"[Tracing] Discarding transaction because of invalid sample rate.\");\n        transaction.sampled = false;\n        return transaction;\n    }\n    // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n    if (!sampleRate) {\n        logger.log(\"[Tracing] Discarding transaction because \" + (typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'));\n        transaction.sampled = false;\n        return transaction;\n    }\n    // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n    // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n    transaction.sampled = Math.random() < sampleRate;\n    // if we're not going to keep it, we're done\n    if (!transaction.sampled) {\n        logger.log(\"[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = \" + Number(sampleRate) + \")\");\n        return transaction;\n    }\n    logger.log(\"[Tracing] starting \" + transaction.op + \" transaction - \" + transaction.name);\n    return transaction;\n}\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n    // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n        logger.warn(\"[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got \" + JSON.stringify(rate) + \" of type \" + JSON.stringify(typeof rate) + \".\");\n        return false;\n    }\n    // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n    if (rate < 0 || rate > 1) {\n        logger.warn(\"[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got \" + rate + \".\");\n        return false;\n    }\n    return true;\n}\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(transactionContext, customSamplingContext) {\n    var _a, _b;\n    var options = ((_a = this.getClient()) === null || _a === void 0 ? void 0 : _a.getOptions()) || {};\n    var transaction = new Transaction(transactionContext, this);\n    transaction = sample(transaction, options, __assign({ parentSampled: transactionContext.parentSampled, transactionContext: transactionContext }, customSamplingContext));\n    if (transaction.sampled) {\n        transaction.initSpanRecorder((_b = options._experiments) === null || _b === void 0 ? void 0 : _b.maxSpans);\n    }\n    return transaction;\n}\n/**\n * Create new idle transaction.\n */\nexport function startIdleTransaction(hub, transactionContext, idleTimeout, onScope, customSamplingContext) {\n    var _a, _b;\n    var options = ((_a = hub.getClient()) === null || _a === void 0 ? void 0 : _a.getOptions()) || {};\n    var transaction = new IdleTransaction(transactionContext, hub, idleTimeout, onScope);\n    transaction = sample(transaction, options, __assign({ parentSampled: transactionContext.parentSampled, transactionContext: transactionContext }, customSamplingContext));\n    if (transaction.sampled) {\n        transaction.initSpanRecorder((_b = options._experiments) === null || _b === void 0 ? void 0 : _b.maxSpans);\n    }\n    return transaction;\n}\n/**\n * @private\n */\nexport function _addTracingExtensions() {\n    var carrier = getMainCarrier();\n    if (!carrier.__SENTRY__) {\n        return;\n    }\n    carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n    if (!carrier.__SENTRY__.extensions.startTransaction) {\n        carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n    }\n    if (!carrier.__SENTRY__.extensions.traceHeaders) {\n        carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n    }\n}\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n    var carrier = getMainCarrier();\n    if (!carrier.__SENTRY__) {\n        return;\n    }\n    var packageToIntegrationMapping = {\n        mongodb: function () {\n            var integration = dynamicRequire(module, './integrations/mongo');\n            return new integration.Mongo();\n        },\n        mongoose: function () {\n            var integration = dynamicRequire(module, './integrations/mongo');\n            return new integration.Mongo({ mongoose: true });\n        },\n        mysql: function () {\n            var integration = dynamicRequire(module, './integrations/mysql');\n            return new integration.Mysql();\n        },\n        pg: function () {\n            var integration = dynamicRequire(module, './integrations/postgres');\n            return new integration.Postgres();\n        },\n    };\n    var mappedPackages = Object.keys(packageToIntegrationMapping)\n        .filter(function (moduleName) { return !!loadModule(moduleName); })\n        .map(function (pkg) {\n        try {\n            return packageToIntegrationMapping[pkg]();\n        }\n        catch (e) {\n            return undefined;\n        }\n    })\n        .filter(function (p) { return p; });\n    if (mappedPackages.length > 0) {\n        carrier.__SENTRY__.integrations = __spread((carrier.__SENTRY__.integrations || []), mappedPackages);\n    }\n}\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nexport function addExtensionMethods() {\n    _addTracingExtensions();\n    // Detect and automatically load specified integrations.\n    if (isNodeEnv()) {\n        _autoloadDatabaseIntegrations();\n    }\n    // If an error happens globally, we should make sure transaction status is set to error.\n    registerErrorInstrumentation();\n}\n//# sourceMappingURL=hubextensions.js.map","import { __extends, __values } from \"tslib\";\nimport { logger, timestampWithMs } from '@sentry/utils';\nimport { SpanRecorder } from './span';\nimport { SpanStatus } from './spanstatus';\nimport { Transaction } from './transaction';\nexport var DEFAULT_IDLE_TIMEOUT = 1000;\nexport var HEARTBEAT_INTERVAL = 5000;\n/**\n * @inheritDoc\n */\nvar IdleTransactionSpanRecorder = /** @class */ (function (_super) {\n    __extends(IdleTransactionSpanRecorder, _super);\n    function IdleTransactionSpanRecorder(_pushActivity, _popActivity, transactionSpanId, maxlen) {\n        if (transactionSpanId === void 0) { transactionSpanId = ''; }\n        var _this = _super.call(this, maxlen) || this;\n        _this._pushActivity = _pushActivity;\n        _this._popActivity = _popActivity;\n        _this.transactionSpanId = transactionSpanId;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    IdleTransactionSpanRecorder.prototype.add = function (span) {\n        var _this = this;\n        // We should make sure we do not push and pop activities for\n        // the transaction that this span recorder belongs to.\n        if (span.spanId !== this.transactionSpanId) {\n            // We patch span.finish() to pop an activity after setting an endTimestamp.\n            span.finish = function (endTimestamp) {\n                span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n                _this._popActivity(span.spanId);\n            };\n            // We should only push new activities if the span does not have an end timestamp.\n            if (span.endTimestamp === undefined) {\n                this._pushActivity(span.spanId);\n            }\n        }\n        _super.prototype.add.call(this, span);\n    };\n    return IdleTransactionSpanRecorder;\n}(SpanRecorder));\nexport { IdleTransactionSpanRecorder };\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nvar IdleTransaction = /** @class */ (function (_super) {\n    __extends(IdleTransaction, _super);\n    function IdleTransaction(transactionContext, _idleHub, \n    /**\n     * The time to wait in ms until the idle transaction will be finished.\n     * @default 1000\n     */\n    _idleTimeout, \n    // If an idle transaction should be put itself on and off the scope automatically.\n    _onScope) {\n        if (_idleTimeout === void 0) { _idleTimeout = DEFAULT_IDLE_TIMEOUT; }\n        if (_onScope === void 0) { _onScope = false; }\n        var _this = _super.call(this, transactionContext, _idleHub) || this;\n        _this._idleHub = _idleHub;\n        _this._idleTimeout = _idleTimeout;\n        _this._onScope = _onScope;\n        // Activities store a list of active spans\n        _this.activities = {};\n        // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n        _this._heartbeatCounter = 0;\n        // We should not use heartbeat if we finished a transaction\n        _this._finished = false;\n        _this._beforeFinishCallbacks = [];\n        if (_idleHub && _onScope) {\n            // There should only be one active transaction on the scope\n            clearActiveTransaction(_idleHub);\n            // We set the transaction here on the scope so error events pick up the trace\n            // context and attach it to the error.\n            logger.log(\"Setting idle transaction on scope. Span ID: \" + _this.spanId);\n            _idleHub.configureScope(function (scope) { return scope.setSpan(_this); });\n        }\n        _this._initTimeout = setTimeout(function () {\n            if (!_this._finished) {\n                _this.finish();\n            }\n        }, _this._idleTimeout);\n        return _this;\n    }\n    /** {@inheritDoc} */\n    IdleTransaction.prototype.finish = function (endTimestamp) {\n        var e_1, _a;\n        var _this = this;\n        if (endTimestamp === void 0) { endTimestamp = timestampWithMs(); }\n        this._finished = true;\n        this.activities = {};\n        if (this.spanRecorder) {\n            logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n            try {\n                for (var _b = __values(this._beforeFinishCallbacks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var callback = _c.value;\n                    callback(this, endTimestamp);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.spanRecorder.spans = this.spanRecorder.spans.filter(function (span) {\n                // If we are dealing with the transaction itself, we just return it\n                if (span.spanId === _this.spanId) {\n                    return true;\n                }\n                // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n                if (!span.endTimestamp) {\n                    span.endTimestamp = endTimestamp;\n                    span.setStatus(SpanStatus.Cancelled);\n                    logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n                }\n                var keepSpan = span.startTimestamp < endTimestamp;\n                if (!keepSpan) {\n                    logger.log('[Tracing] discarding Span since it happened after Transaction was finished', JSON.stringify(span, undefined, 2));\n                }\n                return keepSpan;\n            });\n            logger.log('[Tracing] flushing IdleTransaction');\n        }\n        else {\n            logger.log('[Tracing] No active IdleTransaction');\n        }\n        // this._onScope is true if the transaction was previously on the scope.\n        if (this._onScope) {\n            clearActiveTransaction(this._idleHub);\n        }\n        return _super.prototype.finish.call(this, endTimestamp);\n    };\n    /**\n     * Register a callback function that gets excecuted before the transaction finishes.\n     * Useful for cleanup or if you want to add any additional spans based on current context.\n     *\n     * This is exposed because users have no other way of running something before an idle transaction\n     * finishes.\n     */\n    IdleTransaction.prototype.registerBeforeFinishCallback = function (callback) {\n        this._beforeFinishCallbacks.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    IdleTransaction.prototype.initSpanRecorder = function (maxlen) {\n        var _this = this;\n        if (!this.spanRecorder) {\n            var pushActivity = function (id) {\n                if (_this._finished) {\n                    return;\n                }\n                _this._pushActivity(id);\n            };\n            var popActivity = function (id) {\n                if (_this._finished) {\n                    return;\n                }\n                _this._popActivity(id);\n            };\n            this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n            // Start heartbeat so that transactions do not run forever.\n            logger.log('Starting heartbeat');\n            this._pingHeartbeat();\n        }\n        this.spanRecorder.add(this);\n    };\n    /**\n     * Start tracking a specific activity.\n     * @param spanId The span id that represents the activity\n     */\n    IdleTransaction.prototype._pushActivity = function (spanId) {\n        if (this._initTimeout) {\n            clearTimeout(this._initTimeout);\n            this._initTimeout = undefined;\n        }\n        logger.log(\"[Tracing] pushActivity: \" + spanId);\n        this.activities[spanId] = true;\n        logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    };\n    /**\n     * Remove an activity from usage\n     * @param spanId The span id that represents the activity\n     */\n    IdleTransaction.prototype._popActivity = function (spanId) {\n        var _this = this;\n        if (this.activities[spanId]) {\n            logger.log(\"[Tracing] popActivity \" + spanId);\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete this.activities[spanId];\n            logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n        }\n        if (Object.keys(this.activities).length === 0) {\n            var timeout = this._idleTimeout;\n            // We need to add the timeout here to have the real endtimestamp of the transaction\n            // Remember timestampWithMs is in seconds, timeout is in ms\n            var end_1 = timestampWithMs() + timeout / 1000;\n            setTimeout(function () {\n                if (!_this._finished) {\n                    _this.finish(end_1);\n                }\n            }, timeout);\n        }\n    };\n    /**\n     * Checks when entries of this.activities are not changing for 3 beats.\n     * If this occurs we finish the transaction.\n     */\n    IdleTransaction.prototype._beat = function () {\n        // We should not be running heartbeat if the idle transaction is finished.\n        if (this._finished) {\n            return;\n        }\n        var heartbeatString = Object.keys(this.activities).join('');\n        if (heartbeatString === this._prevHeartbeatString) {\n            this._heartbeatCounter += 1;\n        }\n        else {\n            this._heartbeatCounter = 1;\n        }\n        this._prevHeartbeatString = heartbeatString;\n        if (this._heartbeatCounter >= 3) {\n            logger.log(\"[Tracing] Transaction finished because of no change for 3 heart beats\");\n            this.setStatus(SpanStatus.DeadlineExceeded);\n            this.setTag('heartbeat', 'failed');\n            this.finish();\n        }\n        else {\n            this._pingHeartbeat();\n        }\n    };\n    /**\n     * Pings the heartbeat\n     */\n    IdleTransaction.prototype._pingHeartbeat = function () {\n        var _this = this;\n        logger.log(\"pinging Heartbeat -> current counter: \" + this._heartbeatCounter);\n        setTimeout(function () {\n            _this._beat();\n        }, HEARTBEAT_INTERVAL);\n    };\n    return IdleTransaction;\n}(Transaction));\nexport { IdleTransaction };\n/**\n * Reset active transaction on scope\n */\nfunction clearActiveTransaction(hub) {\n    if (hub) {\n        var scope = hub.getScope();\n        if (scope) {\n            var transaction = scope.getTransaction();\n            if (transaction) {\n                scope.setSpan(undefined);\n            }\n        }\n    }\n}\n//# sourceMappingURL=idletransaction.js.map","import { getGlobalObject, logger } from '@sentry/utils';\nimport { SpanStatus } from '../spanstatus';\nimport { getActiveTransaction } from '../utils';\nvar global = getGlobalObject();\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection() {\n    if (global && global.document) {\n        global.document.addEventListener('visibilitychange', function () {\n            var activeTransaction = getActiveTransaction();\n            if (global.document.hidden && activeTransaction) {\n                logger.log(\"[Tracing] Transaction: \" + SpanStatus.Cancelled + \" -> since tab moved to the background, op: \" + activeTransaction.op);\n                // We should not set status if it is already set, this prevent important statuses like\n                // error or data loss from being overwritten on transaction.\n                if (!activeTransaction.status) {\n                    activeTransaction.setStatus(SpanStatus.Cancelled);\n                }\n                activeTransaction.setTag('visibilitychange', 'document.hidden');\n                activeTransaction.finish();\n            }\n        });\n    }\n    else {\n        logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n    }\n}\n//# sourceMappingURL=backgroundtab.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var bindReporter = function (callback, metric, reportAllChanges) {\n    var prevValue;\n    return function (forceReport) {\n        if (metric.value >= 0) {\n            if (forceReport || reportAllChanges) {\n                metric.delta = metric.value - (prevValue || 0);\n                // Report the metric if there's a non-zero delta or if no previous\n                // value exists (which can happen in the case of the document becoming\n                // hidden when the metric value is 0).\n                // See: https://github.com/GoogleChrome/web-vitals/issues/14\n                if (metric.delta || prevValue === undefined) {\n                    prevValue = metric.value;\n                    callback(metric);\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=bindReporter.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { generateUniqueID } from './generateUniqueID';\nexport var initMetric = function (name, value) {\n    return {\n        name: name,\n        value: (value !== null && value !== void 0 ? value : -1),\n        delta: 0,\n        entries: [],\n        id: generateUniqueID(),\n    };\n};\n//# sourceMappingURL=initMetric.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport var generateUniqueID = function () {\n    return \"v2-\" + Date.now() + \"-\" + (Math.floor(Math.random() * (9e12 - 1)) + 1e12);\n};\n//# sourceMappingURL=generateUniqueID.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport var observe = function (type, callback) {\n    try {\n        if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n            // More extensive feature detect needed for Firefox due to:\n            // https://github.com/GoogleChrome/web-vitals/issues/142\n            if (type === 'first-input' && !('PerformanceEventTiming' in self)) {\n                return;\n            }\n            var po = new PerformanceObserver(function (l) { return l.getEntries().map(callback); });\n            po.observe({ type: type, buffered: true });\n            return po;\n        }\n    }\n    catch (e) {\n        // Do nothing.\n    }\n    return;\n};\n//# sourceMappingURL=observe.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobalObject } from '@sentry/utils';\nexport var onHidden = function (cb, once) {\n    var onHiddenOrPageHide = function (event) {\n        if (event.type === 'pagehide' || getGlobalObject().document.visibilityState === 'hidden') {\n            cb(event);\n            if (once) {\n                removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n                removeEventListener('pagehide', onHiddenOrPageHide, true);\n            }\n        }\n    };\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n//# sourceMappingURL=onHidden.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobalObject } from '@sentry/utils';\nimport { onHidden } from './onHidden';\nvar firstHiddenTime = -1;\nvar initHiddenTime = function () {\n    return getGlobalObject().document.visibilityState === 'hidden' ? 0 : Infinity;\n};\nvar trackChanges = function () {\n    // Update the time if/when the document becomes hidden.\n    onHidden(function (_a) {\n        var timeStamp = _a.timeStamp;\n        firstHiddenTime = timeStamp;\n    }, true);\n};\nexport var getVisibilityWatcher = function () {\n    if (firstHiddenTime < 0) {\n        // If the document is hidden when this code runs, assume it was hidden\n        // since navigation start. This isn't a perfect heuristic, but it's the\n        // best we can do until an API is available to support querying past\n        // visibilityState.\n        firstHiddenTime = initHiddenTime();\n        trackChanges();\n    }\n    return {\n        get firstHiddenTime() {\n            return firstHiddenTime;\n        },\n    };\n};\n//# sourceMappingURL=getVisibilityWatcher.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nvar reportedMetricIDs = {};\nexport var getLCP = function (onReport, reportAllChanges) {\n    var visibilityWatcher = getVisibilityWatcher();\n    var metric = initMetric('LCP');\n    var report;\n    var entryHandler = function (entry) {\n        // The startTime attribute returns the value of the renderTime if it is not 0,\n        // and the value of the loadTime otherwise.\n        var value = entry.startTime;\n        // If the page was hidden prior to paint time of the entry,\n        // ignore it and mark the metric as final, otherwise add the entry.\n        if (value < visibilityWatcher.firstHiddenTime) {\n            metric.value = value;\n            metric.entries.push(entry);\n        }\n        if (report) {\n            report();\n        }\n    };\n    var po = observe('largest-contentful-paint', entryHandler);\n    if (po) {\n        report = bindReporter(onReport, metric, reportAllChanges);\n        var stopListening_1 = function () {\n            if (!reportedMetricIDs[metric.id]) {\n                po.takeRecords().map(entryHandler);\n                po.disconnect();\n                reportedMetricIDs[metric.id] = true;\n                report(true);\n            }\n        };\n        // Stop listening after input. Note: while scrolling is an input that\n        // stop LCP observation, it's unreliable since it can be programmatically\n        // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n        ['keydown', 'click'].forEach(function (type) {\n            addEventListener(type, stopListening_1, { once: true, capture: true });\n        });\n        onHidden(stopListening_1, true);\n    }\n};\n//# sourceMappingURL=getLCP.js.map","import { __assign, __rest } from \"tslib\";\nimport { browserPerformanceTimeOrigin, getGlobalObject, htmlTreeAsString, isNodeEnv, logger } from '@sentry/utils';\nimport { msToSec } from '../utils';\nimport { getCLS } from './web-vitals/getCLS';\nimport { getFID } from './web-vitals/getFID';\nimport { getLCP } from './web-vitals/getLCP';\nimport { getVisibilityWatcher } from './web-vitals/lib/getVisibilityWatcher';\nvar global = getGlobalObject();\nexport var DEFAULT_METRICS_INSTR_OPTIONS = {\n    _reportAllChanges: false,\n};\n/** Class tracking metrics  */\nvar MetricsInstrumentation = /** @class */ (function () {\n    function MetricsInstrumentation(_options) {\n        var _a, _b;\n        this._measurements = {};\n        this._performanceCursor = 0;\n        if (!isNodeEnv() && ((_a = global) === null || _a === void 0 ? void 0 : _a.performance) && ((_b = global) === null || _b === void 0 ? void 0 : _b.document)) {\n            if (global.performance.mark) {\n                global.performance.mark('sentry-tracing-init');\n            }\n            this._trackCLS();\n            this._trackLCP(_options._reportAllChanges);\n            this._trackFID();\n        }\n    }\n    /** Add performance related spans to a transaction */\n    MetricsInstrumentation.prototype.addPerformanceEntries = function (transaction) {\n        var _this = this;\n        if (!global || !global.performance || !global.performance.getEntries || !browserPerformanceTimeOrigin) {\n            // Gatekeeper if performance API not available\n            return;\n        }\n        logger.log('[Tracing] Adding & adjusting spans using Performance API');\n        var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n        var entryScriptSrc;\n        if (global.document && global.document.scripts) {\n            // eslint-disable-next-line @typescript-eslint/prefer-for-of\n            for (var i = 0; i < global.document.scripts.length; i++) {\n                // We go through all scripts on the page and look for 'data-entry'\n                // We remember the name and measure the time between this script finished loading and\n                // our mark 'sentry-tracing-init'\n                if (global.document.scripts[i].dataset.entry === 'true') {\n                    entryScriptSrc = global.document.scripts[i].src;\n                    break;\n                }\n            }\n        }\n        var entryScriptStartTimestamp;\n        var tracingInitMarkStartTime;\n        var responseStartTimestamp;\n        var requestStartTimestamp;\n        global.performance\n            .getEntries()\n            .slice(this._performanceCursor)\n            .forEach(function (entry) {\n            var startTime = msToSec(entry.startTime);\n            var duration = msToSec(entry.duration);\n            if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n                return;\n            }\n            switch (entry.entryType) {\n                case 'navigation': {\n                    addNavigationSpans(transaction, entry, timeOrigin);\n                    responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n                    requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n                    break;\n                }\n                case 'mark':\n                case 'paint':\n                case 'measure': {\n                    var startTimestamp = addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n                    if (tracingInitMarkStartTime === undefined && entry.name === 'sentry-tracing-init') {\n                        tracingInitMarkStartTime = startTimestamp;\n                    }\n                    // capture web vitals\n                    var firstHidden = getVisibilityWatcher();\n                    // Only report if the page wasn't hidden prior to the web vital.\n                    var shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n                    if (entry.name === 'first-paint' && shouldRecord) {\n                        logger.log('[Measurements] Adding FP');\n                        _this._measurements['fp'] = { value: entry.startTime };\n                        _this._measurements['mark.fp'] = { value: startTimestamp };\n                    }\n                    if (entry.name === 'first-contentful-paint' && shouldRecord) {\n                        logger.log('[Measurements] Adding FCP');\n                        _this._measurements['fcp'] = { value: entry.startTime };\n                        _this._measurements['mark.fcp'] = { value: startTimestamp };\n                    }\n                    break;\n                }\n                case 'resource': {\n                    var resourceName = entry.name.replace(global.location.origin, '');\n                    var endTimestamp = addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n                    // We remember the entry script end time to calculate the difference to the first init mark\n                    if (entryScriptStartTimestamp === undefined && (entryScriptSrc || '').indexOf(resourceName) > -1) {\n                        entryScriptStartTimestamp = endTimestamp;\n                    }\n                    break;\n                }\n                default:\n                // Ignore other entry types.\n            }\n        });\n        if (entryScriptStartTimestamp !== undefined && tracingInitMarkStartTime !== undefined) {\n            _startChild(transaction, {\n                description: 'evaluation',\n                endTimestamp: tracingInitMarkStartTime,\n                op: 'script',\n                startTimestamp: entryScriptStartTimestamp,\n            });\n        }\n        this._performanceCursor = Math.max(performance.getEntries().length - 1, 0);\n        this._trackNavigator(transaction);\n        // Measurements are only available for pageload transactions\n        if (transaction.op === 'pageload') {\n            // normalize applicable web vital values to be relative to transaction.startTimestamp\n            var timeOrigin_1 = msToSec(browserPerformanceTimeOrigin);\n            // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n            // start of the response in milliseconds\n            if (typeof responseStartTimestamp === 'number') {\n                logger.log('[Measurements] Adding TTFB');\n                this._measurements['ttfb'] = { value: (responseStartTimestamp - transaction.startTimestamp) * 1000 };\n                if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n                    // Capture the time spent making the request and receiving the first byte of the response.\n                    // This is the time between the start of the request and the start of the response in milliseconds.\n                    this._measurements['ttfb.requestTime'] = { value: (responseStartTimestamp - requestStartTimestamp) * 1000 };\n                }\n            }\n            ['fcp', 'fp', 'lcp'].forEach(function (name) {\n                if (!_this._measurements[name] || timeOrigin_1 >= transaction.startTimestamp) {\n                    return;\n                }\n                // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n                // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n                // to be adjusted to be relative to transaction.startTimestamp.\n                var oldValue = _this._measurements[name].value;\n                var measurementTimestamp = timeOrigin_1 + msToSec(oldValue);\n                // normalizedValue should be in milliseconds\n                var normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n                var delta = normalizedValue - oldValue;\n                logger.log(\"[Measurements] Normalized \" + name + \" from \" + oldValue + \" to \" + normalizedValue + \" (\" + delta + \")\");\n                _this._measurements[name].value = normalizedValue;\n            });\n            if (this._measurements['mark.fid'] && this._measurements['fid']) {\n                // create span for FID\n                _startChild(transaction, {\n                    description: 'first input delay',\n                    endTimestamp: this._measurements['mark.fid'].value + msToSec(this._measurements['fid'].value),\n                    op: 'web.vitals',\n                    startTimestamp: this._measurements['mark.fid'].value,\n                });\n            }\n            // If FCP is not recorded we should not record the cls value\n            // according to the new definition of CLS.\n            if (!('fcp' in this._measurements)) {\n                delete this._measurements.cls;\n            }\n            transaction.setMeasurements(this._measurements);\n            this._tagMetricInfo(transaction);\n        }\n    };\n    /** Add LCP / CLS data to transaction to allow debugging */\n    MetricsInstrumentation.prototype._tagMetricInfo = function (transaction) {\n        if (this._lcpEntry) {\n            logger.log('[Measurements] Adding LCP Data');\n            // Capture Properties of the LCP element that contributes to the LCP.\n            if (this._lcpEntry.element) {\n                transaction.setTag('lcp.element', htmlTreeAsString(this._lcpEntry.element));\n            }\n            if (this._lcpEntry.id) {\n                transaction.setTag('lcp.id', this._lcpEntry.id);\n            }\n            if (this._lcpEntry.url) {\n                // Trim URL to the first 200 characters.\n                transaction.setTag('lcp.url', this._lcpEntry.url.trim().slice(0, 200));\n            }\n            transaction.setTag('lcp.size', this._lcpEntry.size);\n        }\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n        if (this._clsEntry && this._clsEntry.sources) {\n            logger.log('[Measurements] Adding CLS Data');\n            this._clsEntry.sources.forEach(function (source, index) {\n                return transaction.setTag(\"cls.source.\" + (index + 1), htmlTreeAsString(source.node));\n            });\n        }\n    };\n    /** Starts tracking the Cumulative Layout Shift on the current page. */\n    MetricsInstrumentation.prototype._trackCLS = function () {\n        var _this = this;\n        // See:\n        // https://web.dev/evolving-cls/\n        // https://web.dev/cls-web-tooling/\n        getCLS(function (metric) {\n            var entry = metric.entries.pop();\n            if (!entry) {\n                return;\n            }\n            logger.log('[Measurements] Adding CLS');\n            _this._measurements['cls'] = { value: metric.value };\n            _this._clsEntry = entry;\n        });\n    };\n    /**\n     * Capture the information of the user agent.\n     */\n    MetricsInstrumentation.prototype._trackNavigator = function (transaction) {\n        var navigator = global.navigator;\n        if (!navigator) {\n            return;\n        }\n        // track network connectivity\n        var connection = navigator.connection;\n        if (connection) {\n            if (connection.effectiveType) {\n                transaction.setTag('effectiveConnectionType', connection.effectiveType);\n            }\n            if (connection.type) {\n                transaction.setTag('connectionType', connection.type);\n            }\n            if (isMeasurementValue(connection.rtt)) {\n                this._measurements['connection.rtt'] = { value: connection.rtt };\n            }\n            if (isMeasurementValue(connection.downlink)) {\n                this._measurements['connection.downlink'] = { value: connection.downlink };\n            }\n        }\n        if (isMeasurementValue(navigator.deviceMemory)) {\n            transaction.setTag('deviceMemory', String(navigator.deviceMemory));\n        }\n        if (isMeasurementValue(navigator.hardwareConcurrency)) {\n            transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n        }\n    };\n    /** Starts tracking the Largest Contentful Paint on the current page. */\n    MetricsInstrumentation.prototype._trackLCP = function (reportAllChanges) {\n        var _this = this;\n        getLCP(function (metric) {\n            var entry = metric.entries.pop();\n            if (!entry) {\n                return;\n            }\n            var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n            var startTime = msToSec(entry.startTime);\n            logger.log('[Measurements] Adding LCP');\n            _this._measurements['lcp'] = { value: metric.value };\n            _this._measurements['mark.lcp'] = { value: timeOrigin + startTime };\n            _this._lcpEntry = entry;\n        }, reportAllChanges);\n    };\n    /** Starts tracking the First Input Delay on the current page. */\n    MetricsInstrumentation.prototype._trackFID = function () {\n        var _this = this;\n        getFID(function (metric) {\n            var entry = metric.entries.pop();\n            if (!entry) {\n                return;\n            }\n            var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n            var startTime = msToSec(entry.startTime);\n            logger.log('[Measurements] Adding FID');\n            _this._measurements['fid'] = { value: metric.value };\n            _this._measurements['mark.fid'] = { value: timeOrigin + startTime };\n        });\n    };\n    return MetricsInstrumentation;\n}());\nexport { MetricsInstrumentation };\n/** Instrument navigation entries */\nfunction addNavigationSpans(transaction, entry, timeOrigin) {\n    addPerformanceNavigationTiming({ transaction: transaction, entry: entry, event: 'unloadEvent', timeOrigin: timeOrigin });\n    addPerformanceNavigationTiming({ transaction: transaction, entry: entry, event: 'redirect', timeOrigin: timeOrigin });\n    addPerformanceNavigationTiming({ transaction: transaction, entry: entry, event: 'domContentLoadedEvent', timeOrigin: timeOrigin });\n    addPerformanceNavigationTiming({ transaction: transaction, entry: entry, event: 'loadEvent', timeOrigin: timeOrigin });\n    addPerformanceNavigationTiming({ transaction: transaction, entry: entry, event: 'connect', timeOrigin: timeOrigin });\n    addPerformanceNavigationTiming({\n        transaction: transaction,\n        entry: entry,\n        event: 'secureConnection',\n        timeOrigin: timeOrigin,\n        eventEnd: 'connectEnd',\n        description: 'TLS/SSL',\n    });\n    addPerformanceNavigationTiming({\n        transaction: transaction,\n        entry: entry,\n        event: 'fetch',\n        timeOrigin: timeOrigin,\n        eventEnd: 'domainLookupStart',\n        description: 'cache',\n    });\n    addPerformanceNavigationTiming({ transaction: transaction, entry: entry, event: 'domainLookup', timeOrigin: timeOrigin, description: 'DNS' });\n    addRequest(transaction, entry, timeOrigin);\n}\n/** Create measure related spans */\nfunction addMeasureSpans(transaction, entry, startTime, duration, timeOrigin) {\n    var measureStartTimestamp = timeOrigin + startTime;\n    var measureEndTimestamp = measureStartTimestamp + duration;\n    _startChild(transaction, {\n        description: entry.name,\n        endTimestamp: measureEndTimestamp,\n        op: entry.entryType,\n        startTimestamp: measureStartTimestamp,\n    });\n    return measureStartTimestamp;\n}\n/** Create resource-related spans */\nexport function addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin) {\n    // we already instrument based on fetch and xhr, so we don't need to\n    // duplicate spans here.\n    if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n        return undefined;\n    }\n    var data = {};\n    if ('transferSize' in entry) {\n        data['Transfer Size'] = entry.transferSize;\n    }\n    if ('encodedBodySize' in entry) {\n        data['Encoded Body Size'] = entry.encodedBodySize;\n    }\n    if ('decodedBodySize' in entry) {\n        data['Decoded Body Size'] = entry.decodedBodySize;\n    }\n    var startTimestamp = timeOrigin + startTime;\n    var endTimestamp = startTimestamp + duration;\n    _startChild(transaction, {\n        description: resourceName,\n        endTimestamp: endTimestamp,\n        op: entry.initiatorType ? \"resource.\" + entry.initiatorType : 'resource',\n        startTimestamp: startTimestamp,\n        data: data,\n    });\n    return endTimestamp;\n}\n/** Create performance navigation related spans */\nfunction addPerformanceNavigationTiming(props) {\n    var transaction = props.transaction, entry = props.entry, event = props.event, timeOrigin = props.timeOrigin, eventEnd = props.eventEnd, description = props.description;\n    var end = eventEnd ? entry[eventEnd] : entry[event + \"End\"];\n    var start = entry[event + \"Start\"];\n    if (!start || !end) {\n        return;\n    }\n    _startChild(transaction, {\n        op: 'browser',\n        description: (description !== null && description !== void 0 ? description : event),\n        startTimestamp: timeOrigin + msToSec(start),\n        endTimestamp: timeOrigin + msToSec(end),\n    });\n}\n/** Create request and response related spans */\nfunction addRequest(transaction, entry, timeOrigin) {\n    _startChild(transaction, {\n        op: 'browser',\n        description: 'request',\n        startTimestamp: timeOrigin + msToSec(entry.requestStart),\n        endTimestamp: timeOrigin + msToSec(entry.responseEnd),\n    });\n    _startChild(transaction, {\n        op: 'browser',\n        description: 'response',\n        startTimestamp: timeOrigin + msToSec(entry.responseStart),\n        endTimestamp: timeOrigin + msToSec(entry.responseEnd),\n    });\n}\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nexport function _startChild(transaction, _a) {\n    var startTimestamp = _a.startTimestamp, ctx = __rest(_a, [\"startTimestamp\"]);\n    if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n        transaction.startTimestamp = startTimestamp;\n    }\n    return transaction.startChild(__assign({ startTimestamp: startTimestamp }, ctx));\n}\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n    return typeof value === 'number' && isFinite(value);\n}\n//# sourceMappingURL=metrics.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nexport var getCLS = function (onReport, reportAllChanges) {\n    var metric = initMetric('CLS', 0);\n    var report;\n    var sessionValue = 0;\n    var sessionEntries = [];\n    var entryHandler = function (entry) {\n        // Only count layout shifts without recent user input.\n        // TODO: Figure out why entry can be undefined\n        if (entry && !entry.hadRecentInput) {\n            var firstSessionEntry = sessionEntries[0];\n            var lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n            // If the entry occurred less than 1 second after the previous entry and\n            // less than 5 seconds after the first entry in the session, include the\n            // entry in the current session. Otherwise, start a new session.\n            if (sessionValue &&\n                sessionEntries.length !== 0 &&\n                entry.startTime - lastSessionEntry.startTime < 1000 &&\n                entry.startTime - firstSessionEntry.startTime < 5000) {\n                sessionValue += entry.value;\n                sessionEntries.push(entry);\n            }\n            else {\n                sessionValue = entry.value;\n                sessionEntries = [entry];\n            }\n            // If the current session value is larger than the current CLS value,\n            // update CLS and the entries contributing to it.\n            if (sessionValue > metric.value) {\n                metric.value = sessionValue;\n                metric.entries = sessionEntries;\n                if (report) {\n                    report();\n                }\n            }\n        }\n    };\n    var po = observe('layout-shift', entryHandler);\n    if (po) {\n        report = bindReporter(onReport, metric, reportAllChanges);\n        onHidden(function () {\n            po.takeRecords().map(entryHandler);\n            report(true);\n        });\n    }\n};\n//# sourceMappingURL=getCLS.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nexport var getFID = function (onReport, reportAllChanges) {\n    var visibilityWatcher = getVisibilityWatcher();\n    var metric = initMetric('FID');\n    var report;\n    var entryHandler = function (entry) {\n        // Only report if the page wasn't hidden prior to the first input.\n        if (report && entry.startTime < visibilityWatcher.firstHiddenTime) {\n            metric.value = entry.processingStart - entry.startTime;\n            metric.entries.push(entry);\n            report(true);\n        }\n    };\n    var po = observe('first-input', entryHandler);\n    if (po) {\n        report = bindReporter(onReport, metric, reportAllChanges);\n        onHidden(function () {\n            po.takeRecords().map(entryHandler);\n            po.disconnect();\n        }, true);\n    }\n};\n//# sourceMappingURL=getFID.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { addInstrumentationHandler, isInstanceOf, isMatchingPattern } from '@sentry/utils';\nimport { SpanStatus } from '../spanstatus';\nimport { getActiveTransaction, hasTracingEnabled } from '../utils';\nexport var DEFAULT_TRACING_ORIGINS = ['localhost', /^\\//];\nexport var defaultRequestInstrumentationOptions = {\n    traceFetch: true,\n    traceXHR: true,\n    tracingOrigins: DEFAULT_TRACING_ORIGINS,\n};\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(_options) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    var _a = __assign(__assign({}, defaultRequestInstrumentationOptions), _options), traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;\n    // We should cache url -> decision so that we don't have to compute\n    // regexp everytime we create a request.\n    var urlMap = {};\n    var defaultShouldCreateSpan = function (url) {\n        if (urlMap[url]) {\n            return urlMap[url];\n        }\n        var origins = tracingOrigins;\n        urlMap[url] =\n            origins.some(function (origin) { return isMatchingPattern(url, origin); }) &&\n                !isMatchingPattern(url, 'sentry_key');\n        return urlMap[url];\n    };\n    // We want that our users don't have to re-implement shouldCreateSpanForRequest themselves\n    // That's why we filter out already unwanted Spans from tracingOrigins\n    var shouldCreateSpan = defaultShouldCreateSpan;\n    if (typeof shouldCreateSpanForRequest === 'function') {\n        shouldCreateSpan = function (url) {\n            return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);\n        };\n    }\n    var spans = {};\n    if (traceFetch) {\n        addInstrumentationHandler({\n            callback: function (handlerData) {\n                fetchCallback(handlerData, shouldCreateSpan, spans);\n            },\n            type: 'fetch',\n        });\n    }\n    if (traceXHR) {\n        addInstrumentationHandler({\n            callback: function (handlerData) {\n                xhrCallback(handlerData, shouldCreateSpan, spans);\n            },\n            type: 'xhr',\n        });\n    }\n}\n/**\n * Create and track fetch request spans\n */\nexport function fetchCallback(handlerData, shouldCreateSpan, spans) {\n    if (!hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n        return;\n    }\n    if (handlerData.endTimestamp && handlerData.fetchData.__span) {\n        var span = spans[handlerData.fetchData.__span];\n        if (span) {\n            if (handlerData.response) {\n                // TODO (kmclb) remove this once types PR goes through\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                span.setHttpStatus(handlerData.response.status);\n            }\n            else if (handlerData.error) {\n                span.setStatus(SpanStatus.InternalError);\n            }\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[handlerData.fetchData.__span];\n        }\n        return;\n    }\n    var activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: __assign(__assign({}, handlerData.fetchData), { type: 'fetch' }),\n            description: handlerData.fetchData.method + \" \" + handlerData.fetchData.url,\n            op: 'http.client',\n        });\n        handlerData.fetchData.__span = span.spanId;\n        spans[span.spanId] = span;\n        var request = (handlerData.args[0] = handlerData.args[0]);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var options = (handlerData.args[1] = handlerData.args[1] || {});\n        var headers = options.headers;\n        if (isInstanceOf(request, Request)) {\n            headers = request.headers;\n        }\n        if (headers) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (typeof headers.append === 'function') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                headers.append('sentry-trace', span.toTraceparent());\n            }\n            else if (Array.isArray(headers)) {\n                headers = __spread(headers, [['sentry-trace', span.toTraceparent()]]);\n            }\n            else {\n                headers = __assign(__assign({}, headers), { 'sentry-trace': span.toTraceparent() });\n            }\n        }\n        else {\n            headers = { 'sentry-trace': span.toTraceparent() };\n        }\n        options.headers = headers;\n    }\n}\n/**\n * Create and track xhr request spans\n */\nexport function xhrCallback(handlerData, shouldCreateSpan, spans) {\n    var _a, _b;\n    if (!hasTracingEnabled() || ((_a = handlerData.xhr) === null || _a === void 0 ? void 0 : _a.__sentry_own_request__) ||\n        !(((_b = handlerData.xhr) === null || _b === void 0 ? void 0 : _b.__sentry_xhr__) && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))) {\n        return;\n    }\n    var xhr = handlerData.xhr.__sentry_xhr__;\n    // check first if the request has finished and is tracked by an existing span which should now end\n    if (handlerData.endTimestamp && handlerData.xhr.__sentry_xhr_span_id__) {\n        var span = spans[handlerData.xhr.__sentry_xhr_span_id__];\n        if (span) {\n            span.setHttpStatus(xhr.status_code);\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[handlerData.xhr.__sentry_xhr_span_id__];\n        }\n        return;\n    }\n    // if not, create a new span to track it\n    var activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: __assign(__assign({}, xhr.data), { type: 'xhr', method: xhr.method, url: xhr.url }),\n            description: xhr.method + \" \" + xhr.url,\n            op: 'http.client',\n        });\n        handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n        spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n        if (handlerData.xhr.setRequestHeader) {\n            try {\n                handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n            }\n            catch (_) {\n                // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n            }\n        }\n    }\n}\n//# sourceMappingURL=request.js.map","import { addInstrumentationHandler, getGlobalObject, logger } from '@sentry/utils';\nvar global = getGlobalObject();\n/**\n * Default function implementing pageload and navigation transactions\n */\nexport function instrumentRoutingWithDefaults(customStartTransaction, startTransactionOnPageLoad, startTransactionOnLocationChange) {\n    if (startTransactionOnPageLoad === void 0) { startTransactionOnPageLoad = true; }\n    if (startTransactionOnLocationChange === void 0) { startTransactionOnLocationChange = true; }\n    if (!global || !global.location) {\n        logger.warn('Could not initialize routing instrumentation due to invalid location');\n        return;\n    }\n    var startingUrl = global.location.href;\n    var activeTransaction;\n    if (startTransactionOnPageLoad) {\n        activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'pageload' });\n    }\n    if (startTransactionOnLocationChange) {\n        addInstrumentationHandler({\n            callback: function (_a) {\n                var to = _a.to, from = _a.from;\n                /**\n                 * This early return is there to account for some cases where a navigation transaction starts right after\n                 * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n                 * create an uneccessary navigation transaction.\n                 *\n                 * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n                 * only be caused in certain development environments where the usage of a hot module reloader is causing\n                 * errors.\n                 */\n                if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n                    startingUrl = undefined;\n                    return;\n                }\n                if (from !== to) {\n                    startingUrl = undefined;\n                    if (activeTransaction) {\n                        logger.log(\"[Tracing] Finishing current transaction with op: \" + activeTransaction.op);\n                        // If there's an open transaction on the scope, we need to finish it before creating an new one.\n                        activeTransaction.finish();\n                    }\n                    activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'navigation' });\n                }\n            },\n            type: 'history',\n        });\n    }\n}\n//# sourceMappingURL=router.js.map","import { __assign } from \"tslib\";\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { startIdleTransaction } from '../hubextensions';\nimport { DEFAULT_IDLE_TIMEOUT } from '../idletransaction';\nimport { SpanStatus } from '../spanstatus';\nimport { extractTraceparentData, secToMs } from '../utils';\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport { DEFAULT_METRICS_INSTR_OPTIONS, MetricsInstrumentation } from './metrics';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests, } from './request';\nimport { instrumentRoutingWithDefaults } from './router';\nexport var DEFAULT_MAX_TRANSACTION_DURATION_SECONDS = 600;\nvar DEFAULT_BROWSER_TRACING_OPTIONS = __assign({ idleTimeout: DEFAULT_IDLE_TIMEOUT, markBackgroundTransactions: true, maxTransactionDuration: DEFAULT_MAX_TRANSACTION_DURATION_SECONDS, routingInstrumentation: instrumentRoutingWithDefaults, startTransactionOnLocationChange: true, startTransactionOnPageLoad: true }, defaultRequestInstrumentationOptions);\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nvar BrowserTracing = /** @class */ (function () {\n    function BrowserTracing(_options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = BrowserTracing.id;\n        this._emitOptionsWarning = false;\n        var tracingOrigins = defaultRequestInstrumentationOptions.tracingOrigins;\n        // NOTE: Logger doesn't work in constructors, as it's initialized after integrations instances\n        if (_options &&\n            _options.tracingOrigins &&\n            Array.isArray(_options.tracingOrigins) &&\n            _options.tracingOrigins.length !== 0) {\n            tracingOrigins = _options.tracingOrigins;\n        }\n        else {\n            this._emitOptionsWarning = true;\n        }\n        this.options = __assign(__assign(__assign({}, DEFAULT_BROWSER_TRACING_OPTIONS), _options), { tracingOrigins: tracingOrigins });\n        this._metrics = new MetricsInstrumentation(__assign(__assign({}, DEFAULT_METRICS_INSTR_OPTIONS), this.options._metricOptions));\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserTracing.prototype.setupOnce = function (_, getCurrentHub) {\n        var _this = this;\n        this._getCurrentHub = getCurrentHub;\n        if (this._emitOptionsWarning) {\n            logger.warn('[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.');\n            logger.warn(\"[Tracing] We added a reasonable default for you: \" + defaultRequestInstrumentationOptions.tracingOrigins);\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.options, instrumentRouting = _a.routingInstrumentation, startTransactionOnLocationChange = _a.startTransactionOnLocationChange, startTransactionOnPageLoad = _a.startTransactionOnPageLoad, markBackgroundTransactions = _a.markBackgroundTransactions, traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;\n        instrumentRouting(function (context) { return _this._createRouteTransaction(context); }, startTransactionOnPageLoad, startTransactionOnLocationChange);\n        if (markBackgroundTransactions) {\n            registerBackgroundTabDetection();\n        }\n        instrumentOutgoingRequests({ traceFetch: traceFetch, traceXHR: traceXHR, tracingOrigins: tracingOrigins, shouldCreateSpanForRequest: shouldCreateSpanForRequest });\n    };\n    /** Create routing idle transaction. */\n    BrowserTracing.prototype._createRouteTransaction = function (context) {\n        var _this = this;\n        if (!this._getCurrentHub) {\n            logger.warn(\"[Tracing] Did not create \" + context.op + \" transaction because _getCurrentHub is invalid.\");\n            return undefined;\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.options, beforeNavigate = _a.beforeNavigate, idleTimeout = _a.idleTimeout, maxTransactionDuration = _a.maxTransactionDuration;\n        var parentContextFromHeader = context.op === 'pageload' ? getHeaderContext() : undefined;\n        var expandedContext = __assign(__assign(__assign({}, context), parentContextFromHeader), { trimEnd: true });\n        var modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n        // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n        // from being sent to Sentry).\n        var finalContext = modifiedContext === undefined ? __assign(__assign({}, expandedContext), { sampled: false }) : modifiedContext;\n        if (finalContext.sampled === false) {\n            logger.log(\"[Tracing] Will not send \" + finalContext.op + \" transaction because of beforeNavigate.\");\n        }\n        logger.log(\"[Tracing] Starting \" + finalContext.op + \" transaction on scope\");\n        var hub = this._getCurrentHub();\n        var location = getGlobalObject().location;\n        var idleTransaction = startIdleTransaction(hub, finalContext, idleTimeout, true, { location: location });\n        idleTransaction.registerBeforeFinishCallback(function (transaction, endTimestamp) {\n            _this._metrics.addPerformanceEntries(transaction);\n            adjustTransactionDuration(secToMs(maxTransactionDuration), transaction, endTimestamp);\n        });\n        return idleTransaction;\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserTracing.id = 'BrowserTracing';\n    return BrowserTracing;\n}());\nexport { BrowserTracing };\n/**\n * Gets transaction context from a sentry-trace meta.\n *\n * @returns Transaction context data from the header or undefined if there's no header or the header is malformed\n */\nexport function getHeaderContext() {\n    var header = getMetaContent('sentry-trace');\n    if (header) {\n        return extractTraceparentData(header);\n    }\n    return undefined;\n}\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName) {\n    var el = getGlobalObject().document.querySelector(\"meta[name=\" + metaName + \"]\");\n    return el ? el.getAttribute('content') : null;\n}\n/** Adjusts transaction value based on max transaction duration */\nfunction adjustTransactionDuration(maxDuration, transaction, endTimestamp) {\n    var diff = endTimestamp - transaction.startTimestamp;\n    var isOutdatedTransaction = endTimestamp && (diff > maxDuration || diff < 0);\n    if (isOutdatedTransaction) {\n        transaction.setStatus(SpanStatus.DeadlineExceeded);\n        transaction.setTag('maxTransactionDurationExceeded', 'true');\n    }\n}\n//# sourceMappingURL=browsertracing.js.map","import { __read, __spread } from \"tslib\";\nimport { logger } from '@sentry/utils';\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework as well as tracing capabilities\n */\nvar Express = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Express(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = Express.id;\n        this._router = options.router || options.app;\n        this._methods = (Array.isArray(options.methods) ? options.methods : []).concat('use');\n    }\n    /**\n     * @inheritDoc\n     */\n    Express.prototype.setupOnce = function () {\n        if (!this._router) {\n            logger.error('ExpressIntegration is missing an Express instance');\n            return;\n        }\n        instrumentMiddlewares(this._router, this._methods);\n    };\n    /**\n     * @inheritDoc\n     */\n    Express.id = 'Express';\n    return Express;\n}());\nexport { Express };\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n *\n * They all internally delegate to the `router[method]` of the given application instance.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nfunction wrap(fn, method) {\n    var arity = fn.length;\n    switch (arity) {\n        case 2: {\n            return function (req, res) {\n                var transaction = res.__sentry_transaction;\n                if (transaction) {\n                    var span_1 = transaction.startChild({\n                        description: fn.name,\n                        op: \"middleware.\" + method,\n                    });\n                    res.once('finish', function () {\n                        span_1.finish();\n                    });\n                }\n                return fn.call(this, req, res);\n            };\n        }\n        case 3: {\n            return function (req, res, next) {\n                var _a;\n                var transaction = res.__sentry_transaction;\n                var span = (_a = transaction) === null || _a === void 0 ? void 0 : _a.startChild({\n                    description: fn.name,\n                    op: \"middleware.\" + method,\n                });\n                fn.call(this, req, res, function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var _a;\n                    (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                    next.call.apply(next, __spread([this], args));\n                });\n            };\n        }\n        case 4: {\n            return function (err, req, res, next) {\n                var _a;\n                var transaction = res.__sentry_transaction;\n                var span = (_a = transaction) === null || _a === void 0 ? void 0 : _a.startChild({\n                    description: fn.name,\n                    op: \"middleware.\" + method,\n                });\n                fn.call(this, err, req, res, function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var _a;\n                    (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                    next.call.apply(next, __spread([this], args));\n                });\n            };\n        }\n        default: {\n            throw new Error(\"Express middleware takes 2-4 arguments. Got: \" + arity);\n        }\n    }\n}\n/**\n * Takes all the function arguments passed to the original `app` or `router` method, eg. `app.use` or `router.use`\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\nfunction wrapMiddlewareArgs(args, method) {\n    return args.map(function (arg) {\n        if (typeof arg === 'function') {\n            return wrap(arg, method);\n        }\n        if (Array.isArray(arg)) {\n            return arg.map(function (a) {\n                if (typeof a === 'function') {\n                    return wrap(a, method);\n                }\n                return a;\n            });\n        }\n        return arg;\n    });\n}\n/**\n * Patches original router to utilize our tracing functionality\n */\nfunction patchMiddleware(router, method) {\n    var originalCallback = router[method];\n    router[method] = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return originalCallback.call.apply(originalCallback, __spread([this], wrapMiddlewareArgs(args, method)));\n    };\n    return router;\n}\n/**\n * Patches original router methods\n */\nfunction instrumentMiddlewares(router, methods) {\n    if (methods === void 0) { methods = []; }\n    methods.forEach(function (method) { return patchMiddleware(router, method); });\n}\n//# sourceMappingURL=express.js.map","import { fill, isThenable, loadModule, logger } from '@sentry/utils';\n/** Tracing integration for node-postgres package */\nvar Postgres = /** @class */ (function () {\n    function Postgres(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = Postgres.id;\n        this._usePgNative = !!options.usePgNative;\n    }\n    /**\n     * @inheritDoc\n     */\n    Postgres.prototype.setupOnce = function (_, getCurrentHub) {\n        var _a;\n        var pkg = loadModule('pg');\n        if (!pkg) {\n            logger.error('Postgres Integration was unable to require `pg` package.');\n            return;\n        }\n        if (this._usePgNative && !((_a = pkg.native) === null || _a === void 0 ? void 0 : _a.Client)) {\n            logger.error(\"Postgres Integration was unable to access 'pg-native' bindings.\");\n            return;\n        }\n        var Client = (this._usePgNative ? pkg.native : pkg).Client;\n        /**\n         * function (query, callback) => void\n         * function (query, params, callback) => void\n         * function (query) => Promise\n         * function (query, params) => Promise\n         * function (pg.Cursor) => pg.Cursor\n         */\n        fill(Client.prototype, 'query', function (orig) {\n            return function (config, values, callback) {\n                var _a, _b, _c;\n                var scope = getCurrentHub().getScope();\n                var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n                var span = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild({\n                    description: typeof config === 'string' ? config : config.text,\n                    op: \"db\",\n                });\n                if (typeof callback === 'function') {\n                    return orig.call(this, config, values, function (err, result) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        callback(err, result);\n                    });\n                }\n                if (typeof values === 'function') {\n                    return orig.call(this, config, function (err, result) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        values(err, result);\n                    });\n                }\n                var rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n                if (isThenable(rv)) {\n                    return rv.then(function (res) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        return res;\n                    });\n                }\n                (_c = span) === null || _c === void 0 ? void 0 : _c.finish();\n                return rv;\n            };\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Postgres.id = 'Postgres';\n    return Postgres;\n}());\nexport { Postgres };\n//# sourceMappingURL=postgres.js.map","import { fill, loadModule, logger } from '@sentry/utils';\n/** Tracing integration for node-mysql package */\nvar Mysql = /** @class */ (function () {\n    function Mysql() {\n        /**\n         * @inheritDoc\n         */\n        this.name = Mysql.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    Mysql.prototype.setupOnce = function (_, getCurrentHub) {\n        var pkg = loadModule('mysql/lib/Connection.js');\n        if (!pkg) {\n            logger.error('Mysql Integration was unable to require `mysql` package.');\n            return;\n        }\n        // The original function will have one of these signatures:\n        //    function (callback) => void\n        //    function (options, callback) => void\n        //    function (options, values, callback) => void\n        fill(pkg, 'createQuery', function (orig) {\n            return function (options, values, callback) {\n                var _a, _b;\n                var scope = getCurrentHub().getScope();\n                var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n                var span = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild({\n                    description: typeof options === 'string' ? options : options.sql,\n                    op: \"db\",\n                });\n                if (typeof callback === 'function') {\n                    return orig.call(this, options, values, function (err, result, fields) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        callback(err, result, fields);\n                    });\n                }\n                if (typeof values === 'function') {\n                    return orig.call(this, options, function (err, result, fields) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        values(err, result, fields);\n                    });\n                }\n                return orig.call(this, options, values, callback);\n            };\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Mysql.id = 'Mysql';\n    return Mysql;\n}());\nexport { Mysql };\n//# sourceMappingURL=mysql.js.map","import { __read, __spread } from \"tslib\";\nimport { fill, isThenable, loadModule, logger } from '@sentry/utils';\nvar OPERATIONS = [\n    'aggregate',\n    'bulkWrite',\n    'countDocuments',\n    'createIndex',\n    'createIndexes',\n    'deleteMany',\n    'deleteOne',\n    'distinct',\n    'drop',\n    'dropIndex',\n    'dropIndexes',\n    'estimatedDocumentCount',\n    'find',\n    'findOne',\n    'findOneAndDelete',\n    'findOneAndReplace',\n    'findOneAndUpdate',\n    'indexes',\n    'indexExists',\n    'indexInformation',\n    'initializeOrderedBulkOp',\n    'insertMany',\n    'insertOne',\n    'isCapped',\n    'mapReduce',\n    'options',\n    'parallelCollectionScan',\n    'rename',\n    'replaceOne',\n    'stats',\n    'updateMany',\n    'updateOne',\n];\n// All of the operations above take `options` and `callback` as their final parameters, but some of them\n// take additional parameters as well. For those operations, this is a map of\n// { <operation name>:  [<names of additional parameters>] }, as a way to know what to call the operation's\n// positional arguments when we add them to the span's `data` object later\nvar OPERATION_SIGNATURES = {\n    // aggregate intentionally not included because `pipeline` arguments are too complex to serialize well\n    // see https://github.com/getsentry/sentry-javascript/pull/3102\n    bulkWrite: ['operations'],\n    countDocuments: ['query'],\n    createIndex: ['fieldOrSpec'],\n    createIndexes: ['indexSpecs'],\n    deleteMany: ['filter'],\n    deleteOne: ['filter'],\n    distinct: ['key', 'query'],\n    dropIndex: ['indexName'],\n    find: ['query'],\n    findOne: ['query'],\n    findOneAndDelete: ['filter'],\n    findOneAndReplace: ['filter', 'replacement'],\n    findOneAndUpdate: ['filter', 'update'],\n    indexExists: ['indexes'],\n    insertMany: ['docs'],\n    insertOne: ['doc'],\n    mapReduce: ['map', 'reduce'],\n    rename: ['newName'],\n    replaceOne: ['filter', 'doc'],\n    updateMany: ['filter', 'update'],\n    updateOne: ['filter', 'update'],\n};\n/** Tracing integration for mongo package */\nvar Mongo = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Mongo(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = Mongo.id;\n        this._operations = Array.isArray(options.operations)\n            ? options.operations\n            : OPERATIONS;\n        this._describeOperations = 'describeOperations' in options ? options.describeOperations : true;\n        this._useMongoose = !!options.useMongoose;\n    }\n    /**\n     * @inheritDoc\n     */\n    Mongo.prototype.setupOnce = function (_, getCurrentHub) {\n        var moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n        var pkg = loadModule(moduleName);\n        if (!pkg) {\n            logger.error(\"Mongo Integration was unable to require `\" + moduleName + \"` package.\");\n            return;\n        }\n        this._instrumentOperations(pkg.Collection, this._operations, getCurrentHub);\n    };\n    /**\n     * Patches original collection methods\n     */\n    Mongo.prototype._instrumentOperations = function (collection, operations, getCurrentHub) {\n        var _this = this;\n        operations.forEach(function (operation) { return _this._patchOperation(collection, operation, getCurrentHub); });\n    };\n    /**\n     * Patches original collection to utilize our tracing functionality\n     */\n    Mongo.prototype._patchOperation = function (collection, operation, getCurrentHub) {\n        if (!(operation in collection.prototype))\n            return;\n        var getSpanContext = this._getSpanContextFromOperationArguments.bind(this);\n        fill(collection.prototype, operation, function (orig) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var _a, _b, _c, _d;\n                var lastArg = args[args.length - 1];\n                var scope = getCurrentHub().getScope();\n                var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n                // Check if the operation was passed a callback. (mapReduce requires a different check, as\n                // its (non-callback) arguments can also be functions.)\n                if (typeof lastArg !== 'function' || (operation === 'mapReduce' && args.length === 2)) {\n                    var span_1 = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild(getSpanContext(this, operation, args));\n                    var maybePromise = orig.call.apply(orig, __spread([this], args));\n                    if (isThenable(maybePromise)) {\n                        return maybePromise.then(function (res) {\n                            var _a;\n                            (_a = span_1) === null || _a === void 0 ? void 0 : _a.finish();\n                            return res;\n                        });\n                    }\n                    else {\n                        (_c = span_1) === null || _c === void 0 ? void 0 : _c.finish();\n                        return maybePromise;\n                    }\n                }\n                var span = (_d = parentSpan) === null || _d === void 0 ? void 0 : _d.startChild(getSpanContext(this, operation, args.slice(0, -1)));\n                return orig.call.apply(orig, __spread([this], args.slice(0, -1), [function (err, result) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        lastArg(err, result);\n                    }]));\n            };\n        });\n    };\n    /**\n     * Form a SpanContext based on the user input to a given operation.\n     */\n    Mongo.prototype._getSpanContextFromOperationArguments = function (collection, operation, args) {\n        var data = {\n            collectionName: collection.collectionName,\n            dbName: collection.dbName,\n            namespace: collection.namespace,\n        };\n        var spanContext = {\n            op: \"db\",\n            description: operation,\n            data: data,\n        };\n        // If the operation takes no arguments besides `options` and `callback`, or if argument\n        // collection is disabled for this operation, just return early.\n        var signature = OPERATION_SIGNATURES[operation];\n        var shouldDescribe = Array.isArray(this._describeOperations)\n            ? this._describeOperations.includes(operation)\n            : this._describeOperations;\n        if (!signature || !shouldDescribe) {\n            return spanContext;\n        }\n        try {\n            // Special case for `mapReduce`, as the only one accepting functions as arguments.\n            if (operation === 'mapReduce') {\n                var _a = __read(args, 2), map = _a[0], reduce = _a[1];\n                data[signature[0]] = typeof map === 'string' ? map : map.name || '<anonymous>';\n                data[signature[1]] = typeof reduce === 'string' ? reduce : reduce.name || '<anonymous>';\n            }\n            else {\n                for (var i = 0; i < signature.length; i++) {\n                    data[signature[i]] = JSON.stringify(args[i]);\n                }\n            }\n        }\n        catch (_oO) {\n            // no-empty\n        }\n        return spanContext;\n    };\n    /**\n     * @inheritDoc\n     */\n    Mongo.id = 'Mongo';\n    return Mongo;\n}());\nexport { Mongo };\n//# sourceMappingURL=mongo.js.map","import { __assign } from \"tslib\";\nimport { BrowserTracing } from './browser';\nimport { addExtensionMethods } from './hubextensions';\nimport * as TracingIntegrations from './integrations';\nvar Integrations = __assign(__assign({}, TracingIntegrations), { BrowserTracing: BrowserTracing });\nexport { Integrations };\nexport { Span } from './span';\nexport { Transaction } from './transaction';\nexport { \n// TODO deprecate old name in v7\ninstrumentOutgoingRequests as registerRequestInstrumentation, defaultRequestInstrumentationOptions, } from './browser';\nexport { SpanStatus } from './spanstatus';\nexport { IdleTransaction } from './idletransaction';\nexport { startIdleTransaction } from './hubextensions';\n// We are patching the global object with our hub extension methods\naddExtensionMethods();\nexport { addExtensionMethods };\nexport { extractTraceparentData, getActiveTransaction, hasTracingEnabled, stripUrlQueryAndFragment, TRACEPARENT_REGEXP, } from './utils';\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { dropUndefinedKeys, timestampWithMs, uuid4 } from '@sentry/utils';\nimport { SpanStatus } from './spanstatus';\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nvar SpanRecorder = /** @class */ (function () {\n    function SpanRecorder(maxlen) {\n        if (maxlen === void 0) { maxlen = 1000; }\n        this.spans = [];\n        this._maxlen = maxlen;\n    }\n    /**\n     * This is just so that we don't run out of memory while recording a lot\n     * of spans. At some point we just stop and flush out the start of the\n     * trace tree (i.e.the first n spans with the smallest\n     * start_timestamp).\n     */\n    SpanRecorder.prototype.add = function (span) {\n        if (this.spans.length > this._maxlen) {\n            span.spanRecorder = undefined;\n        }\n        else {\n            this.spans.push(span);\n        }\n    };\n    return SpanRecorder;\n}());\nexport { SpanRecorder };\n/**\n * Span contains all data about a span\n */\nvar Span = /** @class */ (function () {\n    /**\n     * You should never call the constructor manually, always use `Sentry.startTransaction()`\n     * or call `startChild()` on an existing span.\n     * @internal\n     * @hideconstructor\n     * @hidden\n     */\n    function Span(spanContext) {\n        /**\n         * @inheritDoc\n         */\n        this.traceId = uuid4();\n        /**\n         * @inheritDoc\n         */\n        this.spanId = uuid4().substring(16);\n        /**\n         * Timestamp in seconds when the span was created.\n         */\n        this.startTimestamp = timestampWithMs();\n        /**\n         * @inheritDoc\n         */\n        this.tags = {};\n        /**\n         * @inheritDoc\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.data = {};\n        if (!spanContext) {\n            return this;\n        }\n        if (spanContext.traceId) {\n            this.traceId = spanContext.traceId;\n        }\n        if (spanContext.spanId) {\n            this.spanId = spanContext.spanId;\n        }\n        if (spanContext.parentSpanId) {\n            this.parentSpanId = spanContext.parentSpanId;\n        }\n        // We want to include booleans as well here\n        if ('sampled' in spanContext) {\n            this.sampled = spanContext.sampled;\n        }\n        if (spanContext.op) {\n            this.op = spanContext.op;\n        }\n        if (spanContext.description) {\n            this.description = spanContext.description;\n        }\n        if (spanContext.data) {\n            this.data = spanContext.data;\n        }\n        if (spanContext.tags) {\n            this.tags = spanContext.tags;\n        }\n        if (spanContext.status) {\n            this.status = spanContext.status;\n        }\n        if (spanContext.startTimestamp) {\n            this.startTimestamp = spanContext.startTimestamp;\n        }\n        if (spanContext.endTimestamp) {\n            this.endTimestamp = spanContext.endTimestamp;\n        }\n    }\n    /**\n     * @inheritDoc\n     * @deprecated\n     */\n    Span.prototype.child = function (spanContext) {\n        return this.startChild(spanContext);\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.startChild = function (spanContext) {\n        var childSpan = new Span(__assign(__assign({}, spanContext), { parentSpanId: this.spanId, sampled: this.sampled, traceId: this.traceId }));\n        childSpan.spanRecorder = this.spanRecorder;\n        if (childSpan.spanRecorder) {\n            childSpan.spanRecorder.add(childSpan);\n        }\n        childSpan.transaction = this.transaction;\n        return childSpan;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.setTag = function (key, value) {\n        var _a;\n        this.tags = __assign(__assign({}, this.tags), (_a = {}, _a[key] = value, _a));\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    Span.prototype.setData = function (key, value) {\n        var _a;\n        this.data = __assign(__assign({}, this.data), (_a = {}, _a[key] = value, _a));\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.setStatus = function (value) {\n        this.status = value;\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.setHttpStatus = function (httpStatus) {\n        this.setTag('http.status_code', String(httpStatus));\n        var spanStatus = SpanStatus.fromHttpCode(httpStatus);\n        if (spanStatus !== SpanStatus.UnknownError) {\n            this.setStatus(spanStatus);\n        }\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.isSuccess = function () {\n        return this.status === SpanStatus.Ok;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.finish = function (endTimestamp) {\n        this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toTraceparent = function () {\n        var sampledString = '';\n        if (this.sampled !== undefined) {\n            sampledString = this.sampled ? '-1' : '-0';\n        }\n        return this.traceId + \"-\" + this.spanId + sampledString;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toContext = function () {\n        return dropUndefinedKeys({\n            data: this.data,\n            description: this.description,\n            endTimestamp: this.endTimestamp,\n            op: this.op,\n            parentSpanId: this.parentSpanId,\n            sampled: this.sampled,\n            spanId: this.spanId,\n            startTimestamp: this.startTimestamp,\n            status: this.status,\n            tags: this.tags,\n            traceId: this.traceId,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.updateWithContext = function (spanContext) {\n        var _a, _b, _c, _d, _e;\n        this.data = (_a = spanContext.data, (_a !== null && _a !== void 0 ? _a : {}));\n        this.description = spanContext.description;\n        this.endTimestamp = spanContext.endTimestamp;\n        this.op = spanContext.op;\n        this.parentSpanId = spanContext.parentSpanId;\n        this.sampled = spanContext.sampled;\n        this.spanId = (_b = spanContext.spanId, (_b !== null && _b !== void 0 ? _b : this.spanId));\n        this.startTimestamp = (_c = spanContext.startTimestamp, (_c !== null && _c !== void 0 ? _c : this.startTimestamp));\n        this.status = spanContext.status;\n        this.tags = (_d = spanContext.tags, (_d !== null && _d !== void 0 ? _d : {}));\n        this.traceId = (_e = spanContext.traceId, (_e !== null && _e !== void 0 ? _e : this.traceId));\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.getTraceContext = function () {\n        return dropUndefinedKeys({\n            data: Object.keys(this.data).length > 0 ? this.data : undefined,\n            description: this.description,\n            op: this.op,\n            parent_span_id: this.parentSpanId,\n            span_id: this.spanId,\n            status: this.status,\n            tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n            trace_id: this.traceId,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toJSON = function () {\n        return dropUndefinedKeys({\n            data: Object.keys(this.data).length > 0 ? this.data : undefined,\n            description: this.description,\n            op: this.op,\n            parent_span_id: this.parentSpanId,\n            span_id: this.spanId,\n            start_timestamp: this.startTimestamp,\n            status: this.status,\n            tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n            timestamp: this.endTimestamp,\n            trace_id: this.traceId,\n        });\n    };\n    return Span;\n}());\nexport { Span };\n//# sourceMappingURL=span.js.map","/** The status of an Span. */\n// eslint-disable-next-line import/export\nexport var SpanStatus;\n(function (SpanStatus) {\n    /** The operation completed successfully. */\n    SpanStatus[\"Ok\"] = \"ok\";\n    /** Deadline expired before operation could complete. */\n    SpanStatus[\"DeadlineExceeded\"] = \"deadline_exceeded\";\n    /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n    SpanStatus[\"Unauthenticated\"] = \"unauthenticated\";\n    /** 403 Forbidden */\n    SpanStatus[\"PermissionDenied\"] = \"permission_denied\";\n    /** 404 Not Found. Some requested entity (file or directory) was not found. */\n    SpanStatus[\"NotFound\"] = \"not_found\";\n    /** 429 Too Many Requests */\n    SpanStatus[\"ResourceExhausted\"] = \"resource_exhausted\";\n    /** Client specified an invalid argument. 4xx. */\n    SpanStatus[\"InvalidArgument\"] = \"invalid_argument\";\n    /** 501 Not Implemented */\n    SpanStatus[\"Unimplemented\"] = \"unimplemented\";\n    /** 503 Service Unavailable */\n    SpanStatus[\"Unavailable\"] = \"unavailable\";\n    /** Other/generic 5xx. */\n    SpanStatus[\"InternalError\"] = \"internal_error\";\n    /** Unknown. Any non-standard HTTP status code. */\n    SpanStatus[\"UnknownError\"] = \"unknown_error\";\n    /** The operation was cancelled (typically by the user). */\n    SpanStatus[\"Cancelled\"] = \"cancelled\";\n    /** Already exists (409) */\n    SpanStatus[\"AlreadyExists\"] = \"already_exists\";\n    /** Operation was rejected because the system is not in a state required for the operation's */\n    SpanStatus[\"FailedPrecondition\"] = \"failed_precondition\";\n    /** The operation was aborted, typically due to a concurrency issue. */\n    SpanStatus[\"Aborted\"] = \"aborted\";\n    /** Operation was attempted past the valid range. */\n    SpanStatus[\"OutOfRange\"] = \"out_of_range\";\n    /** Unrecoverable data loss or corruption */\n    SpanStatus[\"DataLoss\"] = \"data_loss\";\n})(SpanStatus || (SpanStatus = {}));\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\n(function (SpanStatus) {\n    /**\n     * Converts a HTTP status code into a {@link SpanStatus}.\n     *\n     * @param httpStatus The HTTP response status code.\n     * @returns The span status or {@link SpanStatus.UnknownError}.\n     */\n    function fromHttpCode(httpStatus) {\n        if (httpStatus < 400) {\n            return SpanStatus.Ok;\n        }\n        if (httpStatus >= 400 && httpStatus < 500) {\n            switch (httpStatus) {\n                case 401:\n                    return SpanStatus.Unauthenticated;\n                case 403:\n                    return SpanStatus.PermissionDenied;\n                case 404:\n                    return SpanStatus.NotFound;\n                case 409:\n                    return SpanStatus.AlreadyExists;\n                case 413:\n                    return SpanStatus.FailedPrecondition;\n                case 429:\n                    return SpanStatus.ResourceExhausted;\n                default:\n                    return SpanStatus.InvalidArgument;\n            }\n        }\n        if (httpStatus >= 500 && httpStatus < 600) {\n            switch (httpStatus) {\n                case 501:\n                    return SpanStatus.Unimplemented;\n                case 503:\n                    return SpanStatus.Unavailable;\n                case 504:\n                    return SpanStatus.DeadlineExceeded;\n                default:\n                    return SpanStatus.InternalError;\n            }\n        }\n        return SpanStatus.UnknownError;\n    }\n    SpanStatus.fromHttpCode = fromHttpCode;\n})(SpanStatus || (SpanStatus = {}));\n//# sourceMappingURL=spanstatus.js.map","import { __assign, __extends } from \"tslib\";\nimport { getCurrentHub, Hub } from '@sentry/hub';\nimport { Outcome, } from '@sentry/types';\nimport { dropUndefinedKeys, isInstanceOf, logger } from '@sentry/utils';\nimport { Span as SpanClass, SpanRecorder } from './span';\n/** JSDoc */\nvar Transaction = /** @class */ (function (_super) {\n    __extends(Transaction, _super);\n    /**\n     * This constructor should never be called manually. Those instrumenting tracing should use\n     * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n     * @internal\n     * @hideconstructor\n     * @hidden\n     */\n    function Transaction(transactionContext, hub) {\n        var _this = _super.call(this, transactionContext) || this;\n        _this._measurements = {};\n        /**\n         * The reference to the current hub.\n         */\n        _this._hub = getCurrentHub();\n        if (isInstanceOf(hub, Hub)) {\n            _this._hub = hub;\n        }\n        _this.name = transactionContext.name || '';\n        _this.metadata = transactionContext.metadata || {};\n        _this._trimEnd = transactionContext.trimEnd;\n        // this is because transactions are also spans, and spans have a transaction pointer\n        _this.transaction = _this;\n        return _this;\n    }\n    /**\n     * JSDoc\n     */\n    Transaction.prototype.setName = function (name) {\n        this.name = name;\n    };\n    /**\n     * Attaches SpanRecorder to the span itself\n     * @param maxlen maximum number of spans that can be recorded\n     */\n    Transaction.prototype.initSpanRecorder = function (maxlen) {\n        if (maxlen === void 0) { maxlen = 1000; }\n        if (!this.spanRecorder) {\n            this.spanRecorder = new SpanRecorder(maxlen);\n        }\n        this.spanRecorder.add(this);\n    };\n    /**\n     * Set observed measurements for this transaction.\n     * @hidden\n     */\n    Transaction.prototype.setMeasurements = function (measurements) {\n        this._measurements = __assign({}, measurements);\n    };\n    /**\n     * Set metadata for this transaction.\n     * @hidden\n     */\n    Transaction.prototype.setMetadata = function (newMetadata) {\n        this.metadata = __assign(__assign({}, this.metadata), newMetadata);\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.finish = function (endTimestamp) {\n        var _this = this;\n        var _a, _b, _c, _d, _e;\n        // This transaction is already finished, so we should not flush it again.\n        if (this.endTimestamp !== undefined) {\n            return undefined;\n        }\n        if (!this.name) {\n            logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n            this.name = '<unlabeled transaction>';\n        }\n        // just sets the end timestamp\n        _super.prototype.finish.call(this, endTimestamp);\n        if (this.sampled !== true) {\n            // At this point if `sampled !== true` we want to discard the transaction.\n            logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n            (_e = (_c = (_a = this._hub\n                .getClient()) === null || _a === void 0 ? void 0 : (_b = _a).getTransport) === null || _c === void 0 ? void 0 : (_d = _c.call(_b)).recordLostEvent) === null || _e === void 0 ? void 0 : _e.call(_d, Outcome.SampleRate, 'transaction');\n            return undefined;\n        }\n        var finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(function (s) { return s !== _this && s.endTimestamp; }) : [];\n        if (this._trimEnd && finishedSpans.length > 0) {\n            this.endTimestamp = finishedSpans.reduce(function (prev, current) {\n                if (prev.endTimestamp && current.endTimestamp) {\n                    return prev.endTimestamp > current.endTimestamp ? prev : current;\n                }\n                return prev;\n            }).endTimestamp;\n        }\n        var transaction = {\n            contexts: {\n                trace: this.getTraceContext(),\n            },\n            spans: finishedSpans,\n            start_timestamp: this.startTimestamp,\n            tags: this.tags,\n            timestamp: this.endTimestamp,\n            transaction: this.name,\n            type: 'transaction',\n            debug_meta: this.metadata,\n        };\n        var hasMeasurements = Object.keys(this._measurements).length > 0;\n        if (hasMeasurements) {\n            logger.log('[Measurements] Adding measurements to transaction', JSON.stringify(this._measurements, undefined, 2));\n            transaction.measurements = this._measurements;\n        }\n        logger.log(\"[Tracing] Finishing \" + this.op + \" transaction: \" + this.name + \".\");\n        return this._hub.captureEvent(transaction);\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.toContext = function () {\n        var spanContext = _super.prototype.toContext.call(this);\n        return dropUndefinedKeys(__assign(__assign({}, spanContext), { name: this.name, trimEnd: this._trimEnd }));\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.updateWithContext = function (transactionContext) {\n        var _a;\n        _super.prototype.updateWithContext.call(this, transactionContext);\n        this.name = (_a = transactionContext.name, (_a !== null && _a !== void 0 ? _a : ''));\n        this._trimEnd = transactionContext.trimEnd;\n        return this;\n    };\n    return Transaction;\n}(SpanClass));\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map","import { getCurrentHub } from '@sentry/hub';\nexport var TRACEPARENT_REGEXP = new RegExp('^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$');\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nexport function hasTracingEnabled(options) {\n    if (options === void 0) { options = (_a = getCurrentHub()\n        .getClient()) === null || _a === void 0 ? void 0 : _a.getOptions(); }\n    var _a;\n    if (!options) {\n        return false;\n    }\n    return 'tracesSampleRate' in options || 'tracesSampler' in options;\n}\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent) {\n    var matches = traceparent.match(TRACEPARENT_REGEXP);\n    if (matches) {\n        var parentSampled = void 0;\n        if (matches[3] === '1') {\n            parentSampled = true;\n        }\n        else if (matches[3] === '0') {\n            parentSampled = false;\n        }\n        return {\n            traceId: matches[1],\n            parentSampled: parentSampled,\n            parentSpanId: matches[2],\n        };\n    }\n    return undefined;\n}\n/** Grabs active transaction off scope, if any */\nexport function getActiveTransaction(hub) {\n    if (hub === void 0) { hub = getCurrentHub(); }\n    var _a, _b;\n    return (_b = (_a = hub) === null || _a === void 0 ? void 0 : _a.getScope()) === null || _b === void 0 ? void 0 : _b.getTransaction();\n}\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nexport function msToSec(time) {\n    return time / 1000;\n}\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nexport function secToMs(time) {\n    return time * 1000;\n}\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\n//# sourceMappingURL=utils.js.map","/**\n * Session Status\n */\nexport var SessionStatus;\n(function (SessionStatus) {\n    /** JSDoc */\n    SessionStatus[\"Ok\"] = \"ok\";\n    /** JSDoc */\n    SessionStatus[\"Exited\"] = \"exited\";\n    /** JSDoc */\n    SessionStatus[\"Crashed\"] = \"crashed\";\n    /** JSDoc */\n    SessionStatus[\"Abnormal\"] = \"abnormal\";\n})(SessionStatus || (SessionStatus = {}));\nexport var RequestSessionStatus;\n(function (RequestSessionStatus) {\n    /** JSDoc */\n    RequestSessionStatus[\"Ok\"] = \"ok\";\n    /** JSDoc */\n    RequestSessionStatus[\"Errored\"] = \"errored\";\n    /** JSDoc */\n    RequestSessionStatus[\"Crashed\"] = \"crashed\";\n})(RequestSessionStatus || (RequestSessionStatus = {}));\n//# sourceMappingURL=session.js.map","export var Outcome;\n(function (Outcome) {\n    Outcome[\"BeforeSend\"] = \"before_send\";\n    Outcome[\"EventProcessor\"] = \"event_processor\";\n    Outcome[\"NetworkError\"] = \"network_error\";\n    Outcome[\"QueueOverflow\"] = \"queue_overflow\";\n    Outcome[\"RateLimitBackoff\"] = \"ratelimit_backoff\";\n    Outcome[\"SampleRate\"] = \"sample_rate\";\n})(Outcome || (Outcome = {}));\n//# sourceMappingURL=transport.js.map","import { isString } from './is';\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem, keyAttrs) {\n    // try/catch both:\n    // - accessing event.target (see getsentry/raven-js#838, #768)\n    // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n    // - can throw an exception in some circumstances.\n    try {\n        var currentElem = elem;\n        var MAX_TRAVERSE_HEIGHT = 5;\n        var MAX_OUTPUT_LEN = 80;\n        var out = [];\n        var height = 0;\n        var len = 0;\n        var separator = ' > ';\n        var sepLength = separator.length;\n        var nextStr = void 0;\n        // eslint-disable-next-line no-plusplus\n        while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n            nextStr = _htmlElementAsString(currentElem, keyAttrs);\n            // bail out if\n            // - nextStr is the 'html' element\n            // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n            //   (ignore this limit if we are on the first iteration)\n            if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n                break;\n            }\n            out.push(nextStr);\n            len += nextStr.length;\n            currentElem = currentElem.parentNode;\n        }\n        return out.reverse().join(separator);\n    }\n    catch (_oO) {\n        return '<unknown>';\n    }\n}\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n    var _a, _b;\n    var elem = el;\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n    var keyAttrPairs = ((_a = keyAttrs) === null || _a === void 0 ? void 0 : _a.length) ? keyAttrs.filter(function (keyAttr) { return elem.getAttribute(keyAttr); }).map(function (keyAttr) { return [keyAttr, elem.getAttribute(keyAttr)]; })\n        : null;\n    if ((_b = keyAttrPairs) === null || _b === void 0 ? void 0 : _b.length) {\n        keyAttrPairs.forEach(function (keyAttrPair) {\n            out.push(\"[\" + keyAttrPair[0] + \"=\\\"\" + keyAttrPair[1] + \"\\\"]\");\n        });\n    }\n    else {\n        if (elem.id) {\n            out.push(\"#\" + elem.id);\n        }\n        // eslint-disable-next-line prefer-const\n        className = elem.className;\n        if (className && isString(className)) {\n            classes = className.split(/\\s+/);\n            for (i = 0; i < classes.length; i++) {\n                out.push(\".\" + classes[i]);\n            }\n        }\n    }\n    var allowedAttrs = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < allowedAttrs.length; i++) {\n        key = allowedAttrs[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n        }\n    }\n    return out.join('');\n}\n//# sourceMappingURL=browser.js.map","import { __assign, __values } from \"tslib\";\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { getGlobalObject } from './misc';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\nvar global = getGlobalObject();\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\nvar handlers = {};\nvar instrumented = {};\n/** Instruments given API */\nfunction instrument(type) {\n    if (instrumented[type]) {\n        return;\n    }\n    instrumented[type] = true;\n    switch (type) {\n        case 'console':\n            instrumentConsole();\n            break;\n        case 'dom':\n            instrumentDOM();\n            break;\n        case 'xhr':\n            instrumentXHR();\n            break;\n        case 'fetch':\n            instrumentFetch();\n            break;\n        case 'history':\n            instrumentHistory();\n            break;\n        case 'error':\n            instrumentError();\n            break;\n        case 'unhandledrejection':\n            instrumentUnhandledRejection();\n            break;\n        default:\n            logger.warn('unknown instrumentation type:', type);\n    }\n}\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(handler) {\n    if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n        return;\n    }\n    handlers[handler.type] = handlers[handler.type] || [];\n    handlers[handler.type].push(handler.callback);\n    instrument(handler.type);\n}\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n    var e_1, _a;\n    if (!type || !handlers[type]) {\n        return;\n    }\n    try {\n        for (var _b = __values(handlers[type] || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var handler = _c.value;\n            try {\n                handler(data);\n            }\n            catch (e) {\n                logger.error(\"Error while triggering instrumentation handler.\\nType: \" + type + \"\\nName: \" + getFunctionName(handler) + \"\\nError: \" + e);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n/** JSDoc */\nfunction instrumentConsole() {\n    if (!('console' in global)) {\n        return;\n    }\n    ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n        if (!(level in global.console)) {\n            return;\n        }\n        fill(global.console, level, function (originalConsoleLevel) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                triggerHandlers('console', { args: args, level: level });\n                // this fails for some browsers. :(\n                if (originalConsoleLevel) {\n                    Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n                }\n            };\n        });\n    });\n}\n/** JSDoc */\nfunction instrumentFetch() {\n    if (!supportsNativeFetch()) {\n        return;\n    }\n    fill(global, 'fetch', function (originalFetch) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var handlerData = {\n                args: args,\n                fetchData: {\n                    method: getFetchMethod(args),\n                    url: getFetchUrl(args),\n                },\n                startTimestamp: Date.now(),\n            };\n            triggerHandlers('fetch', __assign({}, handlerData));\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            return originalFetch.apply(global, args).then(function (response) {\n                triggerHandlers('fetch', __assign(__assign({}, handlerData), { endTimestamp: Date.now(), response: response }));\n                return response;\n            }, function (error) {\n                triggerHandlers('fetch', __assign(__assign({}, handlerData), { endTimestamp: Date.now(), error: error }));\n                // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n                //       it means the sentry.javascript SDK caught an error invoking your application code.\n                //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n                throw error;\n            });\n        };\n    });\n}\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n        return String(fetchArgs[0].method).toUpperCase();\n    }\n    if (fetchArgs[1] && fetchArgs[1].method) {\n        return String(fetchArgs[1].method).toUpperCase();\n    }\n    return 'GET';\n}\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if (typeof fetchArgs[0] === 'string') {\n        return fetchArgs[0];\n    }\n    if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n        return fetchArgs[0].url;\n    }\n    return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n/** JSDoc */\nfunction instrumentXHR() {\n    if (!('XMLHttpRequest' in global)) {\n        return;\n    }\n    // Poor man's implementation of ES6 `Map`, tracking and keeping in sync key and value separately.\n    var requestKeys = [];\n    var requestValues = [];\n    var xhrproto = XMLHttpRequest.prototype;\n    fill(xhrproto, 'open', function (originalOpen) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var xhr = this;\n            var url = args[1];\n            xhr.__sentry_xhr__ = {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n                url: args[1],\n            };\n            // if Sentry key appears in URL, don't capture it as a request\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (isString(url) && xhr.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n                xhr.__sentry_own_request__ = true;\n            }\n            var onreadystatechangeHandler = function () {\n                if (xhr.readyState === 4) {\n                    try {\n                        // touching statusCode in some platforms throws\n                        // an exception\n                        if (xhr.__sentry_xhr__) {\n                            xhr.__sentry_xhr__.status_code = xhr.status;\n                        }\n                    }\n                    catch (e) {\n                        /* do nothing */\n                    }\n                    try {\n                        var requestPos = requestKeys.indexOf(xhr);\n                        if (requestPos !== -1) {\n                            // Make sure to pop both key and value to keep it in sync.\n                            requestKeys.splice(requestPos);\n                            var args_1 = requestValues.splice(requestPos)[0];\n                            if (xhr.__sentry_xhr__ && args_1[0] !== undefined) {\n                                xhr.__sentry_xhr__.body = args_1[0];\n                            }\n                        }\n                    }\n                    catch (e) {\n                        /* do nothing */\n                    }\n                    triggerHandlers('xhr', {\n                        args: args,\n                        endTimestamp: Date.now(),\n                        startTimestamp: Date.now(),\n                        xhr: xhr,\n                    });\n                }\n            };\n            if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n                fill(xhr, 'onreadystatechange', function (original) {\n                    return function () {\n                        var readyStateArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            readyStateArgs[_i] = arguments[_i];\n                        }\n                        onreadystatechangeHandler();\n                        return original.apply(xhr, readyStateArgs);\n                    };\n                });\n            }\n            else {\n                xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n            }\n            return originalOpen.apply(xhr, args);\n        };\n    });\n    fill(xhrproto, 'send', function (originalSend) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            requestKeys.push(this);\n            requestValues.push(args);\n            triggerHandlers('xhr', {\n                args: args,\n                startTimestamp: Date.now(),\n                xhr: this,\n            });\n            return originalSend.apply(this, args);\n        };\n    });\n}\nvar lastHref;\n/** JSDoc */\nfunction instrumentHistory() {\n    if (!supportsHistory()) {\n        return;\n    }\n    var oldOnPopState = global.onpopstate;\n    global.onpopstate = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var to = global.location.href;\n        // keep track of the current URL state, as we always receive only the updated state\n        var from = lastHref;\n        lastHref = to;\n        triggerHandlers('history', {\n            from: from,\n            to: to,\n        });\n        if (oldOnPopState) {\n            // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n            // https://github.com/getsentry/sentry-javascript/issues/3344\n            // https://github.com/bugsnag/bugsnag-js/issues/469\n            try {\n                return oldOnPopState.apply(this, args);\n            }\n            catch (_oO) {\n                // no-empty\n            }\n        }\n    };\n    /** @hidden */\n    function historyReplacementFunction(originalHistoryFunction) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var url = args.length > 2 ? args[2] : undefined;\n            if (url) {\n                // coerce to string (this is what pushState does)\n                var from = lastHref;\n                var to = String(url);\n                // keep track of the current URL state, as we always receive only the updated state\n                lastHref = to;\n                triggerHandlers('history', {\n                    from: from,\n                    to: to,\n                });\n            }\n            return originalHistoryFunction.apply(this, args);\n        };\n    }\n    fill(global.history, 'pushState', historyReplacementFunction);\n    fill(global.history, 'replaceState', historyReplacementFunction);\n}\nvar debounceDuration = 1000;\nvar debounceTimerID;\nvar lastCapturedEvent;\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n    // If there was no previous event, it should always be swapped for the new one.\n    if (!previous) {\n        return true;\n    }\n    // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n    if (previous.type !== current.type) {\n        return true;\n    }\n    try {\n        // If both events have the same type, it's still possible that actions were performed on different targets.\n        // e.g. 2 clicks on different buttons.\n        if (previous.target !== current.target) {\n            return true;\n        }\n    }\n    catch (e) {\n        // just accessing `target` property can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/sentry-javascript/issues/838\n    }\n    // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n    // to which an event listener was attached), we treat them as the same action, as we want to capture\n    // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n    return false;\n}\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n    // We are only interested in filtering `keypress` events for now.\n    if (event.type !== 'keypress') {\n        return false;\n    }\n    try {\n        var target = event.target;\n        if (!target || !target.tagName) {\n            return true;\n        }\n        // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n        // e.g.tabbing through elements, hotkeys, etc.\n        if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n            return false;\n        }\n    }\n    catch (e) {\n        // just accessing `target` property can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/sentry-javascript/issues/838\n    }\n    return true;\n}\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener) {\n    if (globalListener === void 0) { globalListener = false; }\n    return function (event) {\n        // It's possible this handler might trigger multiple times for the same\n        // event (e.g. event propagation through node ancestors).\n        // Ignore if we've already captured that event.\n        if (!event || lastCapturedEvent === event) {\n            return;\n        }\n        // We always want to skip _some_ events.\n        if (shouldSkipDOMEvent(event)) {\n            return;\n        }\n        var name = event.type === 'keypress' ? 'input' : event.type;\n        // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n        if (debounceTimerID === undefined) {\n            handler({\n                event: event,\n                name: name,\n                global: globalListener,\n            });\n            lastCapturedEvent = event;\n        }\n        // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n        // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n        else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n            handler({\n                event: event,\n                name: name,\n                global: globalListener,\n            });\n            lastCapturedEvent = event;\n        }\n        // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n        clearTimeout(debounceTimerID);\n        debounceTimerID = global.setTimeout(function () {\n            debounceTimerID = undefined;\n        }, debounceDuration);\n    };\n}\n/** JSDoc */\nfunction instrumentDOM() {\n    if (!('document' in global)) {\n        return;\n    }\n    // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n    // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n    // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n    var triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n    var globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n    global.document.addEventListener('click', globalDOMEventHandler, false);\n    global.document.addEventListener('keypress', globalDOMEventHandler, false);\n    // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n    // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n    // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n    // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n    // guaranteed to fire at least once.)\n    ['EventTarget', 'Node'].forEach(function (target) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        var proto = global[target] && global[target].prototype;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (originalAddEventListener) {\n            return function (type, listener, options) {\n                if (type === 'click' || type == 'keypress') {\n                    try {\n                        var el = this;\n                        var handlers_1 = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n                        var handlerForType = (handlers_1[type] = handlers_1[type] || { refCount: 0 });\n                        if (!handlerForType.handler) {\n                            var handler = makeDOMEventHandler(triggerDOMHandler);\n                            handlerForType.handler = handler;\n                            originalAddEventListener.call(this, type, handler, options);\n                        }\n                        handlerForType.refCount += 1;\n                    }\n                    catch (e) {\n                        // Accessing dom properties is always fragile.\n                        // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n                    }\n                }\n                return originalAddEventListener.call(this, type, listener, options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (originalRemoveEventListener) {\n            return function (type, listener, options) {\n                if (type === 'click' || type == 'keypress') {\n                    try {\n                        var el = this;\n                        var handlers_2 = el.__sentry_instrumentation_handlers__ || {};\n                        var handlerForType = handlers_2[type];\n                        if (handlerForType) {\n                            handlerForType.refCount -= 1;\n                            // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                            if (handlerForType.refCount <= 0) {\n                                originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                                handlerForType.handler = undefined;\n                                delete handlers_2[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                            }\n                            // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                            if (Object.keys(handlers_2).length === 0) {\n                                delete el.__sentry_instrumentation_handlers__;\n                            }\n                        }\n                    }\n                    catch (e) {\n                        // Accessing dom properties is always fragile.\n                        // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n                    }\n                }\n                return originalRemoveEventListener.call(this, type, listener, options);\n            };\n        });\n    });\n}\nvar _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n    _oldOnErrorHandler = global.onerror;\n    global.onerror = function (msg, url, line, column, error) {\n        triggerHandlers('error', {\n            column: column,\n            error: error,\n            line: line,\n            msg: msg,\n            url: url,\n        });\n        if (_oldOnErrorHandler) {\n            // eslint-disable-next-line prefer-rest-params\n            return _oldOnErrorHandler.apply(this, arguments);\n        }\n        return false;\n    };\n}\nvar _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n    _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n    global.onunhandledrejection = function (e) {\n        triggerHandlers('unhandledrejection', e);\n        if (_oldOnUnhandledRejectionHandler) {\n            // eslint-disable-next-line prefer-rest-params\n            return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n        }\n        return true;\n    };\n}\n//# sourceMappingURL=instrument.js.map","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return isInstanceOf(wat, Error);\n    }\n}\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n}\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n}\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat) {\n    return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat) {\n    return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat) {\n    return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat, base) {\n    try {\n        return wat instanceof base;\n    }\n    catch (_e) {\n        return false;\n    }\n}\n//# sourceMappingURL=is.js.map","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { consoleSandbox, getGlobalObject } from './misc';\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n/** JSDoc */\nvar Logger = /** @class */ (function () {\n    /** JSDoc */\n    function Logger() {\n        this._enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n        this._enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n        this._enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.log(PREFIX + \"[Log]: \" + args.join(' '));\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.warn(PREFIX + \"[Warn]: \" + args.join(' '));\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.error(PREFIX + \"[Error]: \" + args.join(' '));\n        });\n    };\n    return Logger;\n}());\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nvar logger = global.__SENTRY__.logger || (global.__SENTRY__.logger = new Logger());\nexport { logger };\n//# sourceMappingURL=logger.js.map","import { isNodeEnv } from './node';\nimport { snipLine } from './string';\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject() {\n    return (isNodeEnv()\n        ? global\n        : typeof window !== 'undefined' // eslint-disable-line no-restricted-globals\n            ? window // eslint-disable-line no-restricted-globals\n            : typeof self !== 'undefined'\n                ? self\n                : fallbackGlobalObject);\n}\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // eslint-disable-next-line no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // eslint-disable-next-line no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        // eslint-disable-next-line no-bitwise\n        var r = (Math.random() * 16) | 0;\n        // eslint-disable-next-line no-bitwise\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event) {\n    if (event.message) {\n        return event.message;\n    }\n    if (event.exception && event.exception.values && event.exception.values[0]) {\n        var exception = event.exception.values[0];\n        if (exception.type && exception.value) {\n            return exception.type + \": \" + exception.value;\n        }\n        return exception.type || exception.value || event.event_id || '<unknown>';\n    }\n    return event.event_id || '<unknown>';\n}\n/** JSDoc */\nexport function consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n    if (!('console' in global)) {\n        return callback();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (level in global.console && originalConsole[level].__sentry_original__) {\n            wrappedLevels[level] = originalConsole[level];\n            originalConsole[level] = originalConsole[level].__sentry_original__;\n        }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n        originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event, value, type) {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].value = event.exception.values[0].value || value || '';\n    event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(event, mechanism) {\n    if (mechanism === void 0) { mechanism = {}; }\n    // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n    try {\n        // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        event.exception.values[0].mechanism = event.exception.values[0].mechanism || {};\n        Object.keys(mechanism).forEach(function (key) {\n            // @ts-ignore Mechanism has no index signature\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            event.exception.values[0].mechanism[key] = mechanism[key];\n        });\n    }\n    catch (_oO) {\n        // no-empty\n    }\n}\n/**\n * A safe form of location.href\n */\nexport function getLocationHref() {\n    var global = getGlobalObject();\n    try {\n        return global.document.location.href;\n    }\n    catch (oO) {\n        return '';\n    }\n}\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input) {\n    var match = input.match(SEMVER_REGEXP) || [];\n    var major = parseInt(match[1], 10);\n    var minor = parseInt(match[2], 10);\n    var patch = parseInt(match[3], 10);\n    return {\n        buildmetadata: match[5],\n        major: isNaN(major) ? undefined : major,\n        minor: isNaN(minor) ? undefined : minor,\n        patch: isNaN(patch) ? undefined : patch,\n        prerelease: match[4],\n    };\n}\nvar defaultRetryAfter = 60 * 1000; // 60 seconds\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now, header) {\n    if (!header) {\n        return defaultRetryAfter;\n    }\n    var headerDelay = parseInt(\"\" + header, 10);\n    if (!isNaN(headerDelay)) {\n        return headerDelay * 1000;\n    }\n    var headerDate = Date.parse(\"\" + header);\n    if (!isNaN(headerDate)) {\n        return headerDate - now;\n    }\n    return defaultRetryAfter;\n}\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines, frame, linesOfContext) {\n    if (linesOfContext === void 0) { linesOfContext = 5; }\n    var lineno = frame.lineno || 0;\n    var maxLines = lines.length;\n    var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n    frame.pre_context = lines\n        .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n        .map(function (line) { return snipLine(line, 0); });\n    frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n    frame.post_context = lines\n        .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n        .map(function (line) { return snipLine(line, 0); });\n}\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath) {\n    // eslint-disable-next-line no-useless-escape\n    return urlPath.split(/[\\?#]/, 1)[0];\n}\n//# sourceMappingURL=misc.js.map","/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv() {\n    return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod, request) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return mod.require(request);\n}\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule(moduleName) {\n    var mod;\n    try {\n        mod = dynamicRequire(module, moduleName);\n    }\n    catch (e) {\n        // no-empty\n    }\n    try {\n        var cwd = dynamicRequire(module, 'process').cwd;\n        mod = dynamicRequire(module, cwd() + \"/node_modules/\" + moduleName);\n    }\n    catch (e) {\n        // no-empty\n    }\n    return mod;\n}\n//# sourceMappingURL=node.js.map","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nvar Memo = /** @class */ (function () {\n    function Memo() {\n        this._hasWeakSet = typeof WeakSet === 'function';\n        this._inner = this._hasWeakSet ? new WeakSet() : [];\n    }\n    /**\n     * Sets obj to remember.\n     * @param obj Object to remember\n     */\n    Memo.prototype.memoize = function (obj) {\n        if (this._hasWeakSet) {\n            if (this._inner.has(obj)) {\n                return true;\n            }\n            this._inner.add(obj);\n            return false;\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (var i = 0; i < this._inner.length; i++) {\n            var value = this._inner[i];\n            if (value === obj) {\n                return true;\n            }\n        }\n        this._inner.push(obj);\n        return false;\n    };\n    /**\n     * Removes object from internal storage.\n     * @param obj Object to forget\n     */\n    Memo.prototype.unmemoize = function (obj) {\n        if (this._hasWeakSet) {\n            this._inner.delete(obj);\n        }\n        else {\n            for (var i = 0; i < this._inner.length; i++) {\n                if (this._inner[i] === obj) {\n                    this._inner.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    return Memo;\n}());\nexport { Memo };\n//# sourceMappingURL=memo.js.map","import { __values } from \"tslib\";\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\nimport { getFunctionName } from './stacktrace';\nimport { truncate } from './string';\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source, name, replacementFactory) {\n    if (!(name in source)) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacementFactory(original);\n    // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n    // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n    if (typeof wrapped === 'function') {\n        try {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __sentry_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        catch (_Oo) {\n            // This can throw if multiple fill happens on a global object like XMLHttpRequest\n            // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n        }\n    }\n    source[name] = wrapped;\n}\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object) {\n    return Object.keys(object)\n        .map(function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\n/**\n * Transforms any object into an object literal with all its attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n */\nfunction getWalkSource(value) {\n    if (isError(value)) {\n        var error = value;\n        var err = {\n            message: error.message,\n            name: error.name,\n            stack: error.stack,\n        };\n        for (var i in error) {\n            if (Object.prototype.hasOwnProperty.call(error, i)) {\n                err[i] = error[i];\n            }\n        }\n        return err;\n    }\n    if (isEvent(value)) {\n        var event_1 = value;\n        var source = {};\n        // Accessing event attributes can throw (see https://github.com/getsentry/sentry-javascript/issues/768 and\n        // https://github.com/getsentry/sentry-javascript/issues/838), but accessing `type` hasn't been wrapped in a\n        // try-catch in at least two years and no one's complained, so that's likely not an issue anymore\n        source.type = event_1.type;\n        try {\n            source.target = isElement(event_1.target)\n                ? htmlTreeAsString(event_1.target)\n                : Object.prototype.toString.call(event_1.target);\n        }\n        catch (_oO) {\n            source.target = '<unknown>';\n        }\n        try {\n            source.currentTarget = isElement(event_1.currentTarget)\n                ? htmlTreeAsString(event_1.currentTarget)\n                : Object.prototype.toString.call(event_1.currentTarget);\n        }\n        catch (_oO) {\n            source.currentTarget = '<unknown>';\n        }\n        if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n            source.detail = event_1.detail;\n        }\n        for (var attr in event_1) {\n            if (Object.prototype.hasOwnProperty.call(event_1, attr)) {\n                source[attr] = event_1[attr];\n            }\n        }\n        return source;\n    }\n    return value;\n}\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    // eslint-disable-next-line no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\nexport function normalizeToSize(object, \n// Default Node.js REPL depth\ndepth, \n// 100kB, as 200kB is max payload size, so half sounds reasonable\nmaxSize) {\n    if (depth === void 0) { depth = 3; }\n    if (maxSize === void 0) { maxSize = 100 * 1024; }\n    var serialized = normalize(object, depth);\n    if (jsonSize(serialized) > maxSize) {\n        return normalizeToSize(object, depth - 1, maxSize);\n    }\n    return serialized;\n}\n/**\n * Transform any non-primitive, BigInt, or Symbol-type value into a string. Acts as a no-op on strings, numbers,\n * booleans, null, and undefined.\n *\n * @param value The value to stringify\n * @returns For non-primitive, BigInt, and Symbol-type values, a string denoting the value's type, type and value, or\n *  type and `description` property, respectively. For non-BigInt, non-Symbol primitives, returns the original value,\n *  unchanged.\n */\nfunction serializeValue(value) {\n    var type = Object.prototype.toString.call(value);\n    // Node.js REPL notation\n    if (typeof value === 'string') {\n        return value;\n    }\n    if (type === '[object Object]') {\n        return '[Object]';\n    }\n    if (type === '[object Array]') {\n        return '[Array]';\n    }\n    var normalized = normalizeValue(value);\n    return isPrimitive(normalized) ? normalized : type;\n}\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue(value, key) {\n    if (key === 'domain' && value && typeof value === 'object' && value._events) {\n        return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n        return '[DomainEmitter]';\n    }\n    if (typeof global !== 'undefined' && value === global) {\n        return '[Global]';\n    }\n    // It's safe to use `window` and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n        return '[Window]';\n    }\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n        return '[Document]';\n    }\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n        return '[SyntheticEvent]';\n    }\n    if (typeof value === 'number' && value !== value) {\n        return '[NaN]';\n    }\n    if (value === void 0) {\n        return '[undefined]';\n    }\n    if (typeof value === 'function') {\n        return \"[Function: \" + getFunctionName(value) + \"]\";\n    }\n    // symbols and bigints are considered primitives by TS, but aren't natively JSON-serilaizable\n    if (typeof value === 'symbol') {\n        return \"[\" + String(value) + \"]\";\n    }\n    if (typeof value === 'bigint') {\n        return \"[BigInt: \" + String(value) + \"]\";\n    }\n    return value;\n}\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function walk(key, value, depth, memo) {\n    if (depth === void 0) { depth = +Infinity; }\n    if (memo === void 0) { memo = new Memo(); }\n    // If we reach the maximum depth, serialize whatever has left\n    if (depth === 0) {\n        return serializeValue(value);\n    }\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n    // If value implements `toJSON` method, call it and return early\n    if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n        return value.toJSON();\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n    var normalized = normalizeValue(value, key);\n    if (isPrimitive(normalized)) {\n        return normalized;\n    }\n    // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n    var source = getWalkSource(value);\n    // Create an accumulator that will act as a parent for all future itterations of that branch\n    var acc = Array.isArray(value) ? [] : {};\n    // If we already walked that branch, bail out, as it's circular reference\n    if (memo.memoize(value)) {\n        return '[Circular ~]';\n    }\n    // Walk all keys of the source\n    for (var innerKey in source) {\n        // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n        if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n            continue;\n        }\n        // Recursively walk through all the child nodes\n        acc[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n    }\n    // Once walked through all the branches, remove the parent from memo storage\n    memo.unmemoize(value);\n    // Return accumulated values\n    return acc;\n}\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function normalize(input, depth) {\n    try {\n        return JSON.parse(JSON.stringify(input, function (key, value) { return walk(key, value, depth); }));\n    }\n    catch (_oO) {\n        return '**non-serializable**';\n    }\n}\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function extractExceptionKeysForMessage(exception, maxLength) {\n    if (maxLength === void 0) { maxLength = 40; }\n    var keys = Object.keys(getWalkSource(exception));\n    keys.sort();\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return truncate(serialized, maxLength);\n    }\n    return '';\n}\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys(val) {\n    var e_1, _a;\n    if (isPlainObject(val)) {\n        var obj = val;\n        var rv = {};\n        try {\n            for (var _b = __values(Object.keys(obj)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                if (typeof obj[key] !== 'undefined') {\n                    rv[key] = dropUndefinedKeys(obj[key]);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return rv;\n    }\n    if (Array.isArray(val)) {\n        return val.map(dropUndefinedKeys);\n    }\n    return val;\n}\n//# sourceMappingURL=object.js.map","var defaultFunctionName = '<anonymous>';\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn) {\n    try {\n        if (!fn || typeof fn !== 'function') {\n            return defaultFunctionName;\n        }\n        return fn.name || defaultFunctionName;\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        return defaultFunctionName;\n    }\n}\n//# sourceMappingURL=stacktrace.js.map","import { isRegExp, isString } from './is';\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str, max) {\n    if (max === void 0) { max = 0; }\n    if (typeof str !== 'string' || max === 0) {\n        return str;\n    }\n    return str.length <= max ? str : str.substr(0, max) + \"...\";\n}\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line, colno) {\n    var newLine = line;\n    var ll = newLine.length;\n    if (ll <= 150) {\n        return newLine;\n    }\n    if (colno > ll) {\n        // eslint-disable-next-line no-param-reassign\n        colno = ll;\n    }\n    var start = Math.max(colno - 60, 0);\n    if (start < 5) {\n        start = 0;\n    }\n    var end = Math.min(start + 140, ll);\n    if (end > ll - 5) {\n        end = ll;\n    }\n    if (end === ll) {\n        start = Math.max(end - 140, 0);\n    }\n    newLine = newLine.slice(start, end);\n    if (start > 0) {\n        newLine = \"'{snip} \" + newLine;\n    }\n    if (end < ll) {\n        newLine += ' {snip}';\n    }\n    return newLine;\n}\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input, delimiter) {\n    if (!Array.isArray(input)) {\n        return '';\n    }\n    var output = [];\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (var i = 0; i < input.length; i++) {\n        var value = input[i];\n        try {\n            output.push(String(value));\n        }\n        catch (e) {\n            output.push('[value cannot be serialized]');\n        }\n    }\n    return output.join(delimiter);\n}\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value, pattern) {\n    if (!isString(value)) {\n        return false;\n    }\n    if (isRegExp(pattern)) {\n        return pattern.test(value);\n    }\n    if (typeof pattern === 'string') {\n        return value.indexOf(pattern) !== -1;\n    }\n    return false;\n}\n//# sourceMappingURL=string.js.map","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent() {\n    try {\n        new ErrorEvent('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError() {\n    try {\n        // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n        // 1 argument required, but only 0 present.\n        // @ts-ignore It really needs 1 argument, not 0.\n        new DOMError('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException() {\n    try {\n        new DOMException('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch() {\n    if (!('fetch' in getGlobalObject())) {\n        return false;\n    }\n    try {\n        new Headers();\n        new Request('');\n        new Response();\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func) {\n    return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch() {\n    if (!supportsFetch()) {\n        return false;\n    }\n    var global = getGlobalObject();\n    // Fast path to avoid DOM I/O\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    if (isNativeFetch(global.fetch)) {\n        return true;\n    }\n    // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n    // so create a \"pure\" iframe to see if that has native fetch\n    var result = false;\n    var doc = global.document;\n    // eslint-disable-next-line deprecation/deprecation\n    if (doc && typeof doc.createElement === \"function\") {\n        try {\n            var sandbox = doc.createElement('iframe');\n            sandbox.hidden = true;\n            doc.head.appendChild(sandbox);\n            if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                result = isNativeFetch(sandbox.contentWindow.fetch);\n            }\n            doc.head.removeChild(sandbox);\n        }\n        catch (err) {\n            logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n        }\n    }\n    return result;\n}\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver() {\n    return 'ReportingObserver' in getGlobalObject();\n}\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy() {\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    if (!supportsFetch()) {\n        return false;\n    }\n    try {\n        new Request('_', {\n            referrerPolicy: 'origin',\n        });\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory() {\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var global = getGlobalObject();\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var chrome = global.chrome;\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n    return !isChromePackagedApp && hasHistoryApi;\n}\n//# sourceMappingURL=supports.js.map","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n/** SyncPromise internal states */\nvar States;\n(function (States) {\n    /** Pending */\n    States[\"PENDING\"] = \"PENDING\";\n    /** Resolved / OK */\n    States[\"RESOLVED\"] = \"RESOLVED\";\n    /** Rejected / Error */\n    States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nvar SyncPromise = /** @class */ (function () {\n    function SyncPromise(executor) {\n        var _this = this;\n        this._state = States.PENDING;\n        this._handlers = [];\n        /** JSDoc */\n        this._resolve = function (value) {\n            _this._setResult(States.RESOLVED, value);\n        };\n        /** JSDoc */\n        this._reject = function (reason) {\n            _this._setResult(States.REJECTED, reason);\n        };\n        /** JSDoc */\n        this._setResult = function (state, value) {\n            if (_this._state !== States.PENDING) {\n                return;\n            }\n            if (isThenable(value)) {\n                void value.then(_this._resolve, _this._reject);\n                return;\n            }\n            _this._state = state;\n            _this._value = value;\n            _this._executeHandlers();\n        };\n        // TODO: FIXME\n        /** JSDoc */\n        this._attachHandler = function (handler) {\n            _this._handlers = _this._handlers.concat(handler);\n            _this._executeHandlers();\n        };\n        /** JSDoc */\n        this._executeHandlers = function () {\n            if (_this._state === States.PENDING) {\n                return;\n            }\n            var cachedHandlers = _this._handlers.slice();\n            _this._handlers = [];\n            cachedHandlers.forEach(function (handler) {\n                if (handler.done) {\n                    return;\n                }\n                if (_this._state === States.RESOLVED) {\n                    if (handler.onfulfilled) {\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                        handler.onfulfilled(_this._value);\n                    }\n                }\n                if (_this._state === States.REJECTED) {\n                    if (handler.onrejected) {\n                        handler.onrejected(_this._value);\n                    }\n                }\n                handler.done = true;\n            });\n        };\n        try {\n            executor(this._resolve, this._reject);\n        }\n        catch (e) {\n            this._reject(e);\n        }\n    }\n    /** JSDoc */\n    SyncPromise.resolve = function (value) {\n        return new SyncPromise(function (resolve) {\n            resolve(value);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.reject = function (reason) {\n        return new SyncPromise(function (_, reject) {\n            reject(reason);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.all = function (collection) {\n        return new SyncPromise(function (resolve, reject) {\n            if (!Array.isArray(collection)) {\n                reject(new TypeError(\"Promise.all requires an array as input.\"));\n                return;\n            }\n            if (collection.length === 0) {\n                resolve([]);\n                return;\n            }\n            var counter = collection.length;\n            var resolvedCollection = [];\n            collection.forEach(function (item, index) {\n                void SyncPromise.resolve(item)\n                    .then(function (value) {\n                    resolvedCollection[index] = value;\n                    counter -= 1;\n                    if (counter !== 0) {\n                        return;\n                    }\n                    resolve(resolvedCollection);\n                })\n                    .then(null, reject);\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n        var _this = this;\n        return new SyncPromise(function (resolve, reject) {\n            _this._attachHandler({\n                done: false,\n                onfulfilled: function (result) {\n                    if (!onfulfilled) {\n                        // TODO: ¯\\_(ツ)_/¯\n                        // TODO: FIXME\n                        resolve(result);\n                        return;\n                    }\n                    try {\n                        resolve(onfulfilled(result));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n                onrejected: function (reason) {\n                    if (!onrejected) {\n                        reject(reason);\n                        return;\n                    }\n                    try {\n                        resolve(onrejected(reason));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.catch = function (onrejected) {\n        return this.then(function (val) { return val; }, onrejected);\n    };\n    /** JSDoc */\n    SyncPromise.prototype.finally = function (onfinally) {\n        var _this = this;\n        return new SyncPromise(function (resolve, reject) {\n            var val;\n            var isRejected;\n            return _this.then(function (value) {\n                isRejected = false;\n                val = value;\n                if (onfinally) {\n                    onfinally();\n                }\n            }, function (reason) {\n                isRejected = true;\n                val = reason;\n                if (onfinally) {\n                    onfinally();\n                }\n            }).then(function () {\n                if (isRejected) {\n                    reject(val);\n                    return;\n                }\n                resolve(val);\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.toString = function () {\n        return '[object SyncPromise]';\n    };\n    return SyncPromise;\n}());\nexport { SyncPromise };\n//# sourceMappingURL=syncpromise.js.map","import { getGlobalObject } from './misc';\nimport { dynamicRequire, isNodeEnv } from './node';\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nvar dateTimestampSource = {\n    nowSeconds: function () { return Date.now() / 1000; },\n};\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n    var performance = getGlobalObject().performance;\n    if (!performance || !performance.now) {\n        return undefined;\n    }\n    // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n    //\n    // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n    // performance.now() gives a date arbitrarily in the past.\n    //\n    // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n    // undefined.\n    //\n    // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n    // interact with data coming out of performance entries.\n    //\n    // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n    // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n    // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n    // observed skews that can be as long as days, weeks or months.\n    //\n    // See https://github.com/getsentry/sentry-javascript/issues/2590.\n    //\n    // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n    // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n    // transactions of long-lived web pages.\n    var timeOrigin = Date.now() - performance.now();\n    return {\n        now: function () { return performance.now(); },\n        timeOrigin: timeOrigin,\n    };\n}\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n    try {\n        var perfHooks = dynamicRequire(module, 'perf_hooks');\n        return perfHooks.performance;\n    }\n    catch (_) {\n        return undefined;\n    }\n}\n/**\n * The Performance API implementation for the current platform, if available.\n */\nvar platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\nvar timestampSource = platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: function () { return (platformPerformance.timeOrigin + platformPerformance.now()) / 1000; },\n    };\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport var dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport var timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n// Re-exported with an old name for backwards-compatibility.\nexport var timestampWithMs = timestampInSeconds;\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport var usingPerformanceAPI = platformPerformance !== undefined;\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport var _browserPerformanceTimeOriginMode;\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport var browserPerformanceTimeOrigin = (function () {\n    // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n    // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n    // data as reliable if they are within a reasonable threshold of the current time.\n    var performance = getGlobalObject().performance;\n    if (!performance || !performance.now) {\n        _browserPerformanceTimeOriginMode = 'none';\n        return undefined;\n    }\n    var threshold = 3600 * 1000;\n    var performanceNow = performance.now();\n    var dateNow = Date.now();\n    // if timeOrigin isn't available set delta to threshold so it isn't used\n    var timeOriginDelta = performance.timeOrigin\n        ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n        : threshold;\n    var timeOriginIsReliable = timeOriginDelta < threshold;\n    // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n    // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n    // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n    // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n    // Date API.\n    // eslint-disable-next-line deprecation/deprecation\n    var navigationStart = performance.timing && performance.timing.navigationStart;\n    var hasNavigationStart = typeof navigationStart === 'number';\n    // if navigationStart isn't available set delta to threshold so it isn't used\n    var navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n    var navigationStartIsReliable = navigationStartDelta < threshold;\n    if (timeOriginIsReliable || navigationStartIsReliable) {\n        // Use the more reliable time origin\n        if (timeOriginDelta <= navigationStartDelta) {\n            _browserPerformanceTimeOriginMode = 'timeOrigin';\n            return performance.timeOrigin;\n        }\n        else {\n            _browserPerformanceTimeOriginMode = 'navigationStart';\n            return navigationStart;\n        }\n    }\n    // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n    _browserPerformanceTimeOriginMode = 'dateNow';\n    return dateNow;\n})();\n//# sourceMappingURL=time.js.map"],"names":["Session","context","this","errors","sid","duration","status","init","ignoreDuration","startingTime","time","timestamp","started","update","prototype","user","ipAddress","ip_address","did","id","email","username","length","undefined","release","environment","userAgent","close","toJSON","Date","toISOString","attrs","user_agent","Hub","client","scope","_version","_stack","getStackTop","bindClient","isOlderThan","version","setupIntegrations","pushScope","getScope","getStack","push","getClient","popScope","pop","withScope","callback","captureException","exception","hint","eventId","_lastEventId","finalHint","syntheticException","Error","originalException","_invokeClient","event_id","captureMessage","message","level","captureEvent","event","type","lastEventId","addBreadcrumb","breadcrumb","_a","_b","getOptions","_c","beforeBreadcrumb","_d","maxBreadcrumbs","mergedBreadcrumb","finalBreadcrumb","setUser","setTags","tags","setExtras","extras","setTag","key","value","setExtra","extra","setContext","name","configureScope","run","oldHub","makeMain","getIntegration","integration","_oO","startSpan","_callExtensionMethod","startTransaction","customSamplingContext","traceHeaders","captureSession","endSession","_sendSessionUpdate","_e","getSession","setSession","startSession","navigator","session","getUser","currentSession","method","args","_i","arguments","apply","carrier","getMainCarrier","sentry","__SENTRY__","extensions","hub","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","activeDomain","domain","active","registryHubTopStack","_Oo","getHubFromActiveDomain","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_contexts","clone","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","addScopeListener","addEventProcessor","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setFingerprint","fingerprint","setLevel","setTransactionName","setTransaction","setSpan","span","getSpan","getTransaction","transaction","spanRecorder","spans","captureContext","updatedScope","Object","keys","contexts","clear","maxCrumbs","Math","min","slice","clearBreadcrumbs","applyToEvent","trace","getTraceContext","transactionName","_applyFingerprint","breadcrumbs","_notifyEventProcessors","getGlobalEventProcessors","processors","index","_this","resolve","reject","processor","result","then","final","forEach","Array","isArray","concat","global","globalEventProcessors","addGlobalEventProcessor","originalFunctionToString","SDK_VERSION","DEFAULT_IGNORE_ERRORS","InboundFilters","_options","setupOnce","self","clientOptions","options","_mergeOptions","_shouldDropEvent","_isSentryError","_isIgnoredError","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreInternal","values","ignoreErrors","_getPossibleEventMessages","some","pattern","denyUrls","url","allowUrls","whitelistUrls","blacklistUrls","oO","_getLastValidUrl","frames","i","frame","filename","stacktrace","frames_1","frames_2","FunctionToString","Function","toString","__sentry_original__","setPrototypeOf","__proto__","obj","proto","prop","hasOwnProperty","SentryError","_super","_newTarget","constructor","call","DSN_REGEX","Dsn","from","_fromString","_fromComponents","_validate","withPassword","host","path","pass","port","projectId","protocol","publicKey","str","match","exec","split","join","projectMatch","components","component","ERROR_MESSAGE","isNaN","parseInt","installedIntegrations","filterDuplicates","integrations","reduce","acc","every","accIntegration","Status","BaseClient","backendClass","_integrations","_numProcessing","_backend","dsn","_dsn","_process","_getBackend","eventFromException","_captureEvent","promisedEvent","is","eventFromMessage","String","_isEnabled","_sendSession","getDsn","getTransport","flush","timeout","_isClientDoneProcessing","clientFinished","transportFlushed","enabled","initialized","defaultIntegrations","userIntegrations","filter","userIntegration","integrationsNames","map","alwaysLastToRun","indexOf","splice","getIntegrationsToSetup","log","setupIntegration","defineProperty","_updateSessionFromEvent","e_1","crashed","errored","exceptions","exceptions_1","exceptions_1_1","next","done","mechanism","handled","e_1_1","error","return","sessionNonTerminal","Number","sendSession","ticked","interval","setInterval","clearInterval","_prepareEvent","normalizeDepth","prepared","_applyClientOptions","_applyIntegrationsMetadata","finalScope","evt","_normalizeEvent","depth","normalized","b","data","_experiments","ensureNoCircularStructures","dist","maxValueLength","request","integrationsArray","sdk","_sendEvent","sendEvent","_processEvent","finalEvent","reason","beforeSend","sampleRate","transport","isTransaction","random","recordLostEvent","__sentry__","beforeSendResult","_ensureBeforeSendRv","processedEvent","promise","rv","nullErr","e","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","Severity","NoopTransport","_","Skipped","BaseBackend","_transport","_setupTransport","_exception","_hint","_message","fromString","Debug","Info","Warning","Fatal","Critical","Log","UNKNOWN_FUNCTION","chrome","gecko","winjs","geckoEval","chromeEval","reactMinifiedRegexp","computeStackTrace","ex","stack","popSize","framesToPop","test","parts","opera10Regex","opera11Regex","lines","line","element","func","column","extractMessage","computeStackTraceFromStacktraceProp","popFrames","submatch","isNative","substr","extractSafariExtensionDetails","columnNumber","computeStackTraceFromStackProp","failed","isSafariExtension","isSafariWebExtension","exceptionFromStacktrace","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","colno","function","in_app","lineno","reverse","eventFromUnknownInput","domException","name_1","eventFromString","rejection","__serialized__","eventFromPlainObject","synthetic","input","attachStacktrace","getSdkMetadataForEnvelopeHeader","api","metadata","enhanceEventWithSdkInfo","sdkInfo","packages","sessionToSentryRequest","body","JSON","stringify","sent_at","forceEnvelope","getEnvelopeEndpointWithUrlEncodedAuth","eventToSentryRequest","eventType","useEnvelope","debug_meta","transactionSampling","samplingMethod","rate","req","getStoreEndpointWithUrlEncodedAuth","envelope","sample_rates","cachedFetchImpl","API","tunnel","_dsnObject","_tunnel","getBaseApiEndpoint","getStoreEndpoint","_getIngestEndpoint","_encodedAuth","_getEnvelopeEndpoint","getStoreEndpointPath","getRequestHeaders","clientName","clientVersion","header","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","encodeURIComponent","target","auth","sentry_key","sentry_version","PromiseBuffer","_limit","_buffer","isReady","add","taskProducer","task","remove","drain","capturedSetTimeout","setTimeout","clearTimeout","getNativeFetchImplementation","fetch","bind","document","fetchImpl","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","CATEGORY_MAPPING","attachment","BaseTransport","_rateLimits","_outcomes","_api","_metadata","sendClientReports","addEventListener","visibilityState","_flushOutcomes","category","outcomes","discarded_events","quantity","sendBeacon","supports","fetch_1","credentials","keepalive","console","sendReport","_handleResponse","requestType","response","headers","_handleRateLimit","_disabledUntil","all","_isRateLimited","now","e_2","rlHeader","raHeader","trim","parameters","headerDelay","delay","_f","e_2_1","FetchTransport","_fetch","_sendRequest","sentryRequest","originalPayload","Promise","referrerPolicy","fetchParameters","assign","get","catch","XHRTransport","XMLHttpRequest","onreadystatechange","readyState","getResponseHeader","open","setRequestHeader","send","BrowserBackend","transportOptions","callOnHub","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","fn","before","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","handleEvent","property","enumerable","defineProperties","getOwnPropertyDescriptor","configurable","Breadcrumbs","dom","history","xhr","addSentryBreadcrumb","_consoleBreadcrumb","_domBreadcrumb","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","handlerData","logger","keyAttrs","serializeAttribute","endTimestamp","__sentry_own_request__","__sentry_xhr__","status_code","fetchData","to","parsedLoc","location","href","parsedFrom","parsedTo","relative","BrowserClient","showReportDialog","script","async","src","onLoad","onload","injectionPoint","injectReportDialog","platform","DEFAULT_EVENT_TARGET","TryCatch","eventTarget","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","_wrapEventTarget","original","originalCallback","handler","eventName","err","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","originalSend","xmlHttpRequestProps","wrapOptions","GlobalHandlers","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","onerror","onunhandledrejection","stackTraceLimit","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","currentHub","hasIntegration","isFailedOwnDelivery","msg","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","detail","_eventFromRejectionWithPrimitive","groups","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","Dedupe","currentEvent","_previousEvent","previousEvent","_isSameMessageEvent","_isSameExceptionEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_getFramesFromEvent","currentFrames","previousFrames","frameA","frameB","_getExceptionFromEvent","previousException","currentException","currentFingerprint","previousFingerprint","UserAgent","referrer","Referer","window_1","SENTRY_RELEASE","autoSessionTracking","clientClass","debug","initialScope","initAndBind","startSessionTracking","TransactionSamplingMethod","errorCallback","activeTransaction","setStatus","toTraceparent","sample","samplingContext","sampled","setMetadata","Explicit","tracesSampler","Sampler","parentSampled","Inheritance","tracesSampleRate","Rate","op","_startTransaction","transactionContext","initSpanRecorder","maxSpans","startIdleTransaction","idleTimeout","onScope","addExtensionMethods","packageToIntegrationMapping","mongodb","module","Mongo","mongoose","mysql","Mysql","pg","Postgres","mappedPackages","moduleName","pkg","p","_autoloadDatabaseIntegrations","DEFAULT_IDLE_TIMEOUT","IdleTransactionSpanRecorder","_pushActivity","_popActivity","transactionSpanId","maxlen","spanId","finish","IdleTransaction","_idleHub","_idleTimeout","_onScope","activities","_heartbeatCounter","_finished","_beforeFinishCallbacks","clearActiveTransaction","_initTimeout","keepSpan","startTimestamp","registerBeforeFinishCallback","_pingHeartbeat","end_1","_beat","heartbeatString","_prevHeartbeatString","bindReporter","metric","reportAllChanges","prevValue","forceReport","delta","initMetric","entries","floor","observe","PerformanceObserver","supportedEntryTypes","includes","po","l","getEntries","buffered","onHidden","cb","once","onHiddenOrPageHide","removeEventListener","firstHiddenTime","getVisibilityWatcher","Infinity","timeStamp","reportedMetricIDs","DEFAULT_METRICS_INSTR_OPTIONS","_reportAllChanges","MetricsInstrumentation","_measurements","_performanceCursor","performance","mark","_trackCLS","_trackLCP","_trackFID","addPerformanceEntries","entryScriptSrc","entryScriptStartTimestamp","tracingInitMarkStartTime","responseStartTimestamp","requestStartTimestamp","timeOrigin","scripts","dataset","entry","startTime","entryType","addPerformanceNavigationTiming","eventEnd","description","_startChild","requestStart","responseEnd","responseStart","addRequest","addNavigationSpans","measureStartTimestamp","measureEndTimestamp","addMeasureSpans","firstHidden","shouldRecord","resourceName","replace","origin","initiatorType","transferSize","encodedBodySize","decodedBodySize","addResourceSpans","max","_trackNavigator","timeOrigin_1","oldValue","measurementTimestamp","normalizedValue","abs","cls","setMeasurements","_tagMetricInfo","_lcpEntry","size","_clsEntry","sources","source","node","onReport","report","sessionValue","sessionEntries","entryHandler","hadRecentInput","firstSessionEntry","lastSessionEntry","takeRecords","connection","effectiveType","isMeasurementValue","rtt","downlink","deviceMemory","hardwareConcurrency","visibilityWatcher","stopListening_1","disconnect","capture","getLCP","processingStart","props","end","start","ctx","startChild","isFinite","defaultRequestInstrumentationOptions","traceFetch","traceXHR","tracingOrigins","DEFAULT_BROWSER_TRACING_OPTIONS","markBackgroundTransactions","maxTransactionDuration","routingInstrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","pathname","BrowserTracing","_emitOptionsWarning","_metrics","_metricOptions","_getCurrentHub","instrumentRouting","shouldCreateSpanForRequest","_createRouteTransaction","urlMap","defaultShouldCreateSpan","origins","shouldCreateSpan","__span","setHttpStatus","Request","append","fetchCallback","__sentry_xhr_span_id__","xhrCallback","instrumentOutgoingRequests","beforeNavigate","parentContextFromHeader","el","querySelector","getAttribute","getHeaderContext","expandedContext","trimEnd","modifiedContext","finalContext","idleTransaction","maxDuration","diff","adjustTransactionDuration","Express","_router","router","app","_methods","methods","wrapMiddlewareArgs","patchMiddleware","arity","res","__sentry_transaction","span_1","a","_usePgNative","usePgNative","native","Client","orig","config","text","sql","fields","OPERATIONS","OPERATION_SIGNATURES","bulkWrite","countDocuments","createIndex","createIndexes","deleteMany","deleteOne","distinct","dropIndex","find","findOne","findOneAndDelete","findOneAndReplace","findOneAndUpdate","indexExists","insertMany","insertOne","mapReduce","rename","replaceOne","updateMany","updateOne","_operations","operations","_describeOperations","describeOperations","_useMongoose","useMongoose","_instrumentOperations","Collection","collection","operation","_patchOperation","getSpanContext","_getSpanContextFromOperationArguments","lastArg","parentSpan","maybePromise","collectionName","dbName","namespace","spanContext","signature","shouldDescribe","Integrations","SpanRecorder","_maxlen","Span","traceId","substring","parentSpanId","child","childSpan","setData","httpStatus","spanStatus","isSuccess","sampledString","toContext","updateWithContext","parent_span_id","span_id","trace_id","start_timestamp","SpanStatus","Ok","Unauthenticated","PermissionDenied","NotFound","AlreadyExists","FailedPrecondition","ResourceExhausted","InvalidArgument","Unimplemented","Unavailable","DeadlineExceeded","InternalError","UnknownError","Transaction","_hub","_trimEnd","setName","measurements","newMetadata","finishedSpans","s","prev","current","TRACEPARENT_REGEXP","RegExp","hasTracingEnabled","extractTraceparentData","traceparent","matches","getActiveTransaction","msToSec","secToMs","SessionStatus","RequestSessionStatus","Outcome","htmlTreeAsString","elem","currentElem","out","height","len","sepLength","nextStr","_htmlElementAsString","parentNode","className","classes","attr","tagName","toLowerCase","keyAttrPairs","keyAttr","keyAttrPair","allowedAttrs","lastHref","debounceTimerID","lastCapturedEvent","handlers","instrumented","addInstrumentationHandler","originalConsoleLevel","triggerHandlers","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","originalAddEventListener","listener","handlers_1","__sentry_instrumentation_handlers__","handlerForType","refCount","handlers_2","instrumentDOM","requestKeys","requestValues","xhrproto","originalOpen","toUpperCase","onreadystatechangeHandler","requestPos","args_1","readyStateArgs","instrumentXHR","originalFetch","getFetchMethod","getFetchUrl","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","instrumentHistory","_oldOnErrorHandler","_oldOnUnhandledRejectionHandler","instrument","fetchArgs","globalListener","isContentEditable","shouldSkipDOMEvent","previous","shouldShortcircuitPreviousDebounce","isError","wat","isInstanceOf","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","Event","isElement","Element","isRegExp","isThenable","Boolean","isSyntheticEvent","base","PREFIX","Logger","_enabled","disable","enable","warn","fallbackGlobalObject","getGlobalObject","g","window","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","c","r","parseUrl","query","fragment","getEventDescription","consoleSandbox","originalConsole","wrappedLevels","addExceptionTypeValue","addExceptionMechanism","getLocationHref","parseRetryAfterHeader","headerDate","parse","isNodeEnv","process","dynamicRequire","mod","require","loadModule","cwd","Memo","_hasWeakSet","WeakSet","_inner","memoize","has","unmemoize","delete","fill","replacementFactory","wrapped","urlEncode","object","getWalkSource","event_1","currentTarget","CustomEvent","normalizeToSize","maxSize","serialized","normalize","encodeURI","utf8Length","normalizeValue","_events","walk","memo","serializeValue","innerKey","extractExceptionKeysForMessage","maxLength","sort","includedKeys","dropUndefinedKeys","val","defaultFunctionName","getFunctionName","truncate","safeJoin","delimiter","output","isMatchingPattern","supportsFetch","Headers","Response","isNativeFetch","supportsNativeFetch","doc","supportsReferrerPolicy","supportsHistory","isChromePackagedApp","runtime","hasHistoryApi","pushState","replaceState","States","SyncPromise","executor","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","REJECTED","state","_value","_executeHandlers","_attachHandler","cachedHandlers","onfulfilled","onrejected","counter","resolvedCollection","item","TypeError","finally","onfinally","isRejected","dateTimestampSource","nowSeconds","platformPerformance","getNodePerformance","getBrowserPerformance","timestampSource","dateTimestampInSeconds","timestampInSeconds","timestampWithMs","browserPerformanceTimeOrigin","threshold","performanceNow","dateNow","timeOriginDelta","timeOriginIsReliable","navigationStart","timing","navigationStartDelta"],"sourceRoot":""}