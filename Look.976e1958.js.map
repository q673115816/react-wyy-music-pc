{"version":3,"file":"Look.976e1958.js","mappings":"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","sources":["webpack://wyy/./src/pages/Look/socket.ts","webpack://wyy/./src/pages/Look/Home/List.tsx","webpack://wyy/./src/pages/Look/Home/Home.tsx","webpack://wyy/./src/pages/Look/Live/Live.tsx","webpack://wyy/./src/pages/Look/Room/Room.tsx","webpack://wyy/./src/pages/Look/Base.tsx"],"sourcesContent":["import io from 'socket.io-client'\nimport {useAppDispatch} from \"@/reducers/hooks\";\nimport {createLiveSocket} from \"@/reducers/live/slice\";\n\nconst url = 'http://localhost:3333'\n\nconst socket = io(url, {\n  autoConnect: false\n})\n\nsocket.on('create-success', (data) => {\n  console.log(data)\n})\n\nsocket.on('join-success', (data) => {\n  console.log(data)\n})\n\nsocket.on('disconnect-success', (data) => {\n  console.log(data)\n})\n\nexport const useCreateSocket = () => {\n  const dispatch = useAppDispatch()\n  dispatch(createLiveSocket({socket}))\n  socket.connect()\n}\n\nexport default socket\n","import React, {memo, useCallback} from 'react'\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\nimport {iList} from \"./types\";\nimport {useAppSelector} from \"@/reducers/hooks\";\nimport {liveSelector} from \"@/reducers/live/slice\";\nimport {useCreateSocket} from \"@/pages/Look/socket\";\n\nexport default memo<{ list: iList }>(({list}) => {\n  const {socket} = useAppSelector(liveSelector)\n  const {push} = useHistory()\n  const {pathname} = useLocation()\n  const handleBeforeEntry = useCallback((e, key) => {\n    e.preventDefault()\n    if(!socket) useCreateSocket()\n    prompt()\n    socket.emit('join', {})\n    push(`${pathname}/${key}`)\n  }, [pathname])\n  return (\n    <div className={`grid grid-cols-3 gap-5`}>\n      {\n        list.map(([key, options]) => (\n          <div key={key}>\n            <a href={`${pathname}/${key}`} onClick={(e) => handleBeforeEntry(e, key)}>\n              <img className={`ui_aspect-ratio-16/9 cursor-pointer`} loading={`lazy`} src={options.banner} alt=\"\"/>\n            </a>\n            <a href={`${pathname}/${key}`}\n               onClick={(e) => handleBeforeEntry(e, key)}\n               className={`cursor-pointer`}>\n              {options.title}\n            </a>\n            <div><Link to={`/`}>{options.user}</Link></div>\n          </div>\n        ))\n      }\n    </div>\n  )\n})\n","import React, {useState, memo, useRef, useEffect, useCallback, MouseEventHandler} from 'react';\nimport useInfinite from '@/hooks/useInfinite';\nimport {Link, useHistory, useLocation} from 'react-router-dom'\nimport axios from 'axios'\nimport {useQuery} from \"react-query\";\nimport Loading from \"@/components/Loading\";\nimport Rea from 'react-error-boundary'\nimport socket from \"../socket\";\nimport {iList, } from './types'\nimport LiveList from './List'\n\nexport default memo(() => {\n  const [size, setSize] = useState(20);\n  const DomScroll = useRef(null);\n  const DomObserver = useRef(null);\n  const [list, setList] = useState<iList>([])\n  // useInfinite(() => { setSize((prev) => prev + 20); }, DomScroll, DomObserver);\n\n  const {data, error, isLoading, isSuccess, status} = useQuery('look', async () => {\n    const {data} = await axios.get('http://localhost:3333/list')\n      .then((res) => res.data)\n    return data\n  })\n\n  return (\n    <div className=\"domLook overflow-auto max-h-full flex-auto\" ref={DomScroll}>\n      <div className=\"domLook_header ui_header\">\n        <span className=\"title h1\">LOOK直播</span>\n        <span className=\"text-gray-400 slogan ml-2\">在这里，看见音乐</span>\n        <Link to={({pathname}) => `${pathname}/my`} className=\"ml-2 py-1 px-2 rounded bg-red-500 text-white\">我的直播</Link>\n        <a href=\"https://look.163.com/hot\" className=\"text-gray-400 ml-auto\">更多 &gt;</a>\n      </div>\n      <div className=\"px-8\">\n        {isLoading && <div className={`pt-48 flex-center`}><Loading/></div>}\n        {isSuccess && <LiveList list={data}/>}\n\n        <div ref={DomObserver} />\n      </div>\n    </div>\n  );\n});\n\n","import React, {memo, MouseEventHandler, ReactNode, useRef} from 'react'\nimport {useAppDispatch, useAppSelector} from \"@/reducers/hooks\";\nimport {\n  liveSelector,\n  deskTopClose, deskTopOpen,\n  userClose, userOpen,\n  pushOpen, pushClose,\n} from \"@/reducers/live/slice\";\nimport classnames from 'classnames'\nimport socket from '../socket'\nimport useLoginStatus, {handleLoginStatus} from \"@/hooks/useLoginStatus\";\n\ninterface iButtonProps {\n  onClick: MouseEventHandler<HTMLButtonElement>,\n  status: boolean,\n  children: ReactNode\n}\n\nconst Button = memo<iButtonProps>\n(({onClick, status, children}) => (\n  <button type={'button'}\n          className={classnames(`text-white rounded p-2`, status ? 'bg-red-500' : 'bg-blue-500')}\n          onClick={onClick}>{children}</button>\n))\n\n/*\n* TODO\n*  1.信令系统\n*  2.摄像头叠加桌面，如基本直播\n* */\nexport default memo(() => {\n  const dispatch = useAppDispatch()\n  const {status} = useAppSelector(liveSelector)\n\n  const RefDeskTop = useRef(null)\n  const RefDeskTopStream = useRef(null)\n  const RefUser = useRef(null)\n  const handleDeskTop: MouseEventHandler = () => {\n    if(!status.deskTop) handleDeskTopOpen()\n    else handleDeskTopClose()\n  }\n\n  const handleDeskTopOpen = () => {\n\n    let deskTopStream = null;\n    const mediaStreamConstraints = {\n      video: true,\n      audio: true,\n    };\n\n    function gotDeskTopMediaStream(mediaStream: MediaStream) {\n      RefDeskTop.current.srcObject = mediaStream;\n      // deskTopStream = mediaStream;\n      dispatch(deskTopOpen())\n    }\n\n    RefDeskTopStream.current = navigator.mediaDevices\n      .getDisplayMedia(mediaStreamConstraints)\n      .then(gotDeskTopMediaStream)\n      .catch((err) => console.log(err));\n  }\n\n  const handleDeskTopClose = () => {\n    if(RefDeskTop.current) {\n      const tracks = RefDeskTop.current.srcObject.getTracks()\n      tracks.forEach((track: MediaStreamTrack) => track.stop())\n      RefDeskTop.current.srcObject = null\n      dispatch(deskTopClose())\n    }\n  }\n\n  const handleUser: MouseEventHandler = () => {\n    if(!status.user) handleUserOpen()\n    else handleUserClose()\n  }\n\n  const handleUserOpen = () => {\n    dispatch(userOpen())\n    let userStream = null;\n    const mediaStreamConstraints = {\n      video: true,\n      audio: true,\n    };\n\n    function gotLocalMediaStream(mediaStream: MediaStream) {\n      if(RefUser.current) (RefUser.current as HTMLVideoElement).srcObject = mediaStream;\n\n      // userStream = mediaStream;\n    }\n\n    navigator.mediaDevices\n      .getUserMedia(mediaStreamConstraints)\n      .then(gotLocalMediaStream)\n      .catch((err) => console.log(err));\n  }\n\n  const handleUserClose = () => {\n    dispatch(userClose())\n  }\n\n  const handleSend: MouseEventHandler = () => {\n    if(!status.push) handlePushOpen()\n    else handlePushClose()\n  }\n\n  const handlePushOpen = async () => {\n    dispatch(pushOpen())\n    socket.connect()\n    socket.emit('create', {\n      uid: 110\n    })\n  }\n  const handlePushClose = () => {\n    dispatch(pushClose())\n    socket.disconnect()\n  }\n\n  return (\n    <div className={`w-full h-full p-8 overflow-auto`}>\n      <div className={`flex`}>\n        <Button onClick={handleDeskTop} status={status.deskTop}>桌面共享开关</Button>\n        <Button onClick={handleUser} status={status.user}>摄像头开关</Button>\n        <Button onClick={handleSend} status={status.push}>推送开关</Button>\n      </div>\n      <div className={`flex flex-col`}>\n        <div className={``}>\n          <video className={`w-full`} ref={RefDeskTop} autoPlay playsInline/>\n        </div>\n        <div className={''}>\n          <video className={`w-full`} ref={RefUser} autoPlay playsInline/>\n        </div>\n      </div>\n    </div>\n  )\n})\n","import React, {memo} from 'react'\n\nexport default memo(() => {\n\n  return (\n    <div className={`p-8`}>Room</div>\n  )\n})\n","import React, { memo } from 'react'\nimport {Switch, Route} from \"react-router-dom\";\nimport Home from './Home'\nimport Live from './Live'\nimport Room from './Room'\n\nexport default memo(() => {\n  return (\n    <Switch>\n      <Route path={`/look`} exact component={Home}/>\n      <Route path={`/look/my`} component={Live}/>\n      <Route path={`/look/:id(\\\\d*)`} component={Room}/>\n    </Switch>\n  )\n})\n"],"names":["socket","io","autoConnect","on","data","console","log","useCreateSocket","useAppDispatch","dispatch","createLiveSocket","connect","memo","list","useAppSelector","liveSelector","push","useHistory","pathname","useLocation","handleBeforeEntry","useCallback","e","key","preventDefault","prompt","emit","className","map","options","href","onClick","loading","src","banner","alt","title","Link","to","user","useState","DomScroll","useRef","DomObserver","useQuery","axios","then","res","isLoading","error","isSuccess","status","ref","Loading","Button","children","type","classnames","RefDeskTop","RefDeskTopStream","RefUser","handlePushOpen","pushOpen","uid","deskTop","current","srcObject","getTracks","forEach","track","stop","deskTopClose","navigator","mediaDevices","getDisplayMedia","video","audio","mediaStream","deskTopOpen","catch","err","userClose","userOpen","getUserMedia","pushClose","autoPlay","playsInline","Switch","Route","path","exact","component","Home","Live","Room"],"sourceRoot":""}