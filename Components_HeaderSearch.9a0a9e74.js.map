{"version":3,"file":"Components_HeaderSearch.9a0a9e74.js","mappings":"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","sources":["webpack://wyy/./src/components/HeaderSearch/History.tsx","webpack://wyy/./src/components/HeaderSearch/index.tsx"],"sourcesContent":["import React, {\n  useEffect, useLayoutEffect, useRef, useState,\n} from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  IconTrash,\n  IconX,\n} from '@tabler/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setSearchHistory,\n} from '@/reducers/search/actions';\n\nexport default ({ handleSearch }) => {\n  const dispatch = useDispatch();\n  const [isHidden, setIsHidden] = useState(false);\n  const refHistory = useRef();\n  const {\n    searchHistory,\n  } = useSelector(({ search }) => search);\n  const handleDeleteSearchHistory = (keywords) => {\n    dispatch(setSearchHistory(\n      searchHistory.filter((search) => search !== keywords),\n    ));\n  };\n\n  const handleDeleteAllSearchHistory = () => {\n    dispatch(setSearchHistory([]));\n  };\n\n  useEffect(() => {\n    if (refHistory.current.clientHeight > 66) {\n      setIsHidden(true);\n    }\n    // console.log(refHistory.current.clientHeight);\n  }, []);\n\n  return (\n    <>\n      <div className=\"subtitle flex items-center px-5 py-2 text-gray-500\">\n        <span className=\"text-sm\">\n          搜索历史\n        </span>\n        &nbsp;\n        <button type=\"button\" onClick={handleDeleteAllSearchHistory}>\n          <IconTrash size={16} />\n        </button>\n        {isHidden\n        && (\n        <button\n          type=\"button\"\n          onClick={() => setIsHidden(false)}\n          className=\"ml-auto ui_text_black_hover\"\n        >\n          查看全部\n        </button>\n        )}\n      </div>\n      <div className=\"px-5\" style={isHidden ? { height: 66, overflow: 'hidden' } : null} ref={refHistory}>\n        <div className=\"searchHistory flex flex-wrap -m-1\">\n          {\n          searchHistory.map((item) => (\n            <Link\n              key={item}\n              to={`/search/${item}`}\n              onClick={() => handleSearch(item)}\n              className=\"item group hover:bg-gray-100 border rounded-full relative m-1 py-1 px-4\"\n            >\n              {item}\n              <button\n                type=\"button\"\n                className=\"ico absolute opacity-0 group-hover:opacity-100 inset-y-0 m-auto text-gray-400\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  handleDeleteSearchHistory(item);\n                }}\n              >\n                <IconX size={14} stroke={2} />\n              </button>\n            </Link>\n          ))\n        }\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport {\n  setSearchValue,\n  setSearchHistory,\n  setSearchHot,\n  setSearchSuggest,\n} from '@/reducers/search/actions';\nimport { setDialogReset, setSearchShow } from '@/reducers/mask/actions';\nimport DomMask from '../Mask';\nimport DomHistory from './History';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const {\n    searchValue,\n    searchHot,\n    searchSuggest,\n    searchHistory,\n  } = useSelector(({ search }) => search);\n  const { searchVisibility } = useSelector(({ mask }) => mask);\n  const handleSearch = (keywords) => {\n    // setSearchVisibility(false);\n    dispatch(setDialogReset());\n    dispatch(setSearchValue({ searchValue: keywords }));\n    dispatch(setSearchHistory([\n      keywords,\n      ...searchHistory.filter((search) => search !== keywords),\n    ]));\n    // push(`/search?keywords=${keywords}`);\n  };\n  if (!searchVisibility) return null;\n\n  return (\n    <DomMask>\n      <div className=\"absolute domHeader_search_box shadow rounded bg-white py-2 z-10\">\n        {searchValue ? (\n          <div className=\"domHeader_search_box_value overflow-auto h-full flex-auto\">\n            <Link\n              to={`/search/${searchValue}`}\n              onClick={() => handleSearch(searchValue)}\n            >\n              搜索&quot;\n              <span className=\"ui_link\">\n                {searchValue}\n              </span>\n              &quot;相关的结果&gt;\n            </Link>\n            {searchSuggest?.order?.map((order, index) => (\n              <div key={order}>\n                {searchSuggest[order].map((item) => (\n                  <div key={item.id}>{item.name}</div>\n                ))}\n              </div>\n            ))}\n          </div>\n        )\n          : (\n            <div className=\"domHeader_search_box_noValue overflow-auto h-full flex-auto\">\n              {\n                searchHistory.length > 0\n                && <DomHistory handleSearch={handleSearch} />\n              }\n              <div className=\"subtitle px-5 py-3 text-sm text-gray-400\">热搜榜</div>\n              <div className=\"list\">\n                {searchHot.map((item, index) => (\n                  <Link\n                    to={`/search/${item.searchWord}`}\n                    onClick={() => handleSearch(item.searchWord)}\n                    className=\"item flex items-center w-full hover:bg-gray-100\"\n                    key={item.content}\n                  >\n                    <span className={classNames('index flex-center text-base', index < 3 ? 'text-red-500' : 'text-gray-300')}>\n                      {index + 1}\n                    </span>\n                    <div className=\"aside flex-auto\">\n                      <div className=\"name flex items-baseline\">\n                        <span className=\"searchWord font-bold text-sm\">\n                          {item.searchWord}\n                        </span>\n                        &nbsp;\n                        {\n                          item.iconUrl\n                          && (\n                            <>\n                              <img className=\"ico max-w-8 max-h-3\" src={item.iconUrl} alt=\"\" />\n                          &nbsp;\n                            </>\n                          )\n                        }\n                        <span className=\"text-gray-400\">\n                          {item.score}\n                        </span>\n                      </div>\n                      <div className=\"content mt-2 text-gray-400\">\n                        {item.content}\n                      </div>\n                    </div>\n                  </Link>\n                ))}\n              </div>\n            </div>\n          )}\n\n      </div>\n    </DomMask>\n  );\n};\n"],"names":["handleSearch","dispatch","useDispatch","useState","isHidden","setIsHidden","refHistory","useRef","searchHistory","useSelector","search","useEffect","current","clientHeight","className","type","onClick","setSearchHistory","IconTrash","size","style","height","overflow","ref","map","item","Link","key","to","e","keywords","preventDefault","stopPropagation","filter","IconX","stroke","searchValue","searchHot","searchSuggest","searchVisibility","mask","setDialogReset","setSearchValue","order","index","id","name","length","searchWord","content","classNames","iconUrl","src","alt","score"],"sourceRoot":""}