{"version":3,"file":"831.38b34a3e.js","mappings":"6WAgBA,SAAeA,EAAAA,EAAAA,OAAK,WAAqB,OACvCC,EAAAA,EAAAA,KACA,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,EAAU,mCAAG,gHAEaC,EAAAA,EAAAA,MAFb,oBAEPH,KACRC,OAHe,MAEA,GAFA,mDAKfG,QAAQC,IAAR,MALe,yDAAH,qDAYhB,OAHAC,EAAAA,EAAAA,YAAU,WACRJ,MACC,IAED,yBAAKK,UAAU,6CACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,gCACb,kBAACC,EAAA,GAAD,OAEF,yBAAKD,UAAU,gBACb,yBAAKA,UAAU,MAAf,UACA,yBAAKA,UAAU,sBAAf,0BAKJ,yBAAKA,UAAU,qBACb,kBAACE,EAAA,EAAD,CAAWC,SAAUV,EAAKW,aAD5B,MAGE,4BACEC,KAAK,SACLL,UAAU,0FAEV,kBAAC,EAAAM,eAAD,CAAgBC,KAAM,GAAIC,OAAQ,IAJpC,YASJ,yBACER,UAAU,OACVS,MAAO,CACL,qBAAsB,0CAGxB,yBAAKT,UAAU,QACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,2BAAf,QACA,yBAAKA,UAAU,6BAAf,MACA,yBAAKA,UAAU,4BAAf,MACA,yBAAKA,UAAU,+BAAf,QAGJ,yBAAKA,UAAU,SAAf,UACGP,EAAKW,kBADR,aACG,EAAiBM,KAAI,SAACC,EAAMC,GAAP,OACpB,kBAACC,EAAA,EAAD,CACEC,OAAQ,CACN,CAAC,KAAM,KAAM,SACb,CAAC,QAAS,KAAM,OAAQ,OAAQ,OAElCT,KAAK,OACLM,KAAMA,EACNI,IAAKJ,EAAKK,KAAOL,EAAKM,GACtBC,SAAS,IACTlB,UAAWmB,GAAAA,CACT,gGACA,CAAE,aAAcP,EAAQ,GAAM,KAGhC,oCACE,yBAAKZ,UAAU,yBACb,kBAACoB,EAAA,EAAD,CAAMR,MAAOA,EAAOK,GAAIN,EAAKM,MAE/B,yBAAKjB,UAAU,SACb,kBAACqB,EAAA,EAAD,CAAOJ,GAAIN,EAAKM,MAElB,yBAAKjB,UAAU,YACb,kBAACsB,EAAA,EAAD,OAEF,kBAACC,EAAA,EAAD,CAAMZ,KAAMA,EAAMX,UAAU,SAC5B,kBAACwB,EAAA,EAAD,CAASC,QAASd,EAAKe,GAAI1B,UAAU,SACrC,kBAAC2B,EAAA,EAAD,CAAO3B,UAAU,OAAOgB,KAAML,EAAKiB,GAAGZ,KAAMC,GAAIN,EAAKiB,GAAGX,KACxD,yBAAKjB,UAAU,wCACZ6B,GAAAA,CAAMlB,EAAKmB,IAAIC,OAAO,sBC9F3C,EARe,WACb,OACE,kBAAC,EAAAC,OAAD,KACE,kBAAC,EAAAC,MAAD,CAAOrB,OAAK,EAACsB,QAAS,kBAACC,EAAD","sources":["webpack://wyy/./src/features/Daily-Song/DailySong.tsx","webpack://wyy/./src/features/Daily-Song/Router.tsx"],"sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\nimport { IconFolderPlus } from \"@tabler/icons\";\nimport classNames from \"classnames\";\nimport dayjs from \"dayjs\";\nimport { apiRecommendSongs } from \"@/api\";\nimport { SymbolToday } from \"@/components/Symbol\";\nimport useLoginStatus from \"@/hooks/useLoginStatus\";\nimport Rank from \"@/components/Table/Rank\";\nimport Heart from \"@/components/Table/Heart\";\nimport Download from \"@/components/Table/Download\";\nimport GroupPlay from \"@/components/GroupPlay\";\nimport Name from \"@/components/Table/Name\";\nimport Artists from \"@/components/Table/Artists\";\nimport Album from \"@/components/Table/Album\";\nimport MenuCreate from \"@/components/MenuCreate\";\n\nexport default memo(function DailySong() {\n  useLoginStatus();\n  const [data, setData] = useState([]);\n  const handleInit = async () => {\n    try {\n      const { data = [] } = await apiRecommendSongs();\n      setData(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"w-full overflow-auto max-h-full flex-auto\">\n      <div className=\"px-8 pb-2.5 pt-6 border-b\">\n        <div className=\"section flex items-center\">\n          <div className=\"date w-20 h-20 ui_themeColor\">\n            <SymbolToday />\n          </div>\n          <div className=\"content ml-8\">\n            <div className=\"h1\">每日歌曲推荐</div>\n            <div className=\"text-gray-400 tips\">\n              根据你的音乐口味生成, 每天6:00更新\n            </div>\n          </div>\n        </div>\n        <div className=\"actions flex mt-5\">\n          <GroupPlay playlist={data.dailySongs} />\n          &nbsp; &nbsp;\n          <button\n            type=\"button\"\n            className=\"inline-flex items-center justify-center border px-3 h-8 rounded-full hover:bg-gray-100\"\n          >\n            <IconFolderPlus size={22} stroke={1} />\n            &nbsp; 收藏全部\n          </button>\n        </div>\n      </div>\n      <div\n        className=\"pb-8\"\n        style={{\n          \"--ui_grid_template\": \"36px / 54px 30px 30px 36% 4fr 6fr 2fr\",\n        }}\n      >\n        <div className=\"list\">\n          <div className=\"thead\">\n            <div className=\"item grid leading-8 ui_grid_template\">\n              <div className=\"index\" />\n              <div className=\"heart\" />\n              <div className=\"download\" />\n              <div className=\"name text-gray-500 px-2\">音乐标题</div>\n              <div className=\"artist text-gray-500 px-2\">歌手</div>\n              <div className=\"album text-gray-500 px-2\">专辑</div>\n              <div className=\"duration text-gray-500 px-2\">时长</div>\n            </div>\n          </div>\n          <div className=\"tbody\">\n            {data.dailySongs?.map((item, index) => (\n              <MenuCreate\n                schema={[\n                  [\"评论\", \"播放\", \"下一首播放\"],\n                  [\"收藏到歌单\", \"分享\", \"复制链接\", \"不感兴趣\", \"下载\"],\n                ]}\n                type=\"song\"\n                item={item}\n                key={item.name + item.id}\n                tabIndex=\"2\"\n                className={classNames(\n                  \"grid h-9 items-center hover:bg-gray-100 focus:bg-gray-200 focus:outline-none ui_grid_template\",\n                  { \"bg-gray-50\": index % 2 === 0 }\n                )}\n              >\n                <>\n                  <div className=\"index pr-3 text-right\">\n                    <Rank index={index} id={item.id} />\n                  </div>\n                  <div className=\"heart\">\n                    <Heart id={item.id} />\n                  </div>\n                  <div className=\"download\">\n                    <Download />\n                  </div>\n                  <Name item={item} className=\"px-2\" />\n                  <Artists artists={item.ar} className=\"px-2\" />\n                  <Album className=\"px-2\" name={item.al.name} id={item.al.id} />\n                  <div className=\"duration text-gray-400 truncate px-2\">\n                    {dayjs(item.dt).format(\"mm:ss\")}\n                  </div>\n                </>\n              </MenuCreate>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport DailySong from \"./DailySong\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route index element={<DailySong />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["memo","useLoginStatus","useState","data","setData","handleInit","apiRecommendSongs","console","log","useEffect","className","Symbol","GroupPlay","playlist","dailySongs","type","IconFolderPlus","size","stroke","style","map","item","index","MenuCreate","schema","key","name","id","tabIndex","classNames","Rank","Heart","Download","Name","Artists","artists","ar","Album","al","dayjs","dt","format","Routes","Route","element","DailySong"],"sourceRoot":""}