{"version":3,"file":"Components_HeaderSearch.55d7bbf2.js","mappings":"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","sources":["webpack://wyy/./src/components/Search/History.tsx","webpack://wyy/./src/components/Search/HotList.tsx","webpack://wyy/./src/components/Search/Search.tsx"],"sourcesContent":["import React, {\n  memo,\n  useEffect, useLayoutEffect,\n  useRef, useState,\n} from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  IconTrash,\n  IconX,\n} from '@tabler/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {useAppDispatch, useAppSelector} from '@/reducers/hooks'\nimport {\n  setSearchHistory,\n} from '@/reducers/search/slice';\n\nexport default memo(({ handleSearch }) => {\n  const dispatch = useAppDispatch();\n  const [isHidden, setIsHidden] = useState(false);\n  const refHistory = useRef<HTMLDivElement>(null);\n  const {\n    searchHistory,\n  } = useAppSelector(({ search }) => search);\n  const handleDeleteSearchHistory = (keywords) => {\n    dispatch(setSearchHistory(\n      searchHistory.filter((search) => search !== keywords),\n    ));\n  };\n\n  const handleDeleteAllSearchHistory = () => {\n    dispatch(setSearchHistory([]));\n  };\n\n  useEffect(() => {\n    if (refHistory.current && refHistory.current.clientHeight > 66) {\n      setIsHidden(true);\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"subtitle flex items-center px-5 py-2 text-gray-500\">\n        <span className=\"text-sm\">\n          搜索历史\n        </span>\n        &nbsp;\n        <button type=\"button\" onClick={handleDeleteAllSearchHistory}>\n          <IconTrash size={16} />\n        </button>\n        {isHidden\n        && (\n        <button\n          type=\"button\"\n          onClick={() => setIsHidden(false)}\n          className=\"ml-auto ui_text_black_hover\"\n        >\n          查看全部\n        </button>\n        )}\n      </div>\n      <div className=\"px-5\" style={isHidden ? { height: 66, overflow: 'hidden' } : null} ref={refHistory}>\n        <div className=\"searchHistory flex flex-wrap -m-1\">\n          {\n          searchHistory.map((item) => (\n            <Link\n              key={item}\n              to={`/search/${item}`}\n              onClick={() => handleSearch(item)}\n              className=\"item group hover:bg-gray-100 border rounded-full relative m-1 py-1 px-4\"\n            >\n              {item}\n              <button\n                type=\"button\"\n                className=\"ico absolute opacity-0 group-hover:opacity-100 inset-y-0 m-auto text-gray-400\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  handleDeleteSearchHistory(item);\n                }}\n              >\n                <IconX size={14} stroke={2} />\n              </button>\n            </Link>\n          ))\n        }\n        </div>\n      </div>\n    </>\n  );\n});\n","import React, {memo} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nexport default memo(({list = [], handleSearch}) => {\n  return (\n    <div className=\"list\">\n      {list.map((item, index) => (\n        <Link\n          to={`/search/${item.searchWord}`}\n          onClick={() => handleSearch(item.searchWord)}\n          className=\"item flex items-center w-full hover:bg-gray-100\"\n          key={item.content}\n        >\n          <span\n            className={classNames('index flex-center text-base flex-none', index < 3 ? 'text-red-500' : 'text-gray-300')}>\n            {index + 1}\n          </span>\n          <div className=\"aside flex-auto w-0 px-1\">\n            <div className=\"name flex items-center gap-1\">\n              <span className={classNames(\"searchWord\", index < 3 ? 'font-bold' : '')}>\n                {item.searchWord}\n              </span>\n              {\n                item.iconUrl\n                && (\n                  <img className=\"h-2.5\" src={item.iconUrl} alt=\"hot\"/>\n                )\n              }\n              <span className=\"text-gray-400\">\n                {item.score}\n              </span>\n            </div>\n            <div className=\"content mt-2 text-gray-400 truncate\">\n              {item.content}\n            </div>\n          </div>\n        </Link>\n      ))}\n    </div>\n  )\n})\n","import React, {memo} from 'react';\nimport { useAppSelector, useAppDispatch } from '@/reducers/hooks'\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport {\n  setSearchValue,\n  setSearchHistory,\n  setSearchHot,\n  setSearchSuggest,\n} from '@/reducers/search/slice';\nimport { setDialogReset, setSearchShow } from '@/reducers/mask/slice';\nimport Mask from '../Mask';\nimport History from './History';\nimport HotList from './HotList'\n\nexport default memo(() => {\n  const dispatch = useAppDispatch();\n  const {\n    searchValue,\n    searchHot,\n    searchSuggest,\n    searchHistory,\n  } = useAppSelector(({ search }) => search);\n  const { searchVisibility } = useAppSelector(({ mask }) => mask);\n  const handleSearch = (keywords) => {\n    // setSearchVisibility(false);\n    dispatch(setDialogReset());\n    dispatch(setSearchValue({ searchValue: keywords }));\n    dispatch(setSearchHistory([\n      keywords,\n      ...searchHistory.filter((search) => search !== keywords),\n    ]));\n    // push(`/search?keywords=${keywords}`);\n  };\n  if (!searchVisibility) return null;\n\n  return (\n    <Mask>\n      <div className=\"absolute domHeader_search_box shadow rounded bg-white py-2 z-10\">\n        {searchValue ? (\n          <div className=\"domHeader_search_box_value overflow-auto h-full flex-auto\">\n            <Link\n              to={`/search/${searchValue}`}\n              onClick={() => handleSearch(searchValue)}\n            >\n              搜索&quot;\n              <span className=\"ui_link\">\n                {searchValue}\n              </span>\n              &quot;相关的结果&gt;\n            </Link>\n            {searchSuggest?.order?.map((order, index) => (\n              <div key={order}>\n                {searchSuggest[order].map((item) => (\n                  <div key={item.id}>{item.name}</div>\n                ))}\n              </div>\n            ))}\n          </div>\n        )\n          : (\n            <div className=\"domHeader_search_box_noValue overflow-auto h-full flex-auto\">\n              {\n                searchHistory.length > 0\n                && <History handleSearch={handleSearch} />\n              }\n              <div className=\"subtitle px-5 py-3 text-sm text-gray-400\">热搜榜</div>\n              <HotList list={searchHot} handleSearch={handleSearch}/>\n            </div>\n          )}\n\n      </div>\n    </Mask>\n  );\n});\n"],"names":["memo","handleSearch","dispatch","useAppDispatch","useState","isHidden","setIsHidden","refHistory","useRef","searchHistory","useAppSelector","search","useEffect","current","clientHeight","className","type","onClick","setSearchHistory","IconTrash","size","style","height","overflow","ref","map","item","Link","key","to","e","keywords","preventDefault","stopPropagation","filter","IconX","stroke","list","index","searchWord","content","iconUrl","src","alt","score","searchValue","searchHot","searchSuggest","searchVisibility","mask","setDialogReset","setSearchValue","order","id","name","length"],"sourceRoot":""}