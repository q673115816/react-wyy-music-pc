{"version":3,"file":"Comment_Hot.a703b448.js","mappings":"0QASA,SAAeA,EAAAA,EAAAA,OAAK,YAAY,IAATC,EAAS,EAATA,GACrB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAaC,EAAAA,EAAAA,SAAO,GACpBC,GAASD,EAAAA,EAAAA,QAAO,GAChBE,GAAcF,EAAAA,EAAAA,UACdG,GAAYH,EAAAA,EAAAA,UA0BZI,EAAU,mCAAG,2FACZL,EAAWM,QADC,0CACe,GADf,iCAGwBC,EAAAA,EAAAA,IAAc,CACnDX,GAAAA,EACAY,KAAM,EACNC,MA/BQ,GAgCRP,OAAQA,EAAOI,UAPF,gBAGPI,EAHO,EAGPA,YAAaC,EAHN,EAGMA,QAMrBX,EAAWM,QAAUK,EAErBT,EAAOI,SApCG,GAuCVP,GAAQ,SAACD,GAAD,wBAAcA,IAAd,OAAuBY,OAdhB,kDAiBfE,QAAQC,IAAR,MAjBe,0DAAH,qDAwBhB,OAHAC,EAAAA,EAAAA,GAAYT,EAAYD,EAAWD,GAIjC,yBAAKY,UAAU,0DAA0DC,IAAKZ,GAC5E,yBAAKW,UAAU,MAAf,QACA,yBAAKA,UAAU,mBACZjB,EAAKmB,KAAI,SAACC,GAAD,OACR,kBAAC,IAAD,CACEA,KAAMA,EAENC,IAAKD,EAAKE,eAIZpB,EAAWM,SACR,yBAAKS,UAAU,4BAA2B,kBAAC,IAAD,OAE/C,yBAAKC,IAAKb","sources":["webpack://wyy/./src/pages/Comment/Hot.tsx"],"sourcesContent":["import React, {\n  useState, useEffect, useRef, memo,\n} from 'react';\nimport { apiCommentHot, apiCommentLike } from '@/api';\nimport DomComment from '@/components/Comment';\nimport useInfinite from '@/hooks/useInfinite';\nimport DomLoading from '@/components/Loading';\nimport produce from 'immer';\n\nexport default memo(({ id }) => {\n  const [data, setData] = useState([]);\n  const refHasMore = useRef(true);\n  const offset = useRef(0);\n  const domObserver = useRef();\n  const domScroll = useRef();\n  const limit = 20;\n\n  const handleLike = async (cid, t) => {\n    try {\n      const { code } = await apiCommentLike({\n        id,\n        cid,\n        t: t ? 0 : 1,\n        type: 0,\n      });\n      if (code === 200) {\n        setData(produce((draft) => {\n          draft.forEach((item) => {\n            if (item.commentId === cid) {\n              item.liked = !t;\n              item.likedCount += t ? -1 : 1;\n            }\n          });\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleInit = async () => {\n    if (!refHasMore.current) return false;\n    try {\n      const { hotComments, hasMore } = await apiCommentHot({\n        id,\n        type: 0,\n        limit,\n        offset: offset.current,\n      });\n      refHasMore.current = hasMore;\n\n      offset.current += limit;\n      // const a = [...data, ...hotComments];\n      // console.log(data.concat(hotComments));\n      setData((data) => [...data, ...hotComments]);\n      // console.log(data); data 只能拿到空数组\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useInfinite(handleInit, domScroll, domObserver);\n\n  // if (loading) return <div>loading</div>;\n  return (\n    <div className=\"domComment px-8 py-5 overflow-auto max-h-full flex-auto\" ref={domScroll}>\n      <div className=\"h1\">精彩评论</div>\n      <div className=\"domComment_list\">\n        {data.map((item) => (\n          <DomComment\n            item={item}\n            // handleLike={handleLike}\n            key={item.commentId}\n          />\n        ))}\n        {\n          refHasMore.current\n          && <div className=\"flex justify-center py-4\"><DomLoading /></div>\n        }\n        <div ref={domObserver} />\n      </div>\n    </div>\n  );\n});\n"],"names":["memo","id","useState","data","setData","refHasMore","useRef","offset","domObserver","domScroll","handleInit","current","apiCommentHot","type","limit","hotComments","hasMore","console","log","useInfinite","className","ref","map","item","key","commentId"],"sourceRoot":""}