{"version":3,"file":"Playlist.18a0b626.js","mappings":"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","sources":["webpack://wyy/./src/pages/Playlist/Album.tsx","webpack://wyy/./src/pages/Playlist/Dj.tsx","webpack://wyy/./src/pages/Playlist/Music.tsx","webpack://wyy/./src/pages/Playlist/components/Comments.tsx","webpack://wyy/./src/pages/Playlist/components/Header.tsx","webpack://wyy/./src/pages/Playlist/components/Playlist.tsx","webpack://wyy/./src/pages/Playlist/components/Subscribers/index.tsx","webpack://wyy/./src/pages/Playlist/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default () => {\n  const [data] = useState(0);\n  return (\n    <div>TOTO</div>\n  );\n};\n","import React, { memo, useEffect } from 'react';\nimport { apiDjDetail } from '@/api';\n\nexport default memo(({ id }) => {\n  const handleInit = async () => {\n    try {\n      const { } = await apiDjDetail({\n        rid: id,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"domPlaylistDetail\">\n      <div className=\"domPlaylistDetail_header\">{}</div>\n      <div className=\"domPlaylistDetail_main\">TODO</div>\n    </div>\n  );\n});\n","import React, {\n  useEffect, useState, memo, useCallback,\n} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { apiPlaylistDetail, apiPlaylistSubscribe, apiSongDetail } from '@/api';\n\nimport { setToast } from '@/reducers/mask/slice';\nimport classNames from 'classnames';\nimport DomLoading from '@/components/Loading';\n\nimport produce from 'immer';\nimport DomHeader from './components/Header';\nimport DomPlaylist from './components/Playlist';\nimport DomComments from './components/Comments';\nimport DomSubscribers from './components/Subscribers';\n\nconst navs = [\n  ['歌曲列表', 'playlist'],\n  ['评论', 'comments'],\n  ['收藏者', 'subscribers'],\n];\n\nconst subpages = {\n  playlist: DomPlaylist,\n  comments: DomComments,\n  subscribers: DomSubscribers,\n};\n\nexport default memo(({ id }) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n  const [songs, setSongs] = useState([]);\n  const [data, setData] = useState({});\n  // const [privileges, setPrivileges] = useState([]);\n  const [status, setStatus] = useState('playlist');\n  const handleInit = async () => {\n    try {\n      const data = await apiPlaylistDetail({\n        id,\n      });\n      setData(produce((draft) => {\n        for (const key in data) {\n          draft[key] = data[key];\n        }\n      }));\n      if (data.playlist.trackCount > 0) {\n        const { songs } = await apiSongDetail({\n          ids: data.playlist.trackIds.map(({ id }) => id).join(','),\n        });\n        setSongs(songs);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // TODO\n  const handleSub = useCallback(async (isSub) => {\n    try {\n      const { code } = await apiPlaylistSubscribe({\n        t: isSub ? 2 : 1,\n        id,\n      });\n      if (code === 200) {\n        dispatch(setToast(isSub ? '取消收藏成功！' : '收藏成功！'));\n        setData(produce((draft) => {\n          draft.playlist.subscribed = !isSub;\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    handleInit();\n  }, [id]);\n\n  if (loading) return <div className=\"w-full h-full flex-center\"><DomLoading /></div>;\n  return (\n    <div className=\"domPlaylistDetail overflow-auto h-full\">\n      <DomHeader {...{ data, handleSub, songs }} />\n      <div className=\"domPlaylistDetail_main mt-4\">\n        <div className=\"space-x-4 flex items-baseline px-8\">\n          {\n            navs.map(([nav, code]) => (\n              <button\n                type=\"button\"\n                className={classNames('text-sm', status === code && 'font-bold ui_underline')}\n                key={nav}\n                onClick={() => setStatus(code)}\n              >\n                {nav}\n                {nav === '评论' && `(${data.playlist.commentCount})`}\n              </button>\n            ))\n          }\n        </div>\n        <div>\n          {\n            ((SubPage, params) => <SubPage {...params} />)(subpages[status], { id, songs })\n          }\n          {/* <DomMain id={id} status={status} songs={songs} /> */}\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport DomCommentsList from '@/components/CommentsList';\nimport DomWrite from '@/components/Write';\nimport { apiCommentPlaylist } from '@/api';\n\nexport default ({ id }) => {\n  const [comments, setComments] = useState({});\n  const handleInit = async () => {\n    try {\n      const comments = await apiCommentPlaylist({\n        id,\n      });\n      setComments(comments);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"px-8\">\n      {/* TODO */}\n      <div className=\"pt-10 pb-10\">\n        <DomWrite />\n      </div>\n      <DomCommentsList comments={comments} />\n    </div>\n  );\n};\n","import React, { useState, memo } from 'react';\nimport classNames from 'classnames';\nimport DomGroupPlay from '@/components/GroupPlay';\nimport { transPlayCount, transSubscribeCount } from '@/common/utils';\nimport {\n  IconPlayerPlay,\n  IconFolderPlus,\n  IconScreenShare,\n  IconCloudDownload,\n  IconPlus,\n  IconCheckbox,\n  IconCaretUp,\n  IconCaretDown,\n} from '@tabler/icons';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\n\nconst DomT = memo(({ tags = [] }) => {\n  if (tags.length === 0) return null;\n  return (\n    <div className=\"tags\">\n      <span>标签：</span>\n      {tags.map((tag, index) => (\n        <span key={tag}>\n          {index > 0 && ' / '}\n          <Link to={`/home/playlist/${tag}`} className=\"tag ui_link\">\n            {tag}\n          </Link>\n        </span>\n      ))}\n    </div>\n  );\n});\n\nconst DomDescription = memo(({ description = '' }) => {\n  if (!description) return null;\n  const [open, setOpen] = useState(false);\n  const descriptionList = description.match(/^.*$/mg);\n  return (\n    <div className=\"relative pr-5\">\n      <div className=\"whitespace-pre-line leading-6\">\n        简介：\n        <span className={classNames('text-gray-500 select-text', !open && 'truncate inline-block max-w-xs align-bottom')}>\n          {open\n            ? description\n            : descriptionList[0]}\n        </span>\n        <button type=\"button\" onClick={() => setOpen(!open)} className=\"absolute top-0 right-0 text-gray-500\">\n          {\n            open\n              ? <IconCaretUp size={16} className=\"fill-current\" />\n              : <IconCaretDown size={16} className=\"fill-current\" />\n          }\n        </button>\n      </div>\n    </div>\n  );\n});\n\nexport default memo(({ data = {}, handleSub, songs }) =>\n  // console.log('playlist_music_header');\n  (\n    <div className=\"domPlaylistDetail_header p-8 flex\">\n      <div className=\"cover border rounded overflow-hidden flex-none w-92 h-92\">\n        <img\n          className=\"w-full h-full\"\n          src={`${data.playlist.coverImgUrl}?param=200y200`}\n          alt=\"\"\n        />\n      </div>\n      <div className=\"info flex-auto w-0 ml-5\">\n        <div className=\"name flex items-center\">\n          <span className=\"type text-red-500 border border-current px-1 py-0.5 rounded mr-2 leading-none\">歌单</span>\n          <span className=\"h1 select-text\">\n            {data.playlist.name || '我喜欢的音乐'}\n          </span>\n        </div>\n        <div className=\"creator flex items-center mt-2\">\n          <Link\n            to={`/user/${data.playlist.creator?.userId}`}\n            className=\"avator w-6 h-6 rounded-full overflow-hidden mr-2\"\n          >\n            <img\n              className=\"\"\n              src={`${data.playlist.creator?.avatarUrl}?param=50y50`}\n              alt=\"\"\n            />\n          </Link>\n\n          <Link to={`/user/${data.playlist.creator?.userId}`} className=\"nickname ui_link mr-2\">\n            {data.playlist.creator?.nickname}\n          </Link>\n\n          <span className=\"text-gray-500\">\n            {dayjs(data.playlist.createTime || Date.now()).format('YYYY-MM-DD')}\n            创建\n          </span>\n        </div>\n        <div className=\"actions flex space-x-2 mt-2\">\n          <DomGroupPlay playlist={songs} />\n          <button\n            onClick={() => handleSub(data.playlist.subscribed)}\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\"\n          >\n            {\n              data.playlist.subscribed\n                ? <IconCheckbox size={20} stroke={1} />\n                : <IconFolderPlus size={20} stroke={1} />\n            }\n              &nbsp;\n            {\n              data.playlist.subscribed\n                ? '已收藏'\n                : '收藏'\n            }\n            {`(${transSubscribeCount(data.playlist.subscribedCount)})`}\n          </button>\n          <button type=\"button\" className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\">\n            <IconScreenShare size={20} stroke={1} />\n            &nbsp;\n            分享\n            {`(${transSubscribeCount(data.playlist.shareCount)})`}\n          </button>\n          <button type=\"button\" className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\">\n            <IconCloudDownload size={20} stroke={1} />\n            &nbsp;\n            下载全部\n          </button>\n\n        </div>\n        <div className=\"space-y-1 mt-2\">\n          <DomT tags={data.playlist.tags} />\n\n          <div>\n            <span className=\"mr-3\">\n              歌曲：\n              <span className=\"text-gray-500\">\n                {data.playlist.trackCount}\n              </span>\n            </span>\n            <span>\n              播放：\n              <span className=\"text-gray-500\">\n                {transPlayCount(data.playlist.playCount)}\n              </span>\n            </span>\n          </div>\n          <DomDescription description={data.playlist.description} />\n        </div>\n      </div>\n    </div>\n  ));\n","import React from 'react';\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\n\nimport DomMenuCreate from '@/components/MenuCreate';\nimport DomRank from '@/components/Table/Rank';\nimport DomHeart from '@/components/Table/Heart';\nimport DomDownload from '@/components/Table/Download';\nimport DomName from '@/components/Table/Name';\nimport DomArtists from '@/components/Table/Artists';\nimport DomAlbum from '@/components/Table/Album';\n\nexport default ({ songs = [] }) => {\n  // console.log('playlist_music_playlist');\n  if (songs.length === 0) {\n    return (\n      <div className=\"pt-16 text-center text-sm text-gray-400\">暂无音乐</div>\n    );\n  }\n  return (\n    <div style={{ '--ui_grid_template': '36px / 30px 30px 30px 36% 4fr 6fr 2fr' }} className=\"mt-4\">\n      <div className=\"grid ui_grid_template pl-8\">\n        <div />\n        <div />\n        <div />\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">音乐标题</div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">歌手</div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">专辑</div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">时长</div>\n      </div>\n      {songs.map((item, index) => (\n        <DomMenuCreate\n          schema={[\n            ['评论',\n              '播放',\n              '下一首播放'],\n            ['收藏到歌单',\n              '分享',\n              '复制链接',\n              '不感兴趣',\n              '下载'],\n          ]}\n          type=\"song\"\n          item={item}\n          key={item.id}\n        >\n          <div\n            tabIndex=\"2\"\n            className={classNames('grid items-center focus:outline-none focus:bg-gray-200 hover:bg-gray-100 ui_grid_template pl-8', index % 2 === 0 && 'bg-gray-50')}\n          >\n            <div className=\"px-1\">\n              <DomRank index={index} id={item.id} />\n            </div>\n            <div className=\"px-1\">\n              <DomHeart id={item.id} />\n            </div>\n            <div className=\"px-1\">\n              <DomDownload />\n            </div>\n            <DomName className=\"px-1\" item={item} />\n            <DomArtists className=\"px-1\" artists={item.ar} />\n            <DomAlbum className=\"px-1\" name={item.al.name} id={item.al.id} />\n            <div className=\"text-gray-500 px-1\">\n              {dayjs(item.dt).format('mm:ss')}\n            </div>\n          </div>\n        </DomMenuCreate>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { apiPlaylistSubscribers } from '@/api';\nimport {\n  Link, useLocation,\n} from 'react-router-dom';\nimport './style.scss';\nimport DomGender from '@/components/Gender';\nimport DomPage from '@/components/Page';\n\nexport default ({ id }) => {\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const limit = 60;\n  const [page, setPage] = useState(1);\n  const handleInit = async () => {\n    try {\n      const { subscribers, total } = await apiPlaylistSubscribers({\n        id,\n        limit,\n        offset: (page - 1) * limit,\n      });\n      setData(subscribers);\n      setTotal(total);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, [page]);\n  return (\n    <div className=\"px-8\">\n      <div className=\"domPlaylistDetail_subscribers flex justify-between flex-wrap\">\n        {data.map((item) => (\n          <div key={item.userId} className=\"item flex mt-6\">\n            <Link\n              to={`/user/${item.userId}`}\n              className=\"avatar border rounded-full overflow-hidden\"\n            >\n              <img src={`${item.avatarUrl}?param=100y100`} alt=\"\" />\n            </Link>\n            <div className=\"ml-2 flex-auto w-0 flex flex-col justify-center\">\n              <div className=\"text-sm flex items-center\">\n                <Link to={`/user/${item.userId}`}>\n                  {item.nickname}\n                </Link>\n              &nbsp;\n                <DomGender gender={item.gender} size={16} />\n              </div>\n              <div className=\"mt-2 truncate\">{item.signature}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <DomPage\n        total={Math.ceil(total / limit)}\n        page={page}\n        func={setPage}\n      />\n    </div>\n  );\n};\n","import React, { memo } from 'react';\nimport {\n  Switch, Route,\n} from 'react-router-dom';\nimport useMemoParams from '@/hooks/useMemoParams';\nimport PlaylistMusic from './Music';\nimport PlaylistDj from './Dj';\nimport PlaylistAlbum from './Album';\n\nexport default memo(() => (\n  <Switch>\n    <Route path=\"/playlist/music/:id\">\n      {useMemoParams(PlaylistMusic)}\n    </Route>\n    <Route path=\"/playlist/dj/:id\">\n      {useMemoParams(PlaylistDj)}\n    </Route>\n    <Route path=\"/playlist/album/:id\">\n      {useMemoParams(PlaylistAlbum)}\n    </Route>\n    <Route path=\"/playlist\">\n      <PlaylistMusic />\n    </Route>\n  </Switch>\n));\n"],"names":["useState","memo","id","handleInit","apiDjDetail","rid","console","log","useEffect","className","navs","subpages","playlist","DomPlaylist","comments","DomComments","subscribers","DomSubscribers","SubPage","params","dispatch","useDispatch","loading","setLoading","songs","setSongs","data","setData","status","setStatus","apiPlaylistDetail","draft","key","trackCount","apiSongDetail","ids","trackIds","map","join","handleSub","useCallback","isSub","apiPlaylistSubscribe","t","code","setToast","subscribed","nav","type","onClick","commentCount","setComments","apiCommentPlaylist","DomT","tags","length","tag","index","Link","to","DomDescription","description","open","setOpen","descriptionList","match","IconCaretUp","size","IconCaretDown","src","coverImgUrl","alt","name","creator","userId","avatarUrl","nickname","createTime","Date","now","format","IconCheckbox","stroke","IconFolderPlus","transSubscribeCount","subscribedCount","IconScreenShare","shareCount","IconCloudDownload","transPlayCount","playCount","style","item","schema","tabIndex","artists","ar","al","dt","total","setTotal","page","setPage","apiPlaylistSubscribers","limit","offset","gender","signature","Math","ceil","func","Switch","Route","path","PlaylistMusic","PlaylistDj","PlaylistAlbum"],"sourceRoot":""}