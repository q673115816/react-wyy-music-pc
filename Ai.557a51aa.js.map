{"version":3,"file":"Ai.557a51aa.js","mappings":"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","sources":["webpack://wyy/./src/pages/AI/AI.tsx","webpack://wyy/./src/pages/AI/Icon.tsx","webpack://wyy/./src/pages/AI/Speech.tsx","webpack://wyy/./src/pages/AI/index.ts"],"sourcesContent":["import React, {\n  useState, memo, useEffect,\n} from 'react';\nimport { IconFileImport, IconMicrophone } from '@tabler/icons';\nimport './style.scss';\nimport { setToast } from '@/reducers/mask/slice';\nimport IconRejected from './Icon'\nimport Speech from './Speech'\nimport { useAppDispatch } from '@/reducers/hooks';\nimport { useCallback } from 'react';\nimport { useRef } from 'react';\n\ntype IProps = { handleCallback: () => void }\n\nconst Wait = memo<IProps>(({ handleCallback }) => {\n  const [time, setTime] = useState(15);\n  useEffect(() => {\n    const id = setTimeout(() => {\n      if (time > 1) {\n        setTime(time - 1);\n      } else {\n        handleCallback();\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(id);\n    };\n  }, [time]);\n  return (\n    <div className=\"flex flex-col items-center\">\n      <div id=\"ai_work\" className=\"p-32 relative\">\n        <div className=\"flex-center rounded-full text-white bg-red-500 w-32 h-32\">\n          <IconMicrophone size={64} />\n        </div>\n      </div>\n      <div>\n        {\n          (time % 2 === 0 || time % 3 === 0 || time % 5 === 0)\n            ? '外部声源无法识别'\n            : '正在识别电脑中正在播放的音乐'\n        }\n        {`(${time}s)`}\n      </div>\n      <button\n        type=\"button\"\n        className=\"mt-4 text-base hover:bg-gray-100 rounded border h-10 w-28\"\n        onClick={handleCallback}\n      >\n        停止识别\n      </button>\n    </div>\n  );\n});\n\nconst Rejected = memo<IProps>(({ handleCallback }) => {\n  const dispatch = useAppDispatch();\n  return (\n    <div className=\"flex flex-col items-center\">\n      <IconRejected/>\n      <div className=\"text-base\">\n        未识别出音乐，仅支持当前电脑正在播放的音乐\n      </div>\n      <button\n        type=\"button\"\n        className=\"text-sm ui_theme_bg_color text-white py-2 px-6 rounded mt-4\"\n        onClick={handleCallback}\n      >\n        重新识别\n      </button>\n      <button\n        type=\"button\"\n        className=\"mt-3 text-blue-400 text-sm\"\n        onClick={() => dispatch(setToast('反馈成功，感谢您的反馈'))}\n      >\n        提交反馈\n      </button>\n    </div>\n  );\n});\n\nexport default memo(() => {\n  const dispatch = useAppDispatch();\n  const [listen, setListen] = useState(true);\n  /**\n   * 应该不会有成功吧？\n   * TODO\n   * speech\n   */\n  return (\n    <div className=\"domAi py-5 px-8 flex flex-col h-full relative\">\n      <Speech/>\n      <div className=\"domAi_header flex items-baseline\">\n        <div className=\"h1\">听歌识曲</div>\n        <button\n          type=\"button\"\n          className=\"ml-auto flex items-center\"\n          onClick={() => dispatch(setToast('创建【听歌识曲】图标至桌面成功'))}\n        >\n          <IconFileImport size={16} stroke={1} />\n          创建桌面快捷方式\n        </button>\n      </div>\n      <div className=\"flex-auto domAi_main flex items-center justify-center\">\n        {\n          listen\n            ? <Wait handleCallback={() => setListen(false)} />\n            : <Rejected handleCallback={() => setListen(true)} />\n        }\n      </div>\n    </div>\n  );\n});\n","import React, { memo } from \"react\"\n\nexport default memo(() => (\n<svg viewBox=\"0 0 1024 1024\" width=\"256\" height=\"256\" className=\"mb-4\">\n  <path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#FD8469\" />\n  <path d=\"M110.462992 829.68189C203.993701 948.207874 349.127559 1024 512 1024s307.2-75.792126 401.537008-194.31811H110.462992z\" fill=\"#F1543F\" />\n  <path d=\"M586.179528 817.587402l14.513385-89.499213h-177.385826l14.513385 89.499213z\" fill=\"#FFFFFF\" p-id=\"17925\" />\n  <path d=\"M595.855118 759.533858l4.837795-31.445669h-177.385826l4.837795 31.445669z\" fill=\"#E6E9EE\" />\n  <path d=\"M815.974803 740.182677H208.025197c-12.900787 0-23.382677-10.48189-23.382677-23.382677V278.979528c0-12.900787 10.48189-23.382677 23.382677-23.382678h608.755905c12.900787 0 23.382677 10.48189 23.382678 23.382678v437.014173c0 12.900787-10.48189 24.188976-24.188977 24.188976z\" fill=\"#FFFFFF\" />\n  <path d=\"M227.376378 298.330709h569.247244v351.546456H227.376378z\" fill=\"#84DBFF\" />\n  <path d=\"M227.376378 298.330709h569.247244v8.062992H227.376378z\" fill=\"#54C0EB\" />\n  <path d=\"M635.36378 829.68189H388.63622v-12.094488c0-12.900787 10.48189-22.576378 22.576378-22.576378h200.768504c12.900787 0 22.576378 10.48189 22.576378 22.576378v12.094488h0.8063z\" fill=\"#E6E9EE\" />\n  <path d=\"M512 690.998425m-25.801575 0a25.801575 25.801575 0 1 0 51.60315 0 25.801575 25.801575 0 1 0-51.60315 0Z\" fill=\"#E6E9EE\" />\n  <path d=\"M681.322835 553.927559H362.834646c-6.450394 0-12.094488-5.644094-12.094489-12.094488v-166.097638c0-6.450394 5.644094-12.094488 12.094489-12.094488h318.488189c6.450394 0 12.094488 5.644094 12.094488 12.094488v166.097638c0 6.450394-5.644094 12.094488-12.094488 12.094488z\" fill=\"#E6E9EE\" />\n  <path d=\"M375.735433 385.411024h292.686614v13.707086H375.735433zM375.735433 418.469291h292.686614v13.707087H375.735433zM375.735433 452.333858h292.686614v13.707087H375.735433zM375.735433 485.392126h292.686614v13.707087H375.735433zM375.735433 518.450394h166.097638v13.707086h-166.097638z\" fill=\"#CED5E0\" p-id=\"17933\" />\n  <path d=\"M683.741732 610.368504l24.995276-24.995276-50.796851-51.603149 41.12126-24.188977-108.044094-17.738582 17.738583 108.044094 24.188976-41.12126z\" fill=\"#324A5E\" />\n</svg>\n))\n","import { useAppDispatch } from '@/reducers/hooks'\nimport { setToast } from '@/reducers/mask/slice'\nimport { IconBrandGithub } from '@tabler/icons'\nimport React, {memo, useCallback, useState} from 'react'\nimport { useRef } from 'react'\n\nexport default memo(() => {\n  const dispatch = useAppDispatch()\n  const [text, setText] = useState('')\n  const active = useRef(false)\n  const [_active, setActive] = useState(false)\n\n  const createRecognition = () => {\n    const grammar = '#JSGF V1.0; grammar colors; public <color> = aqua | azure | beige | bisque | black | blue | brown | chocolate | coral | crimson | cyan | fuchsia | ghostwhite | gold | goldenrod | gray | green | indigo | ivory | khaki | lavender | lime | linen | magenta | maroon | moccasin | navy | olive | orange | orchid | peru | pink | plum | purple | red | salmon | sienna | silver | snow | tan | teal | thistle | tomato | turquoise | violet | white | yellow ;'\n\n    const recognition = new webkitSpeechRecognition();\n    const speechRecognitionList = new webkitSpeechGrammarList();\n    speechRecognitionList.addFromString(grammar, 1);\n    recognition.grammars = speechRecognitionList;\n    //recognition.continuous = false;\n    // recognition.interimResults = false;\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    // recognition.lang = 'en-US';\n    recognition.lang = 'cmn-Hans-CN';\n    recognition.maxAlternatives = 1;\n\n    recognition.onresult = function (event) {\n      console.log('result')\n      console.log(event);\n      let text = ''\n      for (const [{ transcript }] of event.results) {\n        text += transcript\n      }\n      // const color = event.results[0][0].transcript;\n      setText(text)\n    }\n\n    recognition.onstart = (e) => {\n      console.log(e, 'start')\n    }\n\n    recognition.onend = (e) => {\n      console.log(e, 'end')\n      active.current = false\n      setActive(false)\n    }\n\n    recognition.onspeechstart = (e) => {\n      console.log(e, 'speechstart')\n    }\n\n    recognition.onspeechend = (e) => {\n      console.log(e, 'speechend')\n    }\n\n    recognition.onsoundstart = (e) => {\n      console.log(e, 'soundstart')\n    }\n\n    recognition.onsoundend = (e) => {\n      console.log(e, 'soundend')\n    }\n\n    recognition.onaudiostart = (e) => {\n      console.log(e, 'audiostart')\n    }\n\n    recognition.onaudioend = (e) => {\n      console.log(e, 'audioend')\n    }\n    return recognition\n  }\n  const { current: recognition } = useRef(createRecognition())\n\n\n  const message = `在最新浏览器下使用`\n  const handleStart = useCallback(() => {\n    if (!('speechSynthesis' in globalThis)) {\n      return dispatch(setToast(message))\n    }\n\n    if (active.current) {\n      // 终止会卡死一会\n      console.log('toggleEnd')\n      active.current = false\n      setActive(false)\n      recognition.abort()\n\n      return\n    } else {\n      active.current = true\n      setActive(true)\n      console.log('start')\n      recognition.start();\n      console.log('Ready to receive a color command.');\n    }\n  }, [])\n  return (\n    <div className=\"absolute bottom-0 left-0\">\n      {\n      _active &&\n      <textarea value={text} readOnly></textarea>\n      }\n      <div>\n        {_active && `(真人讲话的效果较好，但是放歌给电脑听电脑听清，所以可以选择自己唱歌给电脑听，中途关闭会小卡)`}\n      </div>\n      <button\n        type=\"button\"\n        title={message}\n        onClick={handleStart}\n        className=\"border px-2 flex-center hover:bg-black hover:text-white\">\n        <IconBrandGithub />{_active ? '正在收集声音' : '隐藏功能'}\n      </button>\n    </div>\n  )\n})\n","export {default} from './AI'\n"],"names":["Wait","memo","handleCallback","useState","time","setTime","useEffect","id","setTimeout","clearTimeout","className","IconMicrophone","size","type","onClick","Rejected","dispatch","useAppDispatch","setToast","listen","setListen","IconFileImport","stroke","viewBox","width","height","d","fill","text","setText","active","useRef","_active","setActive","recognition","webkitSpeechRecognition","speechRecognitionList","webkitSpeechGrammarList","addFromString","grammars","continuous","interimResults","lang","maxAlternatives","onresult","event","console","log","results","transcript","onstart","e","onend","current","onspeechstart","onspeechend","onsoundstart","onsoundend","onaudiostart","onaudioend","createRecognition","message","handleStart","useCallback","globalThis","abort","start","value","readOnly","title","IconBrandGithub","default"],"sourceRoot":""}