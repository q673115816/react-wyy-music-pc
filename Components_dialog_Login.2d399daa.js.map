{"version":3,"file":"Components_dialog_Login.2d399daa.js","mappings":"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","sources":["webpack://wyy/./src/components/Dialog/Login/Scan.tsx","webpack://wyy/./src/components/Dialog/Login/components/Select.tsx","webpack://wyy/./src/components/Dialog/Login/components/Threes.tsx","webpack://wyy/./src/components/Dialog/Login/SignIn.tsx","webpack://wyy/./src/components/Dialog/Login/SignUp.tsx","webpack://wyy/./src/components/Dialog/Login/Reset.tsx","webpack://wyy/./src/components/Dialog/Login/Identify.tsx","webpack://wyy/./src/components/Dialog/Login/index.tsx"],"sourcesContent":["import React, { memo, useContext, useEffect, useMemo, useRef, useState, MutableRefObject } from 'react';\nimport { IconFaceId, IconScan } from '@tabler/icons';\nimport { apiLoginQrCheck, apiLoginQrCreate, apiLoginQrKey } from '@/api';\nimport { LoginContext } from './index';\nimport { setCookie } from '@/api/cookie';\n\nconst DomRefresh = ({ handleInit = () => null }) => (\n  <div className=\"absolute bg-black bg-opacity-60 flex-center flex-col inset-0 mask text-white\">\n    <div>二维码已失效</div>\n    <button type=\"button\"\n      className=\"btn w-20 h-8 rounded mt-2 bg-blue-500\"\n      onClick={handleInit}>点击刷新</button>\n  </div>\n)\n\nconst DomSuccess = () => (\n  <div className=\"scansuccess flex-center flex-col\">\n    <div className=\"flex-center ui_themeColor my-10\">\n      <IconFaceId size={64} stroke=\"1\" />\n    </div>\n    <span className=\"text-gray-400 text-sm\">扫描成功</span>\n    <div className=\"tips text-base mt-4\">请在手机上确认登录</div>\n  </div>\n)\n\nconst DomWaiting = ({ qrimg, handleInit, status, handleChooseOtherSign }) => (\n  <div className=\"scanwait text-center\">\n    <div className=\"qrbox relative\">\n      <div className=\"left\">\n        <div className=\"ico ui_themeColor flex-center\">\n          <IconScan size={64} />\n        </div>\n      </div>\n      <div className=\"right\">\n        <div className=\"qrimg relative m-auto\">\n          <img src={qrimg} alt=\"\" />\n          {status === 800 && <DomRefresh handleInit={handleInit} />}\n        </div>\n        <div className=\"tips text-sm mt-4\">\n          使用\n          <a href=\"https://music.163.com/#/download\" className=\"ui_link\">\n            网易云音乐APP\n          </a>\n          扫码登录\n        </div>\n      </div>\n    </div>\n    <button\n      type=\"button\"\n      onClick={handleChooseOtherSign}\n    >\n      选择其他登录模式&nbsp;&gt;\n    </button>\n  </div>\n)\n\n\nexport default memo(() => {\n  const [qrimg, setQrimg] = useState('');\n  const [key, setKey] = useState('');\n  const [status, setStatus] = useState(0);\n  const timer = useRef<number | null>();\n  const { loginDispatch } = useContext(LoginContext);\n  const handleInit = async () => {\n    try {\n      const { data: { unikey } } = await apiLoginQrKey();\n      const { data: { qrimg } } = await apiLoginQrCreate({\n        key: unikey,\n        qrimg: null,\n      });\n      setKey(unikey);\n      setQrimg(qrimg);\n      setStatus(0);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleLoop = async () => {\n    const { code, cookie } = await apiLoginQrCheck({\n      key,\n    }).catch((error: Error) => console.log(error));\n    switch (code) {\n      case 800:\n        clearInterval(timer.current); setStatus(800);\n        break;\n      case 802:\n        setStatus(802)\n        break;\n      case 803:\n        setCookie(cookie)\n        window.location.reload()\n        break;\n    }\n  };\n\n  const handleChooseOtherSign = () => loginDispatch({ type: 'SET_TYPE', payload: { type: 'signin' } })\n\n  useEffect(() => {\n    handleInit();\n  }, []);\n  useEffect(() => {\n    timer.current = setInterval(handleLoop, 5000)\n    return () => {\n      clearInterval(timer.current);\n    };\n  }, [key]);\n\n  const memoIsWaiting = useMemo(() => status === 0 || status === 800, [status])\n  const memoIsSuccess = useMemo(() => status === 802, [status])\n\n  return (\n    <div className=\"qr pt-24 flex items-center flex-col\">\n      <div className=\"title text-2xl\">扫码登录</div>\n      {memoIsWaiting && <DomWaiting {...{ qrimg, handleInit, status, handleChooseOtherSign }} />}\n      {memoIsSuccess && <DomSuccess />}\n    </div>\n  );\n});\n","import React, {memo, useContext, useState} from 'react';\nimport classNames from 'classnames';\nimport { IconCaretDown, IconDeviceMobile } from '@tabler/icons';\nimport { useSelector } from 'react-redux';\nimport { LoginContext } from '../index';\n\nexport default memo(() => {\n  const { countriesCodeList } = useSelector(({ common }) => common);\n  const {\n    loginReducer: {\n      countrycode,\n    },\n    loginDispatch,\n  } = useContext(LoginContext);\n\n  const [visibility, setVisibility] = useState(false);\n  const handleChoose = (countrycode) => {\n    loginDispatch({\n      type: 'SET_SIGNIN_COUNTRYCODE',\n      payload: { countrycode },\n    });\n  };\n  return (\n    <div className=\"customSelect\">\n      <button\n        onClick={() => setVisibility(!visibility)}\n        type=\"button\"\n        className=\"default\"\n      >\n        <IconDeviceMobile size={24} stroke={0.5} className=\"ico\" />\n        +\n        {countrycode}\n        <div className=\"arrow\">\n          <IconCaretDown size={12} className=\"fill-current\" />\n        </div>\n      </button>\n      <div className=\"customOptionGroup\" style={{ display: visibility ? null : 'none' }}>\n        {\n          countriesCodeList\n            .map(({ countryList }) => countryList.map((item) => (\n              <button\n                key={item.zh}\n                type=\"button\"\n                className={classNames('customOption flex w-full px-3 h-6', { on: item.code === countrycode })}\n                onClick={() => handleChoose(item.code)}\n              >\n                <div className=\"flag w-8\">\n                  { }\n                </div>\n                <div className=\"zh\">{item.zh}</div>\n                <div className=\"code ml-auto\">\n                  {`+${item.code}`}\n                </div>\n              </button>\n            )))\n        }\n      </div>\n    </div>\n  );\n});\n","import {SymbolQQ, SymbolWB, SymbolWX, SymbolWY} from \"@/components/Symbol\";\nimport React, {FunctionComponent, memo} from \"react\";\n\nexport default memo(()  => (\n  <div className=\"threes flex justify-between\">\n    <button type=\"button\" className=\"three\">\n      <SymbolWX hover />\n    </button>\n    <button type=\"button\" className=\"three\">\n      <SymbolQQ hover />\n    </button>\n    <button type=\"button\" className=\"three\">\n      <SymbolWB hover />\n    </button>\n    <button type=\"button\" className=\"three\">\n      <SymbolWY hover />\n    </button>\n  </div>\n))\n","import React, {memo, useContext, useRef, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport {\n  apiLoginCellphone,\n} from '@/api';\nimport {\n  IconFaceId,\n  IconQrcode,\n  IconDeviceMobile,\n  IconEye,\n  IconEyeOff,\n} from '@tabler/icons';\nimport { setCookie } from '@/api/cookie'\n\nimport DomCheck from '@/components/Checkbox';\nimport { LoginContext } from './index';\nimport DomSelect from './components/Select';\nimport DomThrees from './components/Threes';\nimport DomSubmitBtn from './components/SubmitBtn'\n\nexport default memo(() => {\n  const {\n    loginReducer: {\n      argeeArgument,\n      loginphone,\n      loginpassword,\n      countrycode,\n    },\n    loginDispatch,\n  } = useContext(LoginContext);\n\n  const [warn, setWarn] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const refArgument = useRef();\n  const refAutoLogin = useRef();\n\n  const handleLogin = async () => {\n    try {\n      const {\n        data,\n        code,\n        msg,\n        cookie,\n        token,\n        profile,\n      } = await apiLoginCellphone({\n        phone: loginphone,\n        password: loginpassword,\n        countrycode,\n      });\n      if (code === 200) {\n        setCookie(cookie);\n        // handleToggle();\n        // dispatch(setLoginInfo(profile));\n        // dispatch(setIsLogin());\n        window.location.reload();\n      }\n      if (code === 502) {\n        setWarn('⚠️当前登录失败，请稍后再试');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!argeeArgument) {\n      alert('请先勾选同意《服务条款》《服务条款》《服务条款》');\n    } else if (!loginphone) {\n      setWarn('⚠️请输入手机号');\n    } else if (!loginpassword) {\n      setWarn('⚠️请输入密码');\n    } else if (!/\\d{11}/.test(loginphone)) {\n      setWarn('⚠️请输入11位数字的手机号');\n    } else {\n      handleLogin();\n    }\n  };\n\n  const handlePhone = (loginphone) => {\n    loginDispatch({\n      type: 'SET_SIGNIN_PHONE',\n      payload: {\n        loginphone,\n      },\n    });\n  };\n\n  const handlePassword = (loginpassword) => {\n    loginDispatch({\n      type: 'SET_SIGNIN_PASSWORD',\n      payload: {\n        loginpassword,\n      },\n    });\n  };\n\n  const handleArgument = (argeeArgument) => {\n    loginDispatch({\n      type: 'SET_SIGNIN_ARGEEARGUMENT',\n      payload: {\n        argeeArgument,\n      },\n    });\n  };\n\n  const handleToSignUp = () => {\n    if (argeeArgument) {\n      loginDispatch({\n        type: 'SET_TYPE',\n        payload: { type: 'signup' },\n      });\n    } else {\n      alert('请先勾选同意《服务条款》《服务条款》《服务条款》');\n    }\n  };\n\n  return (\n    <div className=\"form px-10\">\n      <div className=\"angle absolute top-0 left-0\">\n        <button\n          type=\"button\"\n          onClick={() => loginDispatch({ type: 'SET_TYPE', payload: { type: 'scan' } })}\n        >\n          <IconQrcode size={36} />\n        </button>\n        <span className=\"absolute top-3 left-12 pr-3 pl-4 py-1.5 tips text-white whitespace-nowrap bg-gray-400\">扫码登录更安全</span>\n      </div>\n      <div style={{ height: 200 }} className=\"flex-center ui_themeColor\">\n        <IconFaceId size={100} stroke={1} />\n      </div>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <table className=\"table\">\n          <colgroup>\n            <col width=\"84\" />\n            <col width=\"auto\" />\n            <col width=\"84\" />\n          </colgroup>\n          <tbody>\n            <tr>\n              <td>\n                <DomSelect />\n              </td>\n              <td colSpan=\"2\">\n                <input\n                  type=\"text\"\n                  name=\"phone\"\n                  placeholder=\"请输入手机号\"\n                  className=\"input\"\n                  readOnly\n                  onFocus={({ target }) => target.removeAttribute('readonly')}\n                  value={loginphone}\n                  onChange={({ target }) => handlePhone(target.value)}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"2\">\n                <input\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  placeholder=\"请输入密码\"\n                  className=\"input\"\n                  readOnly\n                  onFocus={({ target }) => target.removeAttribute('readonly')}\n                  value={loginpassword}\n                  onChange={({ target }) => handlePassword(target.value)}\n                />\n                <button\n                  type=\"button\"\n                  className=\"togglePassword\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {\n                    showPassword\n                      ? <IconEye size={16} />\n                      : <IconEyeOff size={16} />\n                  }\n                </button>\n              </td>\n              <td>\n                <div className=\"flex-center\">\n                  <button\n                    type=\"button\"\n                    className=\"text-gray-400\"\n                    onClick={() => loginDispatch({ type: 'SET_TYPE', payload: { type: 'reset' } })}\n                  >\n                    重设密码\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div className=\"info\">\n          <label htmlFor=\"autoLogin\" className=\"auto\">\n            {/* <input type=\"checkbox\" name=\"auto\" hidden />\n            <i className=\"ico flex-center\">✔</i> */}\n            <DomCheck ref={refAutoLogin} name=\"autoLogin\" />\n            &nbsp;\n            自动登录\n          </label>\n          <div className=\"warn ml-auto text-red-500\">{warn}</div>\n        </div>\n        <div className=\"actions\">\n          <button type=\"submit\" className=\"submit\">登&nbsp;录</button>\n          <button\n            type=\"button\"\n            className=\"signup underline my-2 mx-auto text-sm block w-min whitespace-nowrap\"\n            onClick={handleToSignUp}\n          >\n            注册\n          </button>\n          <DomThrees/>\n        </div>\n        <label htmlFor=\"argument\" className=\"argument flex items-center whitespace-nowrap mt-9\">\n          <DomCheck\n            ref={refArgument}\n            name=\"argument\"\n            onChange={(e) => handleArgument(e.target.checked)}\n            checked={argeeArgument}\n          />\n          &nbsp;\n          <span className=\"text-gray-400\">\n            同意\n          </span>\n          <a\n            className=\"ui_link hover\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://st.music.163.com/official-terms/service\"\n          >\n            《服务条款》\n          </a>\n          <a\n            className=\"ui_link hover\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://st.music.163.com/official-terms/privacy\"\n          >\n            《隐私条款》\n          </a>\n          <a\n            className=\"ui_link hover\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://st.music.163.com/official-terms/children\"\n          >\n            《儿童隐私条款》\n          </a>\n        </label>\n\n      </form>\n    </div>\n  );\n});\n","import React, {memo, useContext, useState} from 'react';\nimport { IconFaceId, IconDeviceMobile } from '@tabler/icons';\nimport DomSelect from './components/Select';\nimport DomThrees from './components/Threes';\n\nimport { LoginContext } from './index';\n\nexport default memo(() => {\n  const [warn, setWarn] = useState('');\n  const {\n    loginReducer: {\n      registerphone,\n      registerpassword,\n      countrycode,\n    }, loginDispatch,\n  } = useContext(LoginContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!registerphone) {\n      setWarn('⚠️请输入手机号码');\n    } else if (!registerpassword) {\n      setWarn('⚠️请输入登录密码');\n    }\n  };\n\n  const handlePhone = () => {\n\n  };\n\n  const handlePassword = () => {\n\n  };\n\n  return (\n    <div className=\"form px-10\">\n      <div className=\"angle absolute top-0 left-0\">\n        <button\n          className=\"mt-2.5\"\n          type=\"button\"\n          onClick={() => loginDispatch({ type: 'SET_TYPE', payload: { type: 'signin' } })}\n        >\n          &lt; 返回登录\n        </button>\n      </div>\n      <div style={{ height: 200, color: 'var(--themeColor)' }} className=\"flex-center\">\n        <IconFaceId size={100} stroke={1} />\n      </div>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <table className=\"table\">\n          <colgroup>\n            <col width=\"84\" />\n            <col width=\"auto\" />\n            <col width=\"84\" />\n          </colgroup>\n          <tbody>\n            <tr>\n              <td>\n                <DomSelect />\n              </td>\n              <td colSpan=\"2\">\n                <input\n                  type=\"text\"\n                  name=\"phone\"\n                  placeholder=\"请输入手机号\"\n                  className=\"input\"\n                  readOnly\n                  onFocus={({ target }) => target.removeAttribute('readonly')}\n                  value={registerphone}\n                  onChange={({ target }) => handlePhone(target.value)}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"3\">\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"设置登录密码\"\n                  className=\"input\"\n                  readOnly\n                  onFocus={({ target }) => target.removeAttribute('readonly')}\n                  value={registerpassword}\n                  minLength=\"8\"\n                  maxLength=\"20\"\n                  onChange={({ target }) => handlePassword(target.value)}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div className=\"info\">\n          {\n            warn\n              ? <div className=\"warn ui_red\">{warn}</div>\n              : <span className=\"text-gray-400\">密码8-20位，至少包含字母/数字/字符2中组合</span>\n          }\n        </div>\n        <div className=\"actions\">\n          <button type=\"submit\" className=\"submit\">注册</button>\n          <div className=\"hint flex items-center justify-between mt-8 mb-4\">其他注册方式</div>\n          <DomThrees/>\n        </div>\n      </form>\n    </div>\n  );\n});\n","import React, { useState, useContext } from 'react';\nimport { IconFaceId } from '@tabler/icons';\nimport { apiRegisterCellphone } from '@/api';\nimport { LoginContext } from './index';\nimport DomSelect from './components/Select';\n\nexport default () => {\n  const [phone, setPhone] = useState();\n  const [password, setPassword] = useState();\n  const [warn, setWarn] = useState('');\n  const {\n    loginReducer: {\n      countrycode,\n    },\n    loginDispatch,\n  } = useContext(LoginContext);\n\n  const handleFocus = () => {\n\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!phone) {\n      setWarn('⚠️请输入手机号码');\n    } else if (!password) {\n      setWarn('⚠️请输入登录密码');\n    } else {\n      loginDispatch({ type: 'SET_TYPE', payload: { type: 'identify' } });\n    }\n  };\n\n  return (\n    <div className=\"form\">\n      <div className=\"angle\">\n        <button\n          className=\"mt-2.5\"\n          type=\"button\"\n          onClick={() => loginDispatch({ type: 'SET_TYPE', payload: { type: 'signin' } })}\n        >\n          &lt; 返回登录\n        </button>\n      </div>\n      <div style={{ height: 200, color: 'var(--themeColor)' }} className=\"flex-center\">\n        <IconFaceId size={100} stroke={1} />\n      </div>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <table className=\"table\">\n          <colgroup>\n            <col width=\"84\" />\n            <col width=\"auto\" />\n            <col width=\"84\" />\n          </colgroup>\n          <tbody>\n            <tr>\n              <td>\n                <DomSelect />\n              </td>\n              <td colSpan=\"2\">\n                <input\n                  type=\"text\"\n                  name=\"phone\"\n                  placeholder=\"请输入手机号\"\n                  className=\"input\"\n                  value={phone}\n                  onFocus={handleFocus}\n                  onChange={({ target }) => setPhone(target.value)}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"3\">\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"设置登录密码\"\n                  className=\"input\"\n                  value={password}\n                  minLength=\"8\"\n                  maxLength=\"20\"\n                  onFocus={handleFocus}\n                  onChange={({ target }) => setPassword(target.value)}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div className=\"info\">\n          {\n            warn\n              ? <div className=\"warn text-red-500 ml-auto\">{warn}</div>\n              : <span className=\"text-gray-400\">密码8-20位，至少包含字母/数字/字符2中组合</span>\n          }\n        </div>\n        <div className=\"actions\">\n          <button type=\"submit\" className=\"submit\">下一步</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React, {\n  useState,\n  useContext,\n  useEffect,\n} from 'react';\nimport { IconFaceId, IconKey } from '@tabler/icons';\nimport { apiCaptchaSent } from '@/api';\nimport { LoginContext } from './index';\n\nexport default () => {\n  const [warn, setWarn] = useState('');\n  const {\n    loginReducer: {\n    },\n    loginDispatch,\n  } = useContext(LoginContext);\n  const handleSubmit = () => {\n\n  };\n\n  const handleSend = async () => {\n    try {\n      const { } = apiCaptchaSent({\n        phone: '',\n        captcha: '',\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n\n  }, []);\n\n  return (\n    <div className=\"form\">\n      <div className=\"angle\">\n        <button\n          className=\"mt-2.5\"\n          type=\"button\"\n          onClick={() => loginDispatch({ type: 'SET_TYPE', payload: { type: 'signin' } })}\n        >\n          &lt; 返回登录\n        </button>\n      </div>\n      <div style={{ height: 200, color: 'var(--themeColor)' }} className=\"flex-center\">\n        <IconFaceId size={100} stroke={1} />\n      </div>\n      <div>为了安全，我们会向您的手机发送短信检验码</div>\n      <form onSubmit={handleSubmit} className=\"mt-6\" autoComplete=\"off\">\n        <div className=\"flex space-x-4\">\n          <div className=\"flex-1 relative\">\n            <i className=\"absolute inset-y-0 flex\">\n              <IconKey size={16} className=\"m-auto w-6\" />\n            </i>\n            <input type=\"text\" className=\"border h-full pl-6 rounded\" placeholder=\"填写验证码\" />\n          </div>\n          <div className=\"flex-1\">\n            <button type=\"button\" className=\"submit\">重新获取</button>\n          </div>\n        </div>\n        <div className=\"info\">\n          <div className=\"warn text-red-500 ml-auto\">{warn}</div>\n        </div>\n        <div className=\"actions\">\n          <button type=\"submit\" className=\"submit\">完成</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React, { createContext, useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IconX } from '@tabler/icons';\nimport { setLoginVisibilty } from '@/reducers/common/slice';\nimport './style.scss';\nimport DomScan from './Scan';\nimport DomSignIn from './SignIn';\nimport DomSignUp from './SignUp';\nimport DomReset from './Reset';\nimport DomIdentify from './Identify';\n\nexport const LoginContext = createContext(null);\n\nconst Build = {\n  scan: () => <DomScan />,\n  signin: () => <DomSignIn />,\n  signup: () => <DomSignUp />,\n  reset: () => <DomReset />,\n  identify: () => <DomIdentify />,\n};\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { loginVisibility } = useSelector(({ common }) => common);\n  const [loginReducer, loginDispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case 'SET_TYPE':\n        return {\n          ...state,\n          ...action.payload,\n        };\n      case 'SET_SIGNIN_WARN':\n        return {\n          ...state,\n          ...action.payload,\n        };\n      case 'SET_SIGNIN_PHONE':\n        return {\n          ...state,\n          ...action.payload,\n        };\n      case 'SET_SIGNIN_PASSWORD':\n        return {\n          ...state,\n          ...action.payload,\n        };\n      case 'SET_SIGNIN_ARGEEARGUMENT':\n        return {\n          ...state,\n          ...action.payload,\n        };\n      case 'SET_SIGNIN_COUNTRYCODE':\n        return {\n          ...state,\n          ...action.payload,\n        };\n      default:\n        return state;\n    }\n  }, {\n    argeeArgument: false,\n    loginphone: '',\n    loginpassword: '',\n    registerphone: '',\n    registerpassword: '',\n    type: 'scan',\n    countrycode: '86',\n  });\n  if (!loginVisibility) return null;\n  return (\n    <div\n      id=\"dialogLogin\"\n      className=\"-translate-x-1/2 -translate-y-1/2 bg-white fixed left-1/2 rounded shadow top-1/2 transform ui_dialog\"\n    >\n      <button\n        type=\"button\"\n        className=\"ui_dialog_close close\"\n        onClick={() => dispatch(setLoginVisibilty())}\n      >\n        <IconX stroke={1.5} />\n      </button>\n      <LoginContext.Provider value={{ loginReducer, loginDispatch }}>\n        {Build[loginReducer.type]()}\n      </LoginContext.Provider>\n    </div>\n  );\n};\n"],"names":["DomRefresh","handleInit","className","type","onClick","DomSuccess","IconFaceId","size","stroke","DomWaiting","qrimg","status","handleChooseOtherSign","IconScan","src","alt","href","memo","useState","setQrimg","key","setKey","setStatus","timer","useRef","loginDispatch","useContext","LoginContext","apiLoginQrKey","unikey","data","apiLoginQrCreate","console","log","handleLoop","apiLoginQrCheck","catch","error","code","cookie","clearInterval","current","setCookie","window","location","reload","useEffect","setInterval","memoIsWaiting","useMemo","memoIsSuccess","payload","countriesCodeList","useSelector","common","countrycode","loginReducer","visibility","setVisibility","IconDeviceMobile","IconCaretDown","style","display","map","countryList","item","zh","classNames","on","handleChoose","Symbol","hover","argeeArgument","loginphone","loginpassword","warn","setWarn","showPassword","setShowPassword","refArgument","refAutoLogin","handleLogin","apiLoginCellphone","phone","password","msg","token","profile","IconQrcode","height","onSubmit","e","preventDefault","test","alert","autoComplete","width","colSpan","name","placeholder","readOnly","onFocus","target","removeAttribute","value","onChange","handlePhone","handlePassword","IconEye","IconEyeOff","htmlFor","ref","handleArgument","checked","rel","registerphone","registerpassword","color","minLength","maxLength","setPhone","setPassword","handleFocus","IconKey","createContext","Build","scan","signin","signup","reset","identify","dispatch","useDispatch","loginVisibility","useReducer","state","action","id","setLoginVisibilty","IconX","Provider"],"sourceRoot":""}