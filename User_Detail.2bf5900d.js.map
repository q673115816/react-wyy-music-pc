{"version":3,"file":"User_Detail.2bf5900d.js","mappings":"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","sources":["webpack://wyy/./src/pages/User/Detail/components/RainbowCat/index.tsx","webpack://wyy/./src/pages/User/Detail/components/Grid.tsx","webpack://wyy/./src/pages/User/Detail/components/layout.tsx","webpack://wyy/./src/pages/User/Detail/components/List.tsx","webpack://wyy/./src/pages/User/Detail/components/Column.tsx","webpack://wyy/./src/pages/User/Detail/index.tsx"],"sourcesContent":["import './style.css';\n\nimport React from 'react';\n\nexport default () => (\n  <div className=\"cartoon hb r\">\n    <div className=\"ears\" />\n    <div className=\"face r c\" />\n    <div className=\"nose ha hb\" />\n    <div className=\"forehead ha c\" />\n    <div className=\"eyes r\" />\n    <div className=\"pupil\" />\n    <div className=\"pupil\" />\n    <div className=\"smile\" />\n    <div className=\"smile\" />\n    <div className=\"snout ha hb\" />\n    <div className=\"mouth ha hb\" />\n    <div className=\"whiskers r\" />\n  </div>\n);\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  IconPlayerPlay,\n} from '@tabler/icons';\nimport DomPlaylistAsyncReplace from '@/components/GroupPlay/PlaylistAsyncReplace';\nimport DomItem from '@/components/GridPlaylist/Item';\nimport { useSelector } from 'react-redux';\nimport RainbowCat from './RainbowCat';\n\nconst DomRank = ({ uid }) => {\n  const { profile } = useSelector(({ account }) => account);\n  if (profile?.userId !== Number(uid)) return null;\n  return (\n    <div className=\"item\">\n      <Link to={(location) => `${location.pathname}/record`}>\n        <div className=\"cover relative border ui_aspect-ratio-1/1\">\n          <div className=\"absolute inset-0\">\n            <RainbowCat />\n          </div>\n          <button\n            type=\"button\"\n            className=\"playArrow opacity-0 group-hover:opacity-100 transition-opacity duration-500 ui_themeColor absolute right-0 bottom-0 m-2 bg-white bg-opacity-90 rounded-full p-2\"\n          >\n            <IconPlayerPlay size={22} className=\"fill-current\" />\n          </button>\n        </div>\n      </Link>\n      <div className=\"footer mt-2 text-sm\">\n        <Link to={(location) => `${location.pathname}/record`} className=\"\">\n          {/* {user.profile.nickname} */}\n          听歌排行\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(({ list = [], uid }) => (\n  <div className=\"domUserDetail_list px-8 grid grid-cols-4 gap-5\">\n    <DomRank />\n    {list.map((item) => (\n      <DomItem item={item} uid={uid} key={item.id} />\n    ))}\n  </div>\n));\n","import React, { memo, useState } from 'react';\nimport {\n  IconLayoutGrid,\n  IconLayoutList,\n  IconList,\n} from '@tabler/icons';\nimport classNames from 'classnames';\nimport DomGrid from './Grid';\nimport DomList from './List';\nimport DomColumn from './Column';\n\nconst layouts = [\n  ['grid', '大图模式', IconLayoutGrid],\n  ['list', '列表模式', IconLayoutList],\n  ['column', '图列模式', IconList],\n];\n\nconst Mains = {\n  grid: DomGrid,\n  list: DomList,\n  column: DomColumn,\n};\n\nexport default memo(({ list = [], uid }) => {\n  const [layout, setLayout] = useState('grid');\n  return (\n    <div className=\"pb-10\">\n      <div className=\"domUserDetail_headerBar flex items-center px-8 pb-4\">\n        <span className=\"name text-base font-bold\">\n          歌单\n        </span>\n        <div className=\"layouts ml-auto flex overflow-hidden rounded space-x-0.5\">\n          {\n            layouts.map(([type, title, Ico]) => (\n              <button\n                key={type}\n                type=\"button\"\n                className={classNames('layout bg-gray-100 h-5 w-6 flex-center', layout === type ? 'bg-gray-500 text-white' : 'hover:bg-gray-200')}\n                onClick={() => setLayout(type)}\n                title={title}\n              >\n                <Ico size={16} />\n              </button>\n            ))\n          }\n        </div>\n      </div>\n      {\n        ((Layout) => <Layout list={list} uid={uid} />)(Mains[layout])\n      }\n    </div>\n  );\n});\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IconPlayerPlay, IconFolderPlus } from '@tabler/icons';\nimport { transPlayCount } from '@/common/utils';\n\nexport default ({ list = [] }) => (\n  <div>\n    {list.map((item, index) => (\n      <div key={item.id} className={classNames('hover:bg-gray-100 pl-8 py-3 flex items-center', { 'bg-gray-50': index % 2 === 0 })}>\n        <Link to={`/playlist/music/${item.id}`} className=\"rounded overflow-hidden relative group\">\n          <img src={`${item.coverImgUrl}?param=60y60`} alt=\"\" />\n          <button type=\"button\" className=\"absolute rounded-full bg-white bg-opacity-90 inset-0 flex-center m-auto w-6 h-6 ui_themeColor opacity-0 group-hover:opacity-100 transition-opacity duration-500\">\n            <IconPlayerPlay size={16} className=\"fill-current\" />\n          </button>\n        </Link>\n        <Link to={`/playlist/music/${item.id}`} className=\"flex-auto w-0 px-3 truncate text-sm ui_text_black_hover\">\n          {item.name}\n        </Link>\n        <span className=\"px-3 count text-gray-400\" style={{ width: `${1 / 7 * 100}%` }}>\n          歌曲：\n          {item.trackCount}\n        </span>\n        <span className=\"px-3 creator truncate text-gray-300\" style={{ width: `${1 / 7 * 100}%` }}>\n          by\n          <Link to={`/user/${item.userId}`} className=\"ui_text_gray_hover\">{item.creator.nickname}</Link>\n        </span>\n        <button type=\"button\" className=\"px-3 subscribed flex items-center ui_text_gray_hover\" style={{ width: `${1 / 7 * 100}%` }}>\n          <IconFolderPlus size={16} />\n          {item.subscribedCount}\n        </button>\n        <button type=\"button\" className=\"px-3 playCount flex items-center ui_text_gray_hover\" style={{ width: `${1 / 7 * 100}%` }}>\n          <IconPlayerPlay size={16} />\n          {transPlayCount(item.playCount)}\n        </button>\n      </div>\n    ))}\n  </div>\n);\n","import React from 'react';\n\nexport default () => (\n  <div>{}</div>\n);\n","import React, {\n  memo, useEffect, useState, useMemo,\n} from 'react';\nimport {\n  Link,\n} from 'react-router-dom';\nimport { apiUserDetail, apiUserPlaylist, apiFollow } from '@/api';\nimport { useSelector } from 'react-redux';\nimport './style.scss';\nimport DomGender from '@/components/Gender';\nimport {\n  IconEdit,\n  IconCheck,\n  IconMail,\n  IconPlus,\n} from '@tabler/icons';\nimport { SymbolWB } from '@/components/Symbol';\nimport DomLoading from '@/components/Loading';\n\nimport Domlayout from './components/layout';\n\nexport default memo(({ uid }) => {\n  const { isLogin } = useSelector(({ common }) => common);\n  const [user, setUser] = useState({});\n  const [playlist, setPlaylist] = useState([]);\n\n  const account = useSelector(({ account }) => account);\n  const [loading, setLoading] = useState(false);\n  const [isSelf, setIsSelf] = useState(false);\n\n  useEffect(() => {\n    if (isLogin) {\n      setIsSelf(String(account.profile.userId) === uid);\n    }\n  }, [isLogin]);\n\n  const ownPlaylist = playlist.filter((item) => String(item.userId) === uid);\n\n  const savePlaylist = playlist.filter((item) => String(item.userId) !== uid);\n  const handleGetUserInfo = async () => {\n    try {\n      const [\n        user,\n        { playlist }] = await Promise.all([\n        apiUserDetail({ uid }),\n        apiUserPlaylist({ uid }),\n      ]);\n      setUser(user);\n      setPlaylist(playlist);\n      setLoading(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleFollow = async (id) => {\n    const { followed } = user.profile;\n    try {\n      const { code } = await apiFollow({\n        id,\n        t: followed === true ? 0 : 1,\n      });\n      if (code === 200) {\n        setUser({ ...user, profile: { ...user.profile, followed: !followed } });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    handleGetUserInfo();\n  }, [uid]);\n  if (!isLogin) {\n    return (\n      <div>查看个人信息请先登录</div>\n    );\n  }\n  if (!loading) {\n    return <div className=\"flex-center\"><DomLoading /></div>;\n  }\n  return (\n    <div className=\"domUserDetail\">\n      <div className=\"domUserDetail_header p-8\">\n        <div className=\"avatar rounded-full overflow-hidden flex-none\">\n          <img src={`${user.profile.avatarUrl}?param=200y200`} alt=\"\" className=\"ui_coverimg\" />\n        </div>\n        <div className=\"content\">\n          <div className=\"name\">{user.profile.nickname}</div>\n          <div className=\"contain\">\n            <div className=\"left flex-center\">\n              {\n                user.profile.vipType === 11\n                && (\n                  <>\n                    <a href=\"https://music.163.com/#/member\">黑胶会员</a>\n                      &nbsp;\n                  </>\n                )\n              }\n              {\n                user.identify\n                && (\n                  <span className=\"authentication\" title={user.identify.imageDesc}>\n                    <span className=\"ico\">\n                      <img className=\"ui_containimg\" src={user.identify.imageUrl} alt=\"\" />\n                    </span>\n                    {user.identify.imageDesc}\n                  </span>\n                )\n              }\n              <a className=\"level\" href=\"https://music.163.com/#/user/level\">\n                Lv\n                {user.level}\n              </a>\n              <DomGender gender={user.profile.gender} size={16} />\n            </div>\n            <div className=\"right ml-auto flex-center\">\n              {\n                isSelf\n                  ? (\n                    <Link to={({ pathname }) => `${pathname}/edit`} className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex-center\">\n                      <IconEdit size={18} stroke={1.5} />\n                      &nbsp;\n                      编辑个人信息\n                    </Link>\n                  )\n                  : (\n                    <>\n                      <button type=\"button\" className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex-center\">\n                        <IconMail size={20} stroke={1} />\n                                &nbsp;发私信\n                      </button>\n                      {\n                        user.profile.followed\n                          ? (\n                            <button\n                              type=\"button\"\n                              className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex-center\"\n                              onClick={() => handleFollow(user.profile.userId)}\n                            >\n                              <IconCheck size={16} />\n                              &nbsp;\n                              已关注\n                            </button>\n                          )\n                          : (\n                            <button\n                              type=\"button\"\n                              className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex-center\"\n                              onClick={() => handleFollow(user.profile.userId)}\n                            >\n                              <IconPlus size={16} style={{ color: '#EC4141' }} />\n                              &nbsp;\n                              关注\n                            </button>\n                          )\n                      }\n                    </>\n                  )\n              }\n            </div>\n          </div>\n          <hr />\n          <div className=\"infos text-center divide-x grid mt-5\" style={{ gridTemplateColumns: 'repeat(3, 88px)' }}>\n            <Link to={({ pathname }) => `${pathname}/dynamic`} className=\"info\">\n              <div className=\"num text-base\">{user.profile.eventCount}</div>\n              <div className=\"string\">动态</div>\n            </Link>\n            <Link to={({ pathname }) => `${pathname}/follow`} className=\"info\">\n              <div className=\"num text-base\">{user.profile.follows}</div>\n              <div className=\"string\">关注</div>\n            </Link>\n            <Link to={({ pathname }) => `${pathname}/fans`} className=\"info\">\n              <div className=\"num text-base\">{user.profile.followeds}</div>\n              <div className=\"string\">粉丝</div>\n            </Link>\n          </div>\n          <div className=\"list\">\n            {/* <div className=\"item\">\n                <span>所在地区：</span>\n                <span className=\"text-gray-400\">浙江省 温州市</span>\n              </div> */}\n            <div className=\"item\">\n              <span>社交网络：</span>\n              {\n                user.bindings.map((item) => {\n                  if (item.url) {\n                    switch (item.type) {\n                      case 2:\n                        return (\n                          <a href={item.url} key={item.url}>\n                            <SymbolWB size={16} active key={item.url} />\n                          </a>\n                        );\n                      default:\n                        return null;\n                    }\n                  }\n                })\n              }\n            </div>\n            <div className=\"item\">\n              <span>个人介绍：</span>\n              <span className=\"text-gray-400\" style={{ whiteSpace: 'pre-wrap' }}>\n                {user.profile.signature || '暂无介绍'}\n\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"domUserDetail_main\">\n        <Domlayout uid={uid} list={ownPlaylist} />\n        <Domlayout uid={uid} list={savePlaylist} />\n      </div>\n    </div>\n  );\n});\n"],"names":["className","DomRank","uid","profile","useSelector","account","userId","Number","Link","to","location","pathname","RainbowCat","type","IconPlayerPlay","size","memo","list","map","item","key","id","layouts","IconLayoutGrid","IconLayoutList","IconList","Mains","grid","DomGrid","index","classNames","src","coverImgUrl","alt","name","style","width","trackCount","creator","nickname","IconFolderPlus","subscribedCount","transPlayCount","playCount","column","Layout","useState","layout","setLayout","title","Ico","onClick","isLogin","common","user","setUser","playlist","setPlaylist","loading","setLoading","isSelf","setIsSelf","useEffect","String","ownPlaylist","filter","savePlaylist","handleGetUserInfo","Promise","all","apiUserDetail","apiUserPlaylist","console","log","handleFollow","followed","apiFollow","t","code","avatarUrl","vipType","href","identify","imageDesc","imageUrl","level","gender","IconEdit","stroke","IconMail","IconCheck","IconPlus","color","gridTemplateColumns","eventCount","follows","followeds","bindings","url","Symbol","active","whiteSpace","signature"],"sourceRoot":""}