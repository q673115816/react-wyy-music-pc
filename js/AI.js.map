{"version":3,"file":"js/AI.js?version=91a67c5f","mappings":"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","sources":["webpack://wyy/./src/features/AI/Icon.tsx","webpack://wyy/./src/features/AI/Speech.tsx","webpack://wyy/./src/features/AI/AI.tsx","webpack://wyy/./src/features/AI/Router.tsx"],"sourcesContent":["import React, { memo } from \"react\";\n\nexport default memo(function Icon() {\n  return (\n    <svg viewBox=\"0 0 1024 1024\" width=\"256\" height=\"256\" className=\"mb-4\">\n      <path\n        d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\"\n        fill=\"#FD8469\"\n      />\n      <path\n        d=\"M110.462992 829.68189C203.993701 948.207874 349.127559 1024 512 1024s307.2-75.792126 401.537008-194.31811H110.462992z\"\n        fill=\"#F1543F\"\n      />\n      <path\n        d=\"M586.179528 817.587402l14.513385-89.499213h-177.385826l14.513385 89.499213z\"\n        fill=\"#FFFFFF\"\n        p-id=\"17925\"\n      />\n      <path\n        d=\"M595.855118 759.533858l4.837795-31.445669h-177.385826l4.837795 31.445669z\"\n        fill=\"#E6E9EE\"\n      />\n      <path\n        d=\"M815.974803 740.182677H208.025197c-12.900787 0-23.382677-10.48189-23.382677-23.382677V278.979528c0-12.900787 10.48189-23.382677 23.382677-23.382678h608.755905c12.900787 0 23.382677 10.48189 23.382678 23.382678v437.014173c0 12.900787-10.48189 24.188976-24.188977 24.188976z\"\n        fill=\"#FFFFFF\"\n      />\n      <path\n        d=\"M227.376378 298.330709h569.247244v351.546456H227.376378z\"\n        fill=\"#84DBFF\"\n      />\n      <path\n        d=\"M227.376378 298.330709h569.247244v8.062992H227.376378z\"\n        fill=\"#54C0EB\"\n      />\n      <path\n        d=\"M635.36378 829.68189H388.63622v-12.094488c0-12.900787 10.48189-22.576378 22.576378-22.576378h200.768504c12.900787 0 22.576378 10.48189 22.576378 22.576378v12.094488h0.8063z\"\n        fill=\"#E6E9EE\"\n      />\n      <path\n        d=\"M512 690.998425m-25.801575 0a25.801575 25.801575 0 1 0 51.60315 0 25.801575 25.801575 0 1 0-51.60315 0Z\"\n        fill=\"#E6E9EE\"\n      />\n      <path\n        d=\"M681.322835 553.927559H362.834646c-6.450394 0-12.094488-5.644094-12.094489-12.094488v-166.097638c0-6.450394 5.644094-12.094488 12.094489-12.094488h318.488189c6.450394 0 12.094488 5.644094 12.094488 12.094488v166.097638c0 6.450394-5.644094 12.094488-12.094488 12.094488z\"\n        fill=\"#E6E9EE\"\n      />\n      <path\n        d=\"M375.735433 385.411024h292.686614v13.707086H375.735433zM375.735433 418.469291h292.686614v13.707087H375.735433zM375.735433 452.333858h292.686614v13.707087H375.735433zM375.735433 485.392126h292.686614v13.707087H375.735433zM375.735433 518.450394h166.097638v13.707086h-166.097638z\"\n        fill=\"#CED5E0\"\n        p-id=\"17933\"\n      />\n      <path\n        d=\"M683.741732 610.368504l24.995276-24.995276-50.796851-51.603149 41.12126-24.188977-108.044094-17.738582 17.738583 108.044094 24.188976-41.12126z\"\n        fill=\"#324A5E\"\n      />\n    </svg>\n  );\n});\n","import { useAppDispatch } from \"@/modules/hooks\";\nimport { setToast } from \"@/modules/reducers/mask/slice\";\nimport { IconBrandGithub } from \"@tabler/icons\";\nimport React, { memo, useCallback, useState } from \"react\";\nimport { useRef } from \"react\";\n\nexport default memo(() => {\n  const dispatch = useAppDispatch();\n  const [text, setText] = useState(\"\");\n  const active = useRef(false);\n  const [_active, setActive] = useState(false);\n\n  const createRecognition = () => {\n    const grammar =\n      \"#JSGF V1.0; grammar colors; public <color> = aqua | azure | beige | bisque | black | blue | brown | chocolate | coral | crimson | cyan | fuchsia | ghostwhite | gold | goldenrod | gray | green | indigo | ivory | khaki | lavender | lime | linen | magenta | maroon | moccasin | navy | olive | orange | orchid | peru | pink | plum | purple | red | salmon | sienna | silver | snow | tan | teal | thistle | tomato | turquoise | violet | white | yellow ;\";\n\n    const recognition = new webkitSpeechRecognition();\n    const speechRecognitionList = new webkitSpeechGrammarList();\n    speechRecognitionList.addFromString(grammar, 1);\n    recognition.grammars = speechRecognitionList;\n    //recognition.continuous = false;\n    // recognition.interimResults = false;\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    // recognition.lang = 'en-US';\n    recognition.lang = \"cmn-Hans-CN\";\n    recognition.maxAlternatives = 1;\n\n    recognition.onresult = function (event) {\n      console.log(\"result\");\n      console.log(event);\n      let text = \"\";\n      for (const [{ transcript }] of event.results) {\n        text += transcript;\n      }\n      // const color = event.results[0][0].transcript;\n      setText(text);\n    };\n\n    recognition.onstart = (e) => {\n      console.log(e, \"start\");\n    };\n\n    recognition.onend = (e) => {\n      console.log(e, \"end\");\n      active.current = false;\n      setActive(false);\n    };\n\n    recognition.onspeechstart = (e) => {\n      console.log(e, \"speechstart\");\n    };\n\n    recognition.onspeechend = (e) => {\n      console.log(e, \"speechend\");\n    };\n\n    recognition.onsoundstart = (e) => {\n      console.log(e, \"soundstart\");\n    };\n\n    recognition.onsoundend = (e) => {\n      console.log(e, \"soundend\");\n    };\n\n    recognition.onaudiostart = (e) => {\n      console.log(e, \"audiostart\");\n    };\n\n    recognition.onaudioend = (e) => {\n      console.log(e, \"audioend\");\n    };\n    return recognition;\n  };\n  const { current: recognition } = useRef(createRecognition());\n\n  const message = `在最新浏览器下使用`;\n  const handleStart = useCallback(() => {\n    if (!(\"speechSynthesis\" in globalThis)) {\n      return dispatch(setToast(message));\n    }\n\n    if (active.current) {\n      // 终止会卡死一会\n      console.log(\"toggleEnd\");\n      active.current = false;\n      setActive(false);\n      recognition.abort();\n\n      return;\n    } else {\n      active.current = true;\n      setActive(true);\n      console.log(\"start\");\n      recognition.start();\n      console.log(\"Ready to receive a color command.\");\n    }\n  }, []);\n  return (\n    <div className=\"absolute bottom-0 left-0\">\n      {_active && <textarea value={text} readOnly />}\n      <div>\n        {_active &&\n          `(真人讲话的效果较好，但是放歌给电脑听电脑听清，所以可以选择自己唱歌给电脑听，中途关闭会小卡)`}\n      </div>\n      <button\n        type=\"button\"\n        title={message}\n        onClick={handleStart}\n        className=\"border px-2 flex-center hover:bg-black hover:text-white\"\n      >\n        <IconBrandGithub />\n        {_active ? \"正在收集声音\" : \"隐藏功能\"}\n      </button>\n    </div>\n  );\n});\n","import React, {\n  useState,\n  memo,\n  useEffect,\n  MouseEventHandler,\n  FC,\n  useCallback,\n} from \"react\";\nimport { IconFileImport, IconMicrophone } from \"@tabler/icons\";\nimport \"./style.scss\";\nimport { setToast } from \"@/modules/reducers/mask/slice\";\nimport IconRejected from \"./Icon\";\nimport Speech from \"./Speech\";\nimport { useAppDispatch } from \"@/modules/hooks\";\n\ninterface IProps {\n  handleCallback: () => void;\n}\n\nconst Wait = memo<IProps>(function Wait({ handleCallback }: IProps) {\n  const [time, setTime] = useState(15);\n  useEffect(() => {\n    const id = setTimeout(() => {\n      if (time > 1) {\n        setTime(time - 1);\n      } else {\n        handleCallback();\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(id);\n    };\n  }, [time]);\n  return (\n    <div className=\"flex flex-col items-center\">\n      <div id=\"ai_work\" className=\"p-32 relative\">\n        <div className=\"flex-center rounded-full text-white bg-red-500 w-32 h-32\">\n          <IconMicrophone size={64} />\n        </div>\n      </div>\n      <div>\n        {time % 2 === 0 || time % 3 === 0 || time % 5 === 0\n          ? \"外部声源无法识别\"\n          : \"正在识别电脑中正在播放的音乐\"}\n        {`(${time}s)`}\n      </div>\n      <button\n        type=\"button\"\n        className=\"mt-4 text-base hover:bg-gray-100 rounded border h-10 w-28\"\n        onClick={handleCallback}\n      >\n        停止识别\n      </button>\n    </div>\n  );\n});\n\nconst Rejected = memo<FC<IProps>>(function Rejected({\n  handleCallback,\n}: IProps) {\n  const dispatch = useAppDispatch();\n  return (\n    <div className=\"flex flex-col items-center\">\n      <IconRejected />\n      <div className=\"text-base\">\n        未识别出音乐，仅支持当前电脑正在播放的音乐\n      </div>\n      <button\n        type=\"button\"\n        className=\"text-sm ui_theme_bg_color text-white py-2 px-6 rounded mt-4\"\n        onClick={handleCallback}\n      >\n        重新识别\n      </button>\n      <button\n        type=\"button\"\n        className=\"mt-3 text-blue-400 text-sm\"\n        onClick={() => dispatch(setToast(\"反馈成功，感谢您的反馈\"))}\n      >\n        提交反馈\n      </button>\n    </div>\n  );\n});\n\nexport default memo(function AI() {\n  const dispatch = useAppDispatch();\n  const [listen, setListen] = useState(true);\n  /**\n   * 应该不会有成功吧？\n   * TODO\n   * speech\n   */\n  const handleRejected = useCallback(() => setListen(false), []);\n  const handleFulfilled = useCallback(() => setListen(true), []);\n  return (\n    <div className=\"py-5 px-8 flex flex-col h-full relative\">\n      <Speech />\n      <div className=\"domAi_header flex items-baseline\">\n        <div className=\"h1\">听歌识曲</div>\n        <button\n          type=\"button\"\n          className=\"ml-auto flex items-center\"\n          onClick={() => dispatch(setToast(\"创建【听歌识曲】图标至桌面成功\"))}\n        >\n          <IconFileImport size={16} stroke={1} />\n          创建桌面快捷方式\n        </button>\n      </div>\n      <div className=\"flex-auto flex-center\">\n        {listen ? (\n          <Wait handleCallback={handleRejected} />\n        ) : (\n          <Rejected handleCallback={handleFulfilled} />\n        )}\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport AI from \"./AI\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route index element={<AI />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["memo","svg","viewBox","width","height","className","path","d","fill","p-id","recognition","speechRecognitionList","dispatch","useAppDispatch","useState","text","setText","active","useRef","_active","setActive","webkitSpeechRecognition","webkitSpeechGrammarList","addFromString","grammars","continuous","interimResults","lang","maxAlternatives","onresult","event","console","log","results","transcript","onstart","e","onend","current","onspeechstart","onspeechend","onsoundstart","onsoundend","onaudiostart","onaudioend","message","handleStart","useCallback","globalThis","abort","start","setToast","div","textarea","value","readOnly","type","title","onClick","IconBrandGithub","Wait","handleCallback","time","setTime","useEffect","id","setTimeout","clearTimeout","IconMicrophone","size","Rejected","IconRejected","listen","setListen","handleRejected","handleFulfilled","Speech","IconFileImport","stroke","Routes","Route","index","element","AI"],"sourceRoot":""}