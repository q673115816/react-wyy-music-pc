{"version":3,"file":"js/Artist-TopList.js?version=014c17cd","mappings":"wQAOMA,EAAO,CACX,CAAC,KAAM,KACP,CAAC,KAAM,KACP,CAAC,KAAM,KACP,CAAC,KAAM,MAGT,SAAeC,EAAAA,EAAAA,OAAK,YAAkB,QAAfC,KAAAA,OAAe,MAAR,EAAQ,EACpC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAe,mCAAG,gHAEGC,EAAAA,EAAAA,IAAiBP,GAFpB,gBAEZQ,EAFY,EAEZA,KACRL,EAAUK,EAAKC,SACfJ,EAAcG,EAAKJ,YAJC,gDAMpBM,QAAQC,IAAR,MANoB,yDAAH,sDAUrBC,EAAAA,EAAAA,YAAU,WACRN,MACC,CAACN,IACJ,IAAMa,EAAOX,EAAOY,MAAM,EAAG,GACvBC,EAAQb,EAAOY,MAAM,GAC3B,OACE,yBAAKE,UAAU,yCACb,yBAAKA,UAAU,qDACb,yBAAKA,UAAU,6BAAf,UACA,yBAAKA,UAAU,4CACb,yBAAKA,UAAU,uCACZlB,EAAKmB,KAAI,+BAAEC,EAAF,KAAQC,EAAR,YACR,kBAAC,EAAAC,QAAD,CACEC,IAAKH,EACLF,UAAW,gBAAGM,EAAH,EAAGA,SAAH,OACTC,GAAAA,CAAW,UAAWD,GAAY,cAEpCE,GAAIL,GAEHD,OAIP,yBAAKF,UAAU,iBAAf,QAEGS,GAAAA,CAAMrB,GAAYsB,OAAO,aAIhC,yBAAKV,UAAU,8BACb,yBAAKA,UAAU,iEACZH,EAAKI,KAAI,SAACU,EAAMC,GAAP,OACR,kBAAC,EAAAC,KAAD,CACEb,UAAU,mGACVQ,GAAE,kBAAaG,EAAKG,IACpBT,IAAKM,EAAKG,GACVC,MAAO,CAAEC,OAAQ,MAEjB,yBAAKhB,UAAU,kCAAkCY,EAAQ,GACzD,yBAAKZ,UAAU,+CACb,yBAAKA,UAAU,WAAWW,EAAKT,MAC/B,yBAAKF,UAAU,4BAAf,MAEGW,EAAKM,QAGV,yBAAKjB,UAAU,gBACb,yBAAKkB,IAAG,UAAKP,EAAKQ,OAAV,kBAAkCC,IAAI,WAKtD,yBAAKpB,UAAU,+BACZD,EAAME,KAAI,SAACU,EAAMC,GAAP,OACT,kBAAC,EAAAC,KAAD,CACEb,UAAWO,GAAAA,CACT,uEACA,CAAE,aAAcK,EAAQ,GAAM,IAEhCJ,GAAE,kBAAaG,EAAKG,IACpBT,IAAKM,EAAKG,IAEV,yBAAKd,UAAU,sEACb,yBAAKA,UAAU,WAAWY,EAAQ,GAClC,6BACGD,EAAKU,WAAaT,EAAQ,GAAK,KAC/BD,EAAKU,SAAWT,EAAQ,GACvB,6BACE,0BAAMZ,UAAU,gBAAhB,KACCW,EAAKU,SAAWT,EAAQ,GAG5BD,EAAKU,SAAWT,EAAQ,GACvB,6BACE,0BAAMZ,UAAU,iBAAhB,KACCY,EAAQ,EAAID,EAAKU,YAK1B,yBAAKrB,UAAU,iCACb,yBAAKkB,IAAG,UAAKP,EAAKQ,OAAV,kBAAkCC,IAAI,MAEhD,yBAAKpB,UAAU,+BAA+BW,EAAKT,MACnD,yBAAKF,UAAU,4BAAf,MAEGW,EAAKM,iBCrGtB,EARe,WACb,OACE,kBAAC,EAAAK,OAAD,KACE,kBAAC,EAAAC,MAAD,CAAOX,OAAK,EAACY,QAAS,kBAACC,EAAD","sources":["webpack://wyy/./src/features/Artist-TopList/ArtistTopList.tsx","webpack://wyy/./src/features/Artist-TopList/Router.tsx"],"sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport classNames from \"classnames\";\nimport { apiToplistArtist } from \"@/api\";\nimport \"./style.scss\";\n\nconst navs = [\n  [\"华语\", \"1\"],\n  [\"欧美\", \"2\"],\n  [\"韩国\", \"3\"],\n  [\"日本\", \"4\"],\n];\n\nexport default memo(({ type = 1 }) => {\n  const [artist, setArtist] = useState([]);\n  const [updateTime, setUpdateTime] = useState(0);\n  const handleGetArtist = async () => {\n    try {\n      const { list } = await apiToplistArtist(type);\n      setArtist(list.artists);\n      setUpdateTime(list.updateTime);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    handleGetArtist();\n  }, [type]);\n  const top3 = artist.slice(0, 3);\n  const other = artist.slice(3);\n  return (\n    <div className=\"domtoplistartist flex flex-col h-full\">\n      <div className=\"domtoplistartist_header border-b px-8 pt-5 pb-2.5\">\n        <div className=\"domtoplistartist_title h1\">云音乐歌手榜</div>\n        <div className=\"flex items-baseline justify-between mt-6\">\n          <div className=\"domtoplistartist_nav flex space-x-6\">\n            {navs.map(([name, link]) => (\n              <NavLink\n                key={name}\n                className={({ isActive }) =>\n                  classNames(\"text-sm\", isActive && \"font-bold\")\n                }\n                to={link}\n              >\n                {name}\n              </NavLink>\n            ))}\n          </div>\n          <div className=\"text-gray-400\">\n            更新时间：\n            {dayjs(updateTime).format(\"MM月DD日\")}\n          </div>\n        </div>\n      </div>\n      <div className=\"overflow-auto h-full pb-10\">\n        <div className=\"domtoplistartist_top3_list py-5 px-8 grid grid-cols-3 gap-x-5\">\n          {top3.map((item, index) => (\n            <Link\n              className=\"domtoplistartist_top3_link rounded-lg overflow-hidden bg-gray-50 hover:bg-gray-100 flex relative\"\n              to={`/artist/${item.id}`}\n              key={item.id}\n              style={{ height: 100 }}\n            >\n              <div className=\"absolute text-red-300 text-4xl\">{index + 1}</div>\n              <div className=\"flex-auto flex flex-col justify-center pl-8\">\n                <div className=\"text-sm\">{item.name}</div>\n                <div className=\"score text-gray-400 mt-2\">\n                  热度：\n                  {item.score}\n                </div>\n              </div>\n              <div className=\"cover border\">\n                <img src={`${item.picUrl}?param=100y100`} alt=\"\" />\n              </div>\n            </Link>\n          ))}\n        </div>\n        <div className=\"domtoplistartist_other_list\">\n          {other.map((item, index) => (\n            <Link\n              className={classNames(\n                \"domtoplistartist_other_link flex items-center h-20 hover:bg-gray-100\",\n                { \"bg-gray-50\": index % 2 === 0 }\n              )}\n              to={`/artist/${item.id}`}\n              key={item.id}\n            >\n              <div className=\"index flex flex-col items-center justify-center w-16 text-gray-400\">\n                <div className=\"text-sm\">{index + 4}</div>\n                <div>\n                  {item.lastRank === index + 3 && \"-0\"}\n                  {item.lastRank > index + 3 && (\n                    <div>\n                      <span className=\"text-red-500\">↑</span>\n                      {item.lastRank - index - 3}\n                    </div>\n                  )}\n                  {item.lastRank < index + 3 && (\n                    <div>\n                      <span className=\"text-blue-500\">↓</span>\n                      {index + 3 - item.lastRank}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"cover rounded overflow-hidden\">\n                <img src={`${item.picUrl}?param=100y100`} alt=\"\" />\n              </div>\n              <div className=\"name flex-auto text-sm pl-2\">{item.name}</div>\n              <div className=\"score text-gray-400 w-32\">\n                热度：\n                {item.score}\n              </div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport ArtistTopList from \"./ArtistTopList\";\n// 找不到入口了\nconst Router = () => {\n  return (\n    <Routes>\n      <Route index element={<ArtistTopList />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["navs","memo","type","useState","artist","setArtist","updateTime","setUpdateTime","handleGetArtist","apiToplistArtist","list","artists","console","log","useEffect","top3","slice","other","className","map","name","link","NavLink","key","isActive","classNames","to","dayjs","format","item","index","Link","id","style","height","score","src","picUrl","alt","lastRank","Routes","Route","element","ArtistTopList"],"sourceRoot":""}