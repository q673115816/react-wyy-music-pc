{"version":3,"file":"js/Exclusive.js?version=3bfc3f1a","mappings":"yMAgBA,SAAeA,EAAAA,EAAAA,OAAK,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,KACaC,GAAAA,EAAAA,EAAAA,IAAe,SAAQ,GAAWC,OAAP,EAATA,aAAxCC,EAAsBF,EAAtBE,OACFC,GADwBH,EAAdI,WACDC,EAAAA,EAAAA,QAAO,IAKhBC,GAAYD,EAAAA,EAAAA,QAAuB,MACnCE,GAAcF,EAAAA,EAAAA,QAAuB,MAG3C,OAFAG,EAAAA,EAAAA,IANmB,WACjBV,GAASW,EAAAA,EAAAA,eAAc,CAAEC,MAPf,GAOsBP,OAAQA,EAAOQ,WAC/CR,EAAOQ,SARG,KAYYL,EAAWC,GAE7B,kBACHK,MAAG,CAACC,UAAU,2BAA2BC,IAAKR,G,kBAC5CM,MAAG,CAACC,UAAU,Y,kBACZD,MAAG,CAACC,UAAU,WAAU,QAAI,sBAC5BE,CACCF,UAAU,aACVG,MAAM,cACNC,IAAI,eAEHf,EAAOgB,KAAI,SAACC,GACX,OAAM,kBAALP,MAAG,CAACQ,IAAKD,EAAKE,Q,kBACZC,EAAAA,KAAI,CACHC,GACEJ,EAAKK,QACA,iBAA6B,OAAbL,EAAKK,SACrB,cAAqB,OAARL,EAAKM,IAEzBZ,UAAU,gD,kBAETa,MAAG,CACFC,QAAS,OACTC,IAAKT,EAAKE,OACVR,UAAU,kDACVgB,IAAI,K,kBAELC,OAAI,CAACjB,UAAU,uH,kBACbkB,EAAAA,eAAc,CAACC,KAAM,GAAInB,UAAU,mB,kBAGvCD,MAAG,CAACC,UAAU,Q,kBACZS,EAAAA,KAAI,CACHC,GAAK,cAAqB,OAARJ,EAAKM,IACvBZ,UAAU,+BAETM,EAAKc,W,kBAKbrB,MAAG,CAACE,IAAKP,UCxDpB,EARe,WACb,OAAM,kBACH2B,EAAAA,OAAM,uBACJC,EAAAA,MAAK,CAACC,OAAAA,EAAMC,QAAO,kBAAGC,EAAS","sources":["webpack://wyy/./src/features/Exclusive/Exclusive.tsx","webpack://wyy/./src/features/Exclusive/Router.tsx"],"sourcesContent":["import React, { memo, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IconPlayerPlay } from \"@tabler/icons\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport { useAppDispatch, useAppSelector } from \"@/modules/hooks\";\nimport {\n  ResultProps,\n  setExclusiveResultAdd,\n  setExclusiveResultEmpty,\n  setExclusiveScrollTop,\n  handleGetData,\n} from \"@/modules/reducers/exclusive/slice\";\nimport ResizeObserver from \"@/components/ResizeObserver\";\n\nconst limit = 60;\n\nexport default memo(function Exclusive() {\n  const dispatch = useAppDispatch();\n  const { result, scrollTop } = useAppSelector(({ exclusive }) => exclusive);\n  const offset = useRef(0);\n  const handleInit = () => {\n    dispatch(handleGetData({ limit, offset: offset.current }));\n    offset.current += limit;\n  };\n  const DomScroll = useRef<HTMLDivElement>(null);\n  const DomObserver = useRef<HTMLDivElement>(null);\n  useInfinite(handleInit, DomScroll, DomObserver);\n\n  return (\n    <div className=\"overflow-auto p-8 h-full\" ref={DomScroll}>\n      <div className=\"ui_w1100\">\n        <div className=\"h1 pb-4\">独家放送</div>\n        <ResizeObserver\n          className=\"grid gap-5\"\n          small=\"grid-cols-2\"\n          big=\"grid-cols-3\"\n        >\n          {result.map((item: ResultProps) => (\n            <div key={item.picUrl}>\n              <Link\n                to={\n                  item.videoId\n                    ? `/player/video/${item.videoId}`\n                    : `/player/mv/${item.id}`\n                }\n                className=\"flex relative rounded border overflow-hidden\"\n              >\n                <img\n                  loading={\"lazy\"}\n                  src={item.picUrl}\n                  className=\"w-full h-full object-cover ui_aspect-ratio-24/9\"\n                  alt=\"\"\n                />\n                <span className=\"ico absolute top-2 left-2 rounded-full text-white w-6 h-6 bg-black bg-opacity-40 flex-center border border-gray-200\">\n                  <IconPlayerPlay size={14} className=\"fill-current\" />\n                </span>\n              </Link>\n              <div className=\"mt-2\">\n                <Link\n                  to={`/player/mv/${item.id}`}\n                  className=\"text-sm ui_text_black_hover\"\n                >\n                  {item.name}\n                </Link>\n              </div>\n            </div>\n          ))}\n          <div ref={DomObserver} />\n        </ResizeObserver>\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Exclusive from \"./Exclusive\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route index element={<Exclusive />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["memo","dispatch","useAppDispatch","useAppSelector","exclusive","result","offset","scrollTop","useRef","DomScroll","DomObserver","useInfinite","handleGetData","limit","current","div","className","ref","ResizeObserver","small","big","map","item","key","picUrl","Link","to","videoId","id","img","loading","src","alt","span","IconPlayerPlay","size","name","Routes","Route","index","element","Exclusive"],"sourceRoot":""}