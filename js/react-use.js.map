{"version":3,"file":"js/react-use.js?version=84d80bf9","mappings":"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","sources":["webpack://wyy/./node_modules/react-use/esm/useSetState.js","webpack://wyy/./node_modules/react-use/esm/useCopyToClipboard.js","webpack://wyy/./node_modules/react-use/esm/useMountedState.js","webpack://wyy/./node_modules/react-use/esm/misc/util.js","webpack://wyy/./node_modules/react-use/esm/useLocalStorage.js","webpack://wyy/./node_modules/react-use/esm/useToggle.js"],"sourcesContent":["import { useCallback, useState } from 'react';\nvar useSetState = function (initialState) {\n    if (initialState === void 0) { initialState = {}; }\n    var _a = useState(initialState), state = _a[0], set = _a[1];\n    var setState = useCallback(function (patch) {\n        set(function (prevState) {\n            return Object.assign({}, prevState, patch instanceof Function ? patch(prevState) : patch);\n        });\n    }, []);\n    return [state, setState];\n};\nexport default useSetState;\n","import writeText from 'copy-to-clipboard';\nimport { useCallback } from 'react';\nimport useMountedState from './useMountedState';\nimport useSetState from './useSetState';\nvar useCopyToClipboard = function () {\n    var isMounted = useMountedState();\n    var _a = useSetState({\n        value: undefined,\n        error: undefined,\n        noUserInteraction: true,\n    }), state = _a[0], setState = _a[1];\n    var copyToClipboard = useCallback(function (value) {\n        if (!isMounted()) {\n            return;\n        }\n        var noUserInteraction;\n        var normalizedValue;\n        try {\n            // only strings and numbers casted to strings can be copied to clipboard\n            if (typeof value !== 'string' && typeof value !== 'number') {\n                var error = new Error(\"Cannot copy typeof \" + typeof value + \" to clipboard, must be a string\");\n                if (process.env.NODE_ENV === 'development')\n                    console.error(error);\n                setState({\n                    value: value,\n                    error: error,\n                    noUserInteraction: true,\n                });\n                return;\n            }\n            // empty strings are also considered invalid\n            else if (value === '') {\n                var error = new Error(\"Cannot copy empty string to clipboard.\");\n                if (process.env.NODE_ENV === 'development')\n                    console.error(error);\n                setState({\n                    value: value,\n                    error: error,\n                    noUserInteraction: true,\n                });\n                return;\n            }\n            normalizedValue = value.toString();\n            noUserInteraction = writeText(normalizedValue);\n            setState({\n                value: normalizedValue,\n                error: undefined,\n                noUserInteraction: noUserInteraction,\n            });\n        }\n        catch (error) {\n            setState({\n                value: normalizedValue,\n                error: error,\n                noUserInteraction: noUserInteraction,\n            });\n        }\n    }, []);\n    return [state, copyToClipboard];\n};\nexport default useCopyToClipboard;\n","import { useCallback, useEffect, useRef } from 'react';\nexport default function useMountedState() {\n    var mountedRef = useRef(false);\n    var get = useCallback(function () { return mountedRef.current; }, []);\n    useEffect(function () {\n        mountedRef.current = true;\n        return function () {\n            mountedRef.current = false;\n        };\n    }, []);\n    return get;\n}\n","export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useCallback, useState, useRef, useLayoutEffect } from 'react';\nimport { isBrowser, noop } from './misc/util';\nvar useLocalStorage = function (key, initialValue, options) {\n    if (!isBrowser) {\n        return [initialValue, noop, noop];\n    }\n    if (!key) {\n        throw new Error('useLocalStorage key may not be falsy');\n    }\n    var deserializer = options\n        ? options.raw\n            ? function (value) { return value; }\n            : options.deserializer\n        : JSON.parse;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var initializer = useRef(function (key) {\n        try {\n            var serializer = options ? (options.raw ? String : options.serializer) : JSON.stringify;\n            var localStorageValue = localStorage.getItem(key);\n            if (localStorageValue !== null) {\n                return deserializer(localStorageValue);\n            }\n            else {\n                initialValue && localStorage.setItem(key, serializer(initialValue));\n                return initialValue;\n            }\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. JSON.parse and JSON.stringify\n            // can throw, too.\n            return initialValue;\n        }\n    });\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var _a = useState(function () { return initializer.current(key); }), state = _a[0], setState = _a[1];\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(function () { return setState(initializer.current(key)); }, [key]);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var set = useCallback(function (valOrFunc) {\n        try {\n            var newState = typeof valOrFunc === 'function' ? valOrFunc(state) : valOrFunc;\n            if (typeof newState === 'undefined')\n                return;\n            var value = void 0;\n            if (options)\n                if (options.raw)\n                    if (typeof newState === 'string')\n                        value = newState;\n                    else\n                        value = JSON.stringify(newState);\n                else if (options.serializer)\n                    value = options.serializer(newState);\n                else\n                    value = JSON.stringify(newState);\n            else\n                value = JSON.stringify(newState);\n            localStorage.setItem(key, value);\n            setState(deserializer(value));\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. Also JSON.stringify can throw.\n        }\n    }, [key, setState]);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var remove = useCallback(function () {\n        try {\n            localStorage.removeItem(key);\n            setState(undefined);\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw.\n        }\n    }, [key, setState]);\n    return [state, set, remove];\n};\nexport default useLocalStorage;\n","import { useReducer } from 'react';\nvar toggleReducer = function (state, nextValue) {\n    return typeof nextValue === 'boolean' ? nextValue : !state;\n};\nvar useToggle = function (initialValue) {\n    return useReducer(toggleReducer, initialValue);\n};\nexport default useToggle;\n"],"names":["mountedRef","get","isMounted","useRef","useCallback","current","useEffect","_a","initialState","useState","state","set","patch","prevState","Object","assign","Function","value","undefined","error","noUserInteraction","setState","normalizedValue","Error","toString","noop","isBrowser","window","key","initialValue","options","deserializer","raw","JSON","parse","initializer","serializer","String","stringify","localStorageValue","localStorage","getItem","setItem","useLayoutEffect","valOrFunc","newState","remove","removeItem","toggleReducer","nextValue","useReducer"],"sourceRoot":""}