{"version":3,"file":"js/Message.js?version=2f57947b","mappings":"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","sources":["webpack://wyy/./src/features/Message/Download.tsx","webpack://wyy/./src/features/Message/Local.tsx","webpack://wyy/./src/features/Message/Config.ts","webpack://wyy/./src/features/Message/Message.tsx","webpack://wyy/./src/features/Message/Router.tsx"],"sourcesContent":["import React, { useState, memo, useCallback } from \"react\";\nimport classNames from \"classnames\";\n\nconst nav = [\"已下载单曲\", \"已下载电台节目\", \"已下载MV\", \"正在下载\"];\n\nexport default memo(function Download() {\n  console.log(\"download\");\n  const [visibility, setVisibility] = useState(false);\n  const [current, setCurrent] = useState(\"已下载单曲\");\n  const handleToggleVisibility = useCallback(() => {\n    setVisibility(!visibility);\n  }, []);\n  return (\n    <div className=\"domManage\">\n      <div className=\"domManage_main\">\n        <div className=\"domManage_nav\">\n          {nav.map((item) => (\n            <button\n              onClick={() => setCurrent(item)}\n              key={item}\n              className={classNames(\"domManage_nav_link\", {\n                on: item === current,\n              })}\n              type=\"button\"\n            >\n              {item}\n            </button>\n          ))}\n        </div>\n        <div className=\"domManage_list overflow-auto max-h-full flex-auto\" />\n        {visibility && (\n          <div className=\"domManage_dialog\">\n            <button\n              type=\"button\"\n              className=\"close\"\n              onClick={handleToggleVisibility}\n            >\n              ×\n            </button>\n            <div className=\"title\">选择本地音乐文件夹</div>\n            <div className=\"tips\">\n              将自动扫描您勾选的目录，文件增删实时同步。\n            </div>\n            <ul>\n              <li>\n                <span className=\"checkbox\">\n                  <input type=\"text\" />\n                  <i className=\"material-icons\">checkbox</i>\n                </span>\n                暂时没法做\n              </li>\n            </ul>\n            <div className=\"actions\">\n              <button\n                type=\"button\"\n                className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full red\"\n              >\n                确认\n              </button>\n              <button\n                type=\"button\"\n                className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full\"\n              >\n                添加文件\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n});\n","import React, { useCallback, useState, memo } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"@/modules/hooks\";\nimport classNames from \"classnames\";\nimport { setLocalCurrent } from \"@/modules/reducers/local/slice\";\n\nconst nav = [\"歌曲\", \"歌手\", \"专辑\", \"文件夹\"];\n\nconst Local = () => {\n  const dispatch = useAppDispatch();\n  const [visibility, setVisibility] = useState(false);\n  const { current } = useAppSelector(({ local }) => local);\n  const handleToggleVisibility = useCallback(() => {\n    setVisibility(!visibility);\n  }, [visibility]);\n  return (\n    <div className=\"domManage\">\n      <div className=\"domManage_header ui_header\">\n        <span className=\"domManage_header_title h1\">本地音乐</span>\n        <span className=\"domManage_header_total\">共0首</span>\n        <button\n          type=\"button\"\n          className=\"domManage_header_selectFolder\"\n          onClick={handleToggleVisibility}\n        >\n          选择目录\n        </button>\n      </div>\n      <div className=\"domManage_main\">\n        <div className=\"domManage_nav\">\n          {nav.map((item) => (\n            <button\n              onClick={() => dispatch(setLocalCurrent({ current: item }))}\n              key={item}\n              className={classNames(\n                \"domManage_nav_link focus:outline-none\",\n                item === current && \"ui_underline font-bold\"\n              )}\n              type=\"button\"\n            >\n              {item}\n            </button>\n          ))}\n        </div>\n        <div className=\"domManage_noFolder\">\n          <div className=\"domManage_noFolder_title\">请添加本地文件夹</div>\n          <div className=\"domManage_noFolder_tips\">\n            升级本地音乐为高品质音乐并和好友分享！\n          </div>\n          <button\n            type=\"button\"\n            className=\"domManage_noFolder_button\"\n            onClick={handleToggleVisibility}\n          >\n            选择本地音乐文件夹\n          </button>\n        </div>\n        <div\n          className=\"domManage_dialog\"\n          style={{ display: visibility ? \"\" : \"none\" }}\n        >\n          <button\n            type=\"button\"\n            className=\"close\"\n            onClick={handleToggleVisibility}\n          >\n            ×\n          </button>\n          <div className=\"title\">选择本地音乐文件夹</div>\n          <div className=\"tips\">将自动扫描您勾选的目录，文件增删实时同步。</div>\n          <ul>\n            <li>\n              <span className=\"checkbox\">\n                <input type=\"text\" />\n                <i className=\"material-icons\">checkbox</i>\n              </span>\n              暂时没法做\n            </li>\n          </ul>\n          <div className=\"actions\">\n            <button\n              type=\"button\"\n              className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full red\"\n            >\n              确认\n            </button>\n            <button\n              type=\"button\"\n              className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full\"\n            >\n              添加文件\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Local);\n","import { FC } from \"react\";\nimport Download from \"./Download\";\nimport Local from \"./Local\";\ninterface Nav {\n  name: string;\n  path: string;\n  Element: FC;\n}\n\nexport const navs: Nav[] = [\n  {\n    name: \"下载管理\",\n    path: \"download\",\n    Element: Download,\n  },\n  {\n    name: \"本地音乐\",\n    path: \"local\",\n    Element: Local,\n  },\n];\n","import React, { memo } from \"react\";\nimport { NavLink, Outlet } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { navs } from \"./Config\";\nconst Message = () => {\n  return (\n    <div>\n      <div className=\"px-8 py-5 space-x-4 text-base\">\n        {navs.map(({ path, name }) => (\n          <NavLink\n            key={path}\n            to={path}\n            className={({ isActive }) =>\n              classNames(isActive && \"text-xl font-black ui_underline\")\n            }\n          >\n            {name}\n          </NavLink>\n        ))}\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default memo(Message);\n","import React, { FC } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport Message from \"./Message\";\nimport { navs } from \"./Config\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route element={<Message />}>\n        {navs.map(({ path, Element }) => (\n          <Route path={path} key={path} element={<Element />} />\n        ))}\n        <Route path=\"*\" element={<Navigate to={\"download\"} />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["nav","memo","console","log","useState","visibility","setVisibility","current","setCurrent","handleToggleVisibility","useCallback","div","className","map","item","button","onClick","key","classNames","on","type","input","i","Local","dispatch","useAppDispatch","useAppSelector","local","span","setLocalCurrent","style","display","navs","name","path","Element","Download","Message","NavLink","to","isActive","Outlet","Routes","Route","element","Navigate"],"sourceRoot":""}