{"version":3,"file":"js/Comment.js?version=6ab58d64","mappings":"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","sources":["webpack://wyy/./src/features/Comment/Hot.tsx","webpack://wyy/./src/features/Comment/Comment.tsx","webpack://wyy/./src/features/Comment/Router.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, memo } from \"react\";\nimport { apiCommentHot, apiCommentLike } from \"@/api\";\nimport Comment from \"@/components/Comments/Comment\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport Loading from \"@/components/Loading\";\nimport produce from \"immer\";\nimport { useParams } from \"react-router-dom\";\n\nexport default memo(function Hot() {\n  const { id } = useParams();\n  const [data, setData] = useState([]);\n  const refHasMore = useRef(true);\n  const offset = useRef(0);\n  const domObserver = useRef(null);\n  const domScroll = useRef(null);\n  const limit = 20;\n\n  const handleLike = async (cid, t) => {\n    try {\n      const { code } = await apiCommentLike({\n        id,\n        cid,\n        t: t ? 0 : 1,\n        type: 0,\n      });\n      if (code === 200) {\n        setData(\n          produce((draft) => {\n            draft.forEach((item) => {\n              if (item.commentId === cid) {\n                item.liked = !t;\n                item.likedCount += t ? -1 : 1;\n              }\n            });\n          })\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleInit = async () => {\n    if (!refHasMore.current) return false;\n    try {\n      const { hotComments, hasMore } = await apiCommentHot({\n        id,\n        type: 0,\n        limit,\n        offset: offset.current,\n      });\n      refHasMore.current = hasMore;\n\n      offset.current += limit;\n      // const a = [...data, ...hotComments];\n      // console.log(data.concat(hotComments));\n      setData((data) => [...data, ...hotComments]);\n      // console.log(data); data 只能拿到空数组\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useInfinite(handleInit, domScroll, domObserver);\n\n  // if (loading) return <div>loading</div>;\n  return (\n    <div\n      className=\"domComment px-8 py-5 overflow-auto max-h-full flex-auto\"\n      ref={domScroll}\n    >\n      <div className=\"h1\">精彩评论</div>\n      <div className=\"domComment_list\">\n        {data.map((item) => (\n          <Comment\n            item={item}\n            // handleLike={handleLike}\n            key={item.commentId}\n          />\n        ))}\n        {refHasMore.current && (\n          <div className=\"flex justify-center py-4\">\n            <Loading />\n          </div>\n        )}\n        <div ref={domObserver} />\n      </div>\n    </div>\n  );\n});\n","import React, { memo, useEffect, useState, useMemo, useCallback } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { IconPlayerPlay, IconMoodSmile, IconAt, IconHash } from \"@tabler/icons\";\nimport {\n  apiCommentMusic,\n  apiSongDetail,\n  apiCommentMV,\n  apiMVDetail,\n  apiCommentVideo,\n  apiVideoDetail,\n} from \"@/api\";\nimport { commentLimit as limit } from \"@/common/config\";\nimport Write from \"@/components/Write\";\nimport DomCommentsList from \"@/components/Comments/CommentsList\";\nimport DomLoading from \"@/components/Loading\";\nimport DomPage from \"@/components/Page\";\n\nconst SongHeader = ({ detail }) => (\n  <div className=\"domComment_header\">\n    <div className=\"domComment_infos flex \">\n      <div className=\"cover h-20 rounded overflow-hidden relative\">\n        <img\n          loading={\"lazy\"}\n          className=\"h-full\"\n          src={detail.al.picUrl}\n          alt=\"\"\n        />\n        <div className=\"ico absolute inset-0 m-auto flex-center w-8 h-8 ui_themeColor rounded-full bg-white bg-opacity-90\">\n          <IconPlayerPlay size={16} className=\"fill-current\" />\n        </div>\n      </div>\n      <div className=\"content px-6 py-2\">\n        <div className=\"title text-lg\">{detail.name}</div>\n        <div className=\"info text-gray-500 mt-2 space-x-5\">\n          <span>\n            专辑：\n            <Link\n              className=\"ui_text_gray_hover\"\n              to={`/playlist/album/${detail.al.id}`}\n            >\n              {detail.al?.name}\n            </Link>\n          </span>\n          <span>\n            歌手：\n            {detail.ar.map((item, index) => (\n              <span key={item.id}>\n                {index > 0 && \" / \"}\n                <Link className=\"ui_text_gray_hover\" to={`/artist/${item.id}`}>\n                  {item.name}\n                </Link>\n              </span>\n            ))}\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nconst switchs = {\n  song: {\n    apiDetail: ({ id }) => apiSongDetail({ ids: id }),\n    apiComment: apiCommentMusic,\n    header: SongHeader,\n  },\n  mv: {\n    apiDetail: apiMVDetail,\n    apiComment: apiCommentMV,\n    header: () => <div />,\n  },\n  video: {\n    apiDetail: apiVideoDetail,\n    apiComment: apiCommentVideo,\n    header: () => <div />,\n  },\n};\n\nexport default memo(function Comment() {\n  console.log(\"comment\");\n  const { id, type } = useParams();\n  const [detail, setDetail] = useState({});\n  const [comments, setComments] = useState({});\n  const [value, setValue] = useState(\"\");\n  const [loading, SetLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const handleDetailInit = async () => {\n    try {\n      const { songs } = await switchs[type].apiDetail({\n        id,\n      });\n      setDetail(songs[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = useCallback((e) => {\n    setValue(e.target.value);\n  }, []);\n\n  const handleCommentsInit = async () => {\n    try {\n      const comments = await switchs[type].apiComment({\n        id,\n        offset: (page - 1) * 20,\n        limit,\n      });\n      setComments(comments);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleInit = async () => {\n    await handleDetailInit();\n    await handleCommentsInit();\n    SetLoading(false);\n  };\n\n  const MemoHeader = useMemo(() => switchs[type].header, [type]);\n\n  useEffect(() => {\n    if (loading) {\n      handleInit();\n    } else {\n      handleCommentsInit();\n    }\n  }, [page]);\n\n  if (loading)\n    return (\n      <div className=\"w-full h-full flex-center\">\n        <DomLoading />\n      </div>\n    );\n  return (\n    <div className=\"domComment overflow-auto px-8 py-5 h-full\">\n      <MemoHeader detail={detail} />\n      <div className=\"domComment_write mt-4\">\n        <Write onChange={handleChange} max={140} />\n        <div className=\"domComment_write_actions flex mt-2.5\">\n          <div className=\"flex space-x-2\">\n            <button type=\"button\" className=\"text-gray-500 hover:text-black\">\n              <IconMoodSmile size={20} stroke={1.5} />\n            </button>\n            <button type=\"button\" className=\"text-gray-500 hover:text-black\">\n              <IconAt size={20} stroke={1.5} />\n            </button>\n            <button type=\"button\" className=\"text-gray-500 hover:text-black\">\n              <IconHash size={20} stroke={1.5} />\n            </button>\n          </div>\n          <button\n            type=\"button\"\n            className=\"ui_btn flex-center border px-4 h-8 text-sm hover:bg-gray-100 rounded-full ml-auto\"\n          >\n            评论\n          </button>\n        </div>\n      </div>\n      <div className=\"domComment_main mt-8\">\n        <DomCommentsList comments={comments} more={id} type={type} />\n        <DomPage\n          total={Math.ceil(comments.total / limit)}\n          page={page}\n          func={setPage}\n        />\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Hot from \"./Hot\";\nimport Comment from \"./Comment\";\n\nconst Router = () => {\n  return (\n    <Routes>\n      <Route path={`:type/:id`}>\n        <Route index element={<Comment />} />\n        <Route path=\"hot\" element={<Hot />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["memo","id","useParams","useState","data","setData","refHasMore","useRef","offset","domObserver","domScroll","handleInit","current","apiCommentHot","type","limit","hotComments","hasMore","console","log","useInfinite","className","ref","map","item","Comment","key","commentId","Loading","switchs","song","apiDetail","apiSongDetail","ids","apiComment","apiCommentMusic","header","detail","loading","src","al","picUrl","alt","IconPlayerPlay","size","name","Link","to","ar","index","mv","apiMVDetail","apiCommentMV","video","apiVideoDetail","apiCommentVideo","setDetail","comments","setComments","setValue","SetLoading","page","setPage","handleDetailInit","songs","handleChange","useCallback","e","target","value","handleCommentsInit","MemoHeader","useMemo","useEffect","Write","onChange","max","IconMoodSmile","stroke","IconAt","IconHash","more","total","Math","ceil","func","Routes","Route","path","element","Hot"],"sourceRoot":""}