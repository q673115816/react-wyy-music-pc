{"version":3,"file":"js/Search.js?version=0fe1ba37","mappings":"sRAMMA,EAAkB,SAAQ,G,QAALC,IAAAA,OAAG,IAAG,IAAC,EAChC,OAAM,kBAALC,MAAG,CAACC,UAAU,wC,kBACZD,MAAG,CAACC,UAAU,6BAA6BC,MAAO,CAAEC,MAAQ,GAAM,OAAJJ,EAAI,UAIvE,SAAeK,EAAAA,EAAAA,MAAKN,GCIpB,IA8DMO,EAAoB,SAAQ,G,QAALC,MAAAA,OAAK,IAAG,KAAE,EASrC,OAAM,sDASDN,MAAG,CACFC,UAAU,aACVC,MAAO,CACL,qBAAsB,8C,kBAGvBF,MAAG,CAACC,UAAU,S,kBACZD,MAAG,CAACC,UAAU,yD,kBACZD,MAAG,CAACC,UAAU,U,kBACdD,MAAG,CAACC,UAAU,U,kBACdD,MAAG,CAACC,UAAU,a,kBACdD,MAAG,CAACC,UAAU,uBAAsB,QAAI,yBACpCA,UAAU,yBAAwB,MAAE,wBACrC,CAACA,UAAU,wBAAuB,MAAE,wBACpC,CAACA,UAAU,2BAA0B,MAAE,wBACvC,CAACA,UAAU,sBAAqB,QAAE,wBAGtC,CAACA,UAAU,SACZK,EAAMC,KAAI,SAACC,EAAMC,GAChB,OAAM,kBAALC,EAAAA,EAAU,CACTC,OAAQ,CACN,CAAC,KAAU,KAAU,SACH,CAAjB,QAAmB,KAAU,OAAgB,OAE1BH,KAAMA,EACNI,KAAK,OACLC,IAAKL,EAAKM,I,kBAETd,MAAG,CACFe,SAAU,EACVd,UAAWe,GAAAA,CACT,iGACA,CAAE,aAAcP,EAAQ,GAAM,K,kBAG/BT,MAAG,CAACC,UAAU,c,kBACZgB,EAAAA,EAAI,CAACR,MAAOA,EAAOK,GAAIN,EAAKM,M,kBAE9Bd,MAAG,CAACC,UAAU,qB,kBACZiB,EAAAA,EAAK,CAACJ,GAAIN,EAAKM,M,kBAEjBd,MAAG,CAACC,UAAU,wB,kBACZkB,EAAAA,EAAQ,yBAEVnB,MAAG,CAACC,UAAU,a,kBACZmB,EAAAA,EAAI,CAACZ,KAAMA,K,kBAEbR,MAAG,CAACC,UAAU,gD,kBACZoB,EAAAA,EAAO,CAACC,QAASd,EAAKe,M,kBAExBvB,MAAG,CAACC,UAAU,iC,kBACZuB,EAAAA,EAAK,CAACC,KAAMjB,EAAKkB,GAAGD,KAAMX,GAAIN,EAAKkB,GAAGD,Q,kBAExCzB,MAAG,CAACC,UAAU,kDACZ0B,GAAAA,CAAMnB,EAAKoB,IAAIC,OAAO,UAAO,kBAE/B7B,MAAG,CAACC,UAAU,O,kBACZH,EAAG,CAACC,IAAKS,EAAKT,gBAWjC,SAAeK,EAAAA,EAAAA,MAAKC,GChK1C,IAAMyB,EAAU,CACd,0BAA2B,wBCFvBA,EAAU,CACd,0BAA2B,gB,UCEvBC,EAAqB,SAAQ,G,QAALC,OACtBC,QAD4B,IAAG,KAAE,GACnB1B,KAClB,SAAQ,G,IAALK,EAAI,EAAJA,KAAMsB,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAA+B,MAAC,CAClEvB,GAD8C,EAAHwB,IAE3C1B,KAAAA,EACAsB,MAAAA,EACAG,QAAAA,EACAE,UAAWH,EACXI,SAN0D,EAAVC,WAOhDC,MAAOP,MAGX,OAAM,kBACHnC,MAAG,CAACC,UAAU,0B,kBACZ0C,EAAAA,EAAS,CAACV,KAAMA,MAKvB,SAAe7B,EAAAA,EAAAA,MAAK2B,GCtBpB,IAAMD,EAAU,CACd,0BAA2B,oB,0GCHd,WAAQ,G,YAALc,OAAAA,OAAM,IAAG,KAAE,EACrBC,GAAUC,EAAAA,EAAAA,UACYC,G,GAAAA,EAAAA,EAAAA,WAAS,G,EAAK,E,+zBAAnCC,EAAqBD,EAAe,GAA5BE,EAAaF,EAAe,IAC3CG,EAAAA,EAAAA,YAAU,WACRL,EAAQM,QAAUP,EAAOQ,KAAK,MAAMC,QAAQ,cAAe,MAC1D,CAACT,IACJ,IAAMU,EAAa,WACjB,IAAMC,EAAQC,SAASC,cAAc,YACrCF,EAAMG,aAAa,WAAY,YAC/BH,EAAMI,YAAcd,EAAQM,QAC5BK,SAASI,KAAKC,YAAYN,GAC1BA,EAAMO,SACFN,SAASO,YAAY,UACvBP,SAASO,YAAY,QACrBC,QAAQC,IAAI,SAEdT,SAASI,KAAKM,YAAYX,IAE5B,OAAM,kBACHvD,MAAG,CAACC,UAAU,iB,kBACZD,MAAG,CAACC,UAAU,oCACZ2C,EAAOuB,MAAM,EAAGnB,EAASoB,EAAAA,EAAW,GAAG7D,KAAI,SAAC8D,EAAK5D,GAChD,OAAM,kBAALT,MAAG,CAACa,IAAKwD,EAAM5D,EAAO6D,wBAAyB,CAAEC,OAAQF,S,kBAG7DrE,MAAG,CAACC,UAAU,+C,kBACZD,MAAG,CAACC,UAAU,oB,kBACZuE,SAAM,CACL5D,KAAK,SACLX,UAAU,6EACVwE,QAAS,WAAMxB,OAAAA,GAAWD,KAEzBA,EAAS,KAAI,KAAW,MAEnB,4BAENpC,KAAK,SACLX,UAAU,kFACVwE,QAASnB,GACV,SAED,GAEK,yBACArD,UAAU,oB,kBACZuE,SAAM,CACL5D,KAAK,SACLX,UAAU,6EACVwE,QAAS,WAAMxB,OAAAA,GAAU,KAC1B,QAED,2BACO,CACLrC,KAAK,SACLX,UAAU,kFACVwE,QAASnB,GACV,WCtDb,IAAMxB,EAAU,CACd,0BAA2B,gBAGvB4C,EAAW,SAAQ,G,QAALC,SAAAA,OAAQ,IAAG,KAAE,EAC/B,OAAM,kBAAL3E,MAAG,CAACC,UAAU,sBAAsBC,MAAO4B,GACzC6C,EAASpE,KAAI,SAACC,EAAMC,GACnB,OACJ,kBADKT,MAAG,CACFC,UAAWe,GAAAA,CAAW,2CAA4C,CAChE,aAAcP,EAAQ,GAAM,IAE9BI,IAAKL,EAAKM,I,kBAET8D,EAAAA,KAAI,CAACC,GAAK,gBAAuB,OAARrE,EAAKM,IAAMb,UAAU,S,kBAC5C6E,MAAG,CAAC7E,UAAU,GAAG8E,IAAM,GAAc,OAAZvE,EAAKwE,OAAO,gBAAeC,IAAI,M,kBAE1DjF,MAAG,CAACC,UAAU,Q,kBACZ2E,EAAAA,KAAI,CAACC,GAAK,gBAAuB,OAARrE,EAAKM,IAAMb,UAAU,QAC5CO,EAAKiB,OAAI,kBAGbzB,MAAG,CAACC,UAAU,oBAAmB,OAEhC,kBAAC2E,EAAAA,KAAI,CAACC,GAAK,SAAuB,OAAfrE,EAAK0E,GAAGC,QAAUlF,UAAU,sBAC5CO,EAAK0E,GAAGE,iBAQrB,SAAehF,EAAAA,EAAAA,MAAKsE,G,cC/Bd5C,EAAU,CACd,0BAA2B,gBAGvBuD,EAAe,SAAQ,G,QAALC,aAAAA,OAAY,IAAG,KAAE,EACvC,OAAM,kBAALtF,MAAG,CAACC,UAAU,0BAA0BC,MAAO4B,GAC7CwD,EAAa/E,KAAI,SAACC,EAAMC,GACvB,OACL,kBADMmE,EAAAA,KAAI,CACHC,GAAK,SAAoB,OAAZrE,EAAK2E,QAClBlF,UAAWe,GAAAA,CAAW,2CAA4C,CAChE,aAAcP,EAAQ,GAAM,IAE9BI,IAAKL,EAAK2E,Q,kBAETnF,MAAG,CAACC,UAAU,gC,kBACZ6E,MAAG,CAACC,IAAM,GAAiB,OAAfvE,EAAK+E,UAAU,gBAAeN,IAAI,M,kBAEhDjF,MAAG,CAACC,UAAU,aACZO,EAAK4E,SAAS,IAEf,kBAACI,EAAAA,GAAS,CAACC,KAAM,GAAIC,OAAQlF,EAAKkF,U,kBAEnC1F,MAAG,CAACC,UAAU,mCAAmCO,EAAKmF,iBC8D/D,QA3DuB,CACrBC,GAAI,CACEC,KAAE,EACNC,KAAM,IACJC,MAAK,IACPC,KAAM3F,EACN4F,UAAW,aAEbC,GAAI,CACEL,KAAE,IACNC,KAAM,IACJC,MAAK,GACPC,KPjCW,SAAQ,G,QAAL1E,QAAAA,OAAO,IAAG,KAAE,EAC5B,OAAM,kBAALtB,MAAG,CAACC,UAAU,qBAAqBC,MAAO4B,GACxCR,EAAQf,KAAI,SAACC,EAAMC,GAClB,OACJ,kBADKT,MAAG,CACFC,UAAWe,GAAAA,CACT,oDACA,CAAE,aAAcP,EAAQ,GAAM,IAEhCI,IAAKL,EAAKM,I,kBAET8D,EAAAA,KAAI,CAACC,GAAK,WAAkB,OAARrE,EAAKM,IAAMb,UAAU,qB,kBACzCD,MAAG,CAACC,UAAU,S,kBACZ6E,MAAG,CAAC7E,UAAU,GAAG8E,IAAM,GAAiB,OAAfvE,EAAK2F,UAAU,gBAAelB,IAAI,M,kBAE7DjF,MAAG,CAACC,UAAU,uBACZO,EAAKiB,KACLjB,EAAK4F,MAAI,kBACPC,OAAI,CAACpG,UAAU,iBAAgB,IAAEO,MAAAA,OAAAA,EAAAA,EAAM8F,MAAM,GAAG,MAGpD9F,EAAK+F,WAAS,kBACZF,OAAI,CAACpG,UAAU,kE,kBACbuG,EAAAA,SAAQ,CAACf,KAAM,GAAIgB,OAAQ,WOYpCR,UAAW,eAEbS,GAAI,CACEb,KAAE,GACNC,KAAM,IACJC,MAAK,GACPC,KNzCW,SAAQ,G,QAALW,OAAAA,OAAM,IAAG,KAAE,EAC3B,OAAM,kBAAL3G,MAAG,CAACC,UAAU,oBAAoBC,MAAO4B,GACvC6E,EAAOpG,KAAI,SAACC,EAAMC,GACjB,OACJ,kBADKT,MAAG,CACFe,SAAS,IACTd,UAAWe,GAAAA,CACT,oDACA,CAAE,aAAcP,EAAQ,GAAM,IAEhCI,IAAKL,EAAKM,I,kBAET8D,EAAAA,KAAI,CACH3E,UAAU,uBACV4E,GAAK,mBAA0B,OAARrE,EAAKM,M,kBAE7Bd,MAAG,CAACC,UAAU,S,kBACZ6E,MAAG,CAACC,IAAM,GAAc,OAAZvE,EAAKwE,OAAO,gBAAeC,IAAI,M,kBAE7CjF,MAAG,CAACC,UAAU,qBACZO,EAAKiB,KACLjB,EAAK8F,MAAMM,OAAS,GAAC,kBACnBP,OAAI,CAACpG,UAAU,iBAAkB,IAAC,OAAe,EAARqG,MAAO,OAAI,wBAGrD,CAACrG,UAAU,mB,kBACZ2E,EAAAA,KAAI,CACHC,GAAK,WAAyB,OAAfrE,EAAKqG,OAAO/F,IAC3Bb,UAAU,oCAETO,EAAKqG,OAAOpF,KACZjB,EAAKqG,OAAOP,MAAMM,OAAS,GAAC,kBAC1BP,OAAI,CAACpG,UAAU,iBACZ,IAAC,OAAsB,EAAf4G,OAAOP,MAAO,cMUpCL,UAAW,cAEba,GAAI,CACEjB,KAAE,KACNC,KAAM,IACJC,MAAK,GACPC,KAAMjE,EACNkE,UAAW,cAEbc,GAAI,CACElB,KAAE,IACNC,KAAM,IACJC,MAAK,GACPC,KJvDW,SAAQ,G,QAALgB,UAAAA,OAAS,IAAG,KAAE,EAC9B,OAAM,kBAALhH,MAAG,CAACC,UAAU,uBAAuBC,MAAO4B,GAC1CkF,EAAUzG,KAAI,SAACC,EAAMC,GACpB,OACJ,kBADKT,MAAG,CACFC,UAAWe,GAAAA,CACT,oDACA,CAAE,aAAcP,EAAQ,GAAM,IAEhCI,IAAKL,EAAKM,I,kBAET8D,EAAAA,KAAI,CACH3E,UAAU,uBACV4E,GAAK,mBAA0B,OAARrE,EAAKM,M,kBAE7Bd,MAAG,CAACC,UAAU,S,kBACZ6E,MAAG,CAAC7E,UAAU,GAAG8E,IAAM,GAAmB,OAAjBvE,EAAKyG,YAAY,gBAAehC,IAAI,M,kBAE/DjF,MAAG,CAACC,UAAU,aAAaO,EAAKiB,MAAI,kBACpCzB,MAAG,CAACC,UAAU,4BAA4BO,EAAK0G,WAAW,KAAC,wBACxD,CAACjH,UAAU,yBAAwB,OAErC,kBAAC2E,EAAAA,KAAI,CACHC,GAAK,SAA4B,OAApBrE,EAAK6B,QAAQ8C,QAC1BlF,UAAU,qCAETO,EAAK6B,QAAQ+C,iBI+BtBa,UAAW,iBAEbkB,GAAI,CACEtB,KAAE,KACNC,KAAM,IACJC,MAAK,GACPC,KCzDW,SAAQ,G,IAAEpD,EAAW,EAAlBtC,MAAOsC,OAAW,IAAXA,EAAS,GAATA,EACvB,OACA,kBADC5C,MAAG,CACFC,UAAU,cACVC,MAAO,CACL,qBAAsB,8C,kBAGvBF,MAAG,CAACC,UAAU,S,kBACZD,MAAG,CAACC,UAAU,yD,kBACZD,MAAG,CAACC,UAAU,U,kBACdD,MAAG,CAACC,UAAU,U,kBACdD,MAAG,CAACC,UAAU,a,kBACdD,MAAG,CAACC,UAAU,QAAO,QAAI,yBACrBA,UAAU,UAAS,MAAE,wBACtB,CAACA,UAAU,SAAQ,MAAE,wBACrB,CAACA,UAAU,YAAW,MAAE,wBACxB,CAACA,UAAU,iBAAgB,QAAE,wBAGjC,CAACA,UAAU,SACZ2C,EAAOrC,KAAI,SAACC,EAAMC,GACjB,OAAM,kBAAL2G,EAAAA,EAAa,CACZzG,OAAQ,CACN,CAAC,KAAU,KAAU,SACH,CAAjB,QAAmB,KAAU,OAAgB,OAE1BH,KAAMA,EACNI,KAAK,OACLC,IAAKL,EAAKM,I,kBAETd,MAAG,CACFe,SAAS,IACTd,UAAWe,GAAAA,CACT,iGACA,CAAE,aAAcP,EAAQ,GAAM,K,kBAG/BT,MAAG,CAACC,UAAU,c,kBACZoH,EAAAA,EAAO,CAAC5G,MAAOA,EAAOK,GAAIN,EAAKM,M,kBAEjCd,MAAG,CAACC,UAAU,S,kBACZqH,EAAAA,EAAQ,CAACxG,GAAIN,EAAKM,M,kBAEpBd,MAAG,CAACC,UAAU,Y,kBACZsH,EAAAA,EAAW,yBAEbvH,MAAG,CAACC,UAAU,a,kBACZuH,EAAAA,EAAO,CAAChH,KAAMA,K,kBAEhBR,MAAG,CAACC,UAAU,mB,kBACZwH,EAAAA,EAAU,CAACnG,QAASd,EAAKe,M,kBAE3BvB,MAAG,CAACC,UAAU,kB,kBACZyH,EAAAA,EAAQ,CAACjG,KAAMjB,EAAKkB,GAAGD,KAAMX,GAAIN,EAAKkB,GAAGZ,M,kBAE3Cd,MAAG,CAACC,UAAU,mCACZ0B,GAAAA,CAAMnB,EAAKoB,IAAIC,OAAO,UAAO,kBAE/B7B,MAAG,CAACC,UAAU,O,kBACZ0H,EAAM,CAAC5H,IAAKS,EAAKT,O,kBAEnB6H,EAAa,CAAChF,OAAQpC,EAAKoC,iBDH1DqD,UAAW,aAEb4B,KAAM,CACIhC,KAAF,KACNC,KAAM,IACJC,MAAK,IACPC,KAAMtB,EACNuB,UAAW,iBAEb6B,GAAI,CACEjC,KAAE,KACNC,KAAM,IACNC,MAAO,GACPC,MDnDW5F,EAAAA,EAAAA,MAAKiF,GCoDhBY,UAAW,qB,gaE7Ef,IAAM8B,EAAS,W,IAYAC,E,IAXwBC,GAAAA,EAAAA,EAAAA,aAAS,EAATA,EAA7BC,SAAAA,OAAQ,IAAG,KAAE,IAAgBD,EAAdrH,KAAAA,OAAI,IAAG,KAAE,EAE9BuH,G,GAAAA,EAAAA,EAAAA,GAAgB,gBAAiB,I,EAAE,E,oiBAD9BC,EACLD,EAAoC,GADhBE,EACpBF,EAAoC,GACa,GADjDA,EAAoC,IAChBG,EAAAA,EAAAA,GAAeC,EAAAA,gBAA7BC,OAAAA,OAAK,IAAG,IAAC,GACjBtF,EAAAA,EAAAA,YAAU,WACR,IAAMuF,GACJL,MAAAA,OAAAA,EAAAA,EAAeM,QAAO,SAACC,GAAkBA,OAAAA,IAAkBT,OAC3D,GACFG,EAAiB,CAACH,GAAD,O,0WAAiC,CAAnBO,OAC9B,CAACP,IAEJ,IAAMpC,GAAkB,QAAXkC,EAAAA,EAAOpH,UAAPoH,IAAAA,OAAAA,EAAAA,EAAclC,OAAQ,GAEnC,OAAM,kBACH9F,MAAG,CAACC,UAAU,gD,kBACZD,MAAG,CAACC,UAAU,uB,kBACZD,MAAG,CAACC,UAAU,uBAAsB,KAEnC,EAACuI,GACI,wBAEH,CAACvI,UAAU,kBACZ2I,OAAOC,KAAKb,GAAQzH,KAAI,SAACkB,GACxB,OAAM,kBAALqH,EAAAA,QAAO,CACNjI,IAAKY,EACLoD,GAAIpD,EACJxB,UAAW,SAAQ,G,IAAL8I,EAAQ,EAARA,SACZ/H,OAAAA,GAAAA,CAAW,UAAW+H,GAAY,eAGnCtH,Q,kBAMRuH,EAAAA,OAAM,QAKb,SAAe5I,EAAAA,EAAAA,MAAK2H,G,2CCxCPkB,E,QAAMC,EAAAA,gBAAqB,CACtCC,UAAW,SAACC,GAAU,MAAC,CACrBC,eAAgBD,EAAME,SAA6B,CACjDC,MAAO,SAAC3F,GAAS,MAAC,CAChB4F,IAAM,cACNC,OAAQ,OACR7F,KAAAA,MAGJ8F,oBAAqBN,EAAMG,MAAqC,CAC9DA,MAAO,SAAC3F,GAAS,MAAC,CAChB4F,IAAM,oBACNC,OAAQ,OACR7F,KAAAA,UAMO+F,EAA2DV,EAA3DU,0B,wjCAA2DV,EAAhCW,4BChB1C,IAAMC,EAAS,WACb7F,QAAQC,IAAI,gBACZ,IAAqCgE,GAAAA,EAAAA,EAAAA,aAAS,EAATA,EAA7BC,SAAAA,OAAQ,IAAG,KAAE,IAAgBD,EAAdrH,KAAAA,OAAI,IAAG,KAAE,EAC1BkJ,GAAWC,EAAAA,EAAAA,KACOhH,EAAW,GAAXA,EAAAA,EAAAA,UAAS,GAAC,GAA3BiH,EAAiBjH,EAAW,GAAtBkH,EAAWlH,EAAW,GACPA,EAAY,GAAZA,EAAAA,EAAAA,UAAS,IAAE,GAAhCmH,EAAqBnH,EAAY,GAAzBoH,EAAapH,EAAY,GACdA,EAAW,GAAXA,EAAAA,EAAAA,UAAS,GAAC,GAA7ByF,EAAmBzF,EAAW,GAAvBqH,EAAYrH,EAAW,GACIiF,EAAAA,EAAOpH,GAAxCiF,EAAiCmC,EAAjCnC,KAAME,EAA2BiC,EAA3BjC,MAAOC,EAAoBgC,EAApBhC,KAAMC,EAAc+B,EAAd/B,UAEnBoE,GAAgB/B,EAAAA,EAAAA,IAAe,SAAQ,GAAQgC,OAAP,EAANA,UAAlCD,YACgCV,EAA2B,EAA3BA,IAAyB,GAA1DY,EAAiCZ,EAA2B,GAA1Ca,EAAeb,EAA2B,GAA1Ca,WAEzBtH,EAAAA,EAAAA,YAAU,WACR4G,GAASW,EAAAA,EAAAA,gBAAe,CAAEjC,MAAAA,OACzB,CAACA,KACJtF,EAAAA,EAAAA,YAAU,WACHmH,GACHP,GACEY,EAAAA,EAAAA,gBAAe,CACbL,YAAanC,OAIlB,IAEH,I,IAAMyC,G,YAAa,SAAQ,EAADX,G,IAOTY,EANTA,EAMAV,E,iFANaK,EAAe,CAChCrC,SAAAA,EACAnC,MAAAA,EACAnF,KAAMiF,EACNgF,QAASb,EAAO,GAAKjE,I,OAJjB6E,EAAO,EAAH,KAMJV,GAASU,MAAAA,GAAU,QAAVA,EAAAA,EAAMA,YAANA,IAAAA,OAAAA,EAAAA,EAAYV,SAAU,GACrCC,EAAUD,GACVE,EAASF,EAAOjE,I,mOATQ+D,G,iCAYpBc,EAAmB,SAACd,GACxBC,EAAQD,GACRW,EAAWX,IAMb,OAHA9G,EAAAA,EAAAA,YAAU,WACR4H,EAAiB,KAChB,CAAC5C,EAAUtH,IACV4J,EACI,kBACHxK,MAAG,CAACC,UAAU,qB,kBACZ8K,EAAAA,EAAO,OAIR,qCAEDtH,EAAAA,EAAAA,eAAcuC,EAAMkE,GAAM,kBAC1Bc,EAAAA,EAAI,CACHC,MAAOC,KAAKC,KAAK3C,EAAQzC,GACzBiE,KAAMA,EACNoB,KAAMN,MAMd,UAAe1K,EAAAA,EAAAA,MAAKyJ,GCxEpB,IAAMwB,GAAS,WACb,OAAM,kBACHC,EAAAA,OAAM,uBACJC,EAAAA,MAAK,CAACC,KAAK,YAAYC,QAAO,kBAAG1D,EAAM,O,kBACrCwD,EAAAA,MAAK,CAACC,KAAO,QAAQC,QAAO,kBAAG5B,GAAM,Q,kBACrC0B,EAAAA,MAAK,CAAC9K,OAAAA,EAAMgL,QAAO,kBAAGC,EAAAA,SAAQ,CAAC7G,GAAG,KAAKxB,SAAS,SAMzD,UAAejD,EAAAA,EAAAA,MAAKiL","sources":["webpack://wyy/./src/components/Table/Pop.tsx","webpack://wyy/./src/features/Search/Songs.tsx","webpack://wyy/./src/features/Search/Artists.tsx","webpack://wyy/./src/features/Search/Albums.tsx","webpack://wyy/./src/features/Search/Videos.tsx","webpack://wyy/./src/features/Search/Playlists.tsx","webpack://wyy/./src/features/Search/Lyrics/Item.tsx","webpack://wyy/./src/features/Search/DJRadios.tsx","webpack://wyy/./src/features/Search/UserProfiles.tsx","webpack://wyy/./src/features/Search/config.ts","webpack://wyy/./src/features/Search/Lyrics/index.tsx","webpack://wyy/./src/features/Search/Layout.tsx","webpack://wyy/./src/modules/services/search/api.ts","webpack://wyy/./src/features/Search/Search.tsx","webpack://wyy/./src/features/Search/Router.tsx"],"sourcesContent":["import React, { FC, memo } from \"react\";\n\ninterface iProps {\n  pop: number;\n}\n\nconst Pop: FC<iProps> = ({ pop = 0 }) => (\n  <div className=\"range w-20 h-1.5 rounded bg-gray-200\">\n    <div className=\"h-full bg-gray-300 rounded\" style={{ width: `${pop}%` }} />\n  </div>\n);\n\nexport default memo(Pop);\n","import React, { FC, memo } from \"react\";\nimport classNames from \"classnames\";\nimport { Link, useParams } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport { IconChevronRight } from \"@tabler/icons\";\nimport MenuCreate from \"@/components/MenuCreate/MenuCreate\";\nimport Rank from \"@/components/Table/Rank\";\nimport Heart from \"@/components/Table/Heart\";\nimport Download from \"@/components/Table/Download\";\nimport Name from \"@/components/Table/Name\";\nimport Artists from \"@/components/Table/Artists\";\nimport Album from \"@/components/Table/Album\";\nimport Pop from \"@/components/Table/Pop\";\nimport { useGetSearchMultimatchQuery } from \"@/modules/services/search\";\nimport Loading from \"@/components/Loading\";\n\nconst Build = {\n  artist: ({ item }) => (\n    <Link\n      to={`/artist/${item.id}`}\n      className=\"item group h-20 flex items-center bg-gray-100 rounded overflow-hidden\"\n    >\n      <div className=\"cover\">\n        <img className=\"\" src={`${item.picUrl}?param=80y80`} alt=\"\" />\n      </div>\n      <div className=\"content px-2\">\n        <div className=\"name text-sm\">\n          歌手：\n          {item.name}\n          {item.alias?.length > 0 && (\n            <span className=\"text-gray-400\">{`（${item.alias}）`}</span>\n          )}\n        </div>\n      </div>\n      <div className=\"ico text-gray-600 group-hover:text-black ml-auto mr-4\">\n        <IconChevronRight size={24} stroke={1} />\n      </div>\n    </Link>\n  ),\n  album: ({ item }) => (\n    <Link\n      to={`/playlist/album/${item.id}`}\n      className=\"item h-20 flex items-center bg-gray-100 rounded overflow-hidden\"\n    >\n      <div className=\"cover\">\n        <img className=\"\" src={`${item.blurPicUrl}?param=80y80`} alt=\"\" />\n      </div>\n      <div className=\"content px-2\">\n        <div className=\"name text-sm\">{item.name}</div>\n        <div className=\"subname\">{item.artist.name}</div>\n      </div>\n      <div className=\"ico text-gray-600 group-hover:text-black ml-auto mr-4\">\n        <IconChevronRight size={24} stroke={1} />\n      </div>\n    </Link>\n  ),\n};\n\nconst Multimatch: FC<{ list: [] }> = ({ list = [] }) => {\n  const BuildKeys = Object.keys(Build);\n  if (list.length === 0) return null;\n  return (\n    <div className=\"domSearch_multimatch border-b px-8 py-5\">\n      <div className=\"title text-bold\">最佳匹配</div>\n      <div className=\"list mt-5 flex space-x-6\">\n        {list.map(\n          ([item, Dom, order]) =>\n            BuildKeys.includes(order) && <Dom item={item} key={order} />\n        )}\n      </div>\n    </div>\n  );\n};\n\ninterface iProps {\n  songs: [];\n}\n\nconst Songs: FC<iProps> = ({ songs = [] }) => {\n  // const { keywords = \"\", type = \"\" } = useParams();\n  // const { data, isLoading } = useGetSearchMultimatchQuery({ keywords });\n  // const multimatch = data?.result || {};\n  // const list = multimatch.orders?.map((order) => [\n  //   multimatch[order][0],\n  //   Build[order],\n  //   order,\n  // ]);\n  return (\n    <>\n      {/*{isLoading ? (\n        <div className={`flex-center`}>\n          <Loading />\n        </div>\n      ) : (\n        <Multimatch list={list} />\n      )}*/}\n      <div\n        className=\"songs_list\"\n        style={{\n          \"--ui_grid_template\": \"36px / 54px 24px 24px 37% 4fr 5fr 2fr 3fr\",\n        }}\n      >\n        <div className=\"thead\">\n          <div className=\"item grid items-center text-gray-400 ui_grid_template\">\n            <div className=\"index\" />\n            <div className=\"heart\" />\n            <div className=\"download\" />\n            <div className=\"name flex-auto px-2\">音乐标题</div>\n            <div className=\"artist flex-none px-2\">歌手</div>\n            <div className=\"album flex-none px-2\">专辑</div>\n            <div className=\"duration flex-none px-2\">时长</div>\n            <div className=\"pop flex-none px-2\">热度</div>\n          </div>\n        </div>\n        <div className=\"tbody\">\n          {songs.map((item, index) => (\n            <MenuCreate\n              schema={[\n                [\"评论\", \"播放\", \"下一首播放\"],\n                [\"收藏到歌单\", \"分享\", \"复制链接\", \"下载\"],\n              ]}\n              item={item}\n              type=\"song\"\n              key={item.id}\n            >\n              <div\n                tabIndex={2}\n                className={classNames(\n                  \"item grid items-center hover:bg-gray-100 focus:bg-gray-200 focus:outline-none ui_grid_template\",\n                  { \"bg-gray-50\": index % 2 === 0 }\n                )}\n              >\n                <div className=\"index px-2\">\n                  <Rank index={index} id={item.id} />\n                </div>\n                <div className=\"heart text-center\">\n                  <Heart id={item.id} />\n                </div>\n                <div className=\"download text-center\">\n                  <Download />\n                </div>\n                <div className=\"name px-2\">\n                  <Name item={item} />\n                </div>\n                <div className=\"artist flex-none px-2 truncate text-gray-400\">\n                  <Artists artists={item.ar} />\n                </div>\n                <div className=\"album truncate flex-none px-2\">\n                  <Album name={item.al.name} id={item.al.name} />\n                </div>\n                <div className=\"duration text-gray-400 truncate flex-none px-2\">\n                  {dayjs(item.dt).format(\"mm:ss\")}\n                </div>\n                <div className=\"pop\">\n                  <Pop pop={item.pop} />\n                </div>\n              </div>\n            </MenuCreate>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default memo(Songs);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { IconUser } from \"@tabler/icons\";\n\nconst layouts = {\n  \"--grid-template-columns\": \"60px 6fr min-content\",\n};\n\nexport default ({ artists = [] }) => (\n  <div className=\"artists_list _list\" style={layouts}>\n    {artists.map((item, index) => (\n      <div\n        className={classNames(\n          \"item relative grid items-center hover:bg-gray-100\",\n          { \"bg-gray-50\": index % 2 === 1 }\n        )}\n        key={item.id}\n      >\n        <Link to={`/artist/${item.id}`} className=\"absolute inset-0\" />\n        <div className=\"cover\">\n          <img className=\"\" src={`${item.img1v1Url}?param=60y60`} alt=\"\" />\n        </div>\n        <div className=\"name px-2.5 text-sm\">\n          {item.name}\n          {item.alia && (\n            <span className=\"text-gray-400\">({item?.alias[0]})</span>\n          )}\n        </div>\n        {item.accountId && (\n          <span className=\"account bg-red-500 w-4 h-4 rounded-full text-white flex-center\">\n            <IconUser size={12} stroke={3} />\n          </span>\n        )}\n      </div>\n    ))}\n  </div>\n);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\nconst layouts = {\n  \"--grid-template-columns\": \"60px 1fr 1fr\",\n};\n\nexport default ({ albums = [] }) => (\n  <div className=\"albums_list _list\" style={layouts}>\n    {albums.map((item, index) => (\n      <div\n        tabIndex=\"2\"\n        className={classNames(\n          \"item grid items-center relative hover:bg-gray-100\",\n          { \"bg-gray-50\": index % 2 === 1 }\n        )}\n        key={item.id}\n      >\n        <Link\n          className=\"absolute inset-0 z-0\"\n          to={`/playlist/album/${item.id}`}\n        />\n        <div className=\"cover\">\n          <img src={`${item.picUrl}?param=60y60`} alt=\"\" />\n        </div>\n        <div className=\"name px-5 text-sm\">\n          {item.name}\n          {item.alias.length > 0 && (\n            <span className=\"text-gray-400\">{`（${item.alias}）`}</span>\n          )}\n        </div>\n        <div className=\"artist truncate\">\n          <Link\n            to={`/artist/${item.artist.id}`}\n            className=\"ui_text_gray_hover relative z-10\"\n          >\n            {item.artist.name}\n            {item.artist.alias.length > 0 && (\n              <span className=\"text-gray-400\">\n                {`（${item.artist.alias}）`}\n              </span>\n            )}\n          </Link>\n        </div>\n      </div>\n    ))}\n  </div>\n);\n","import React, {FC, memo} from \"react\";\nimport GridVideo from \"@/components/GridVideo\";\n\ninterface iProps {\n  videos: []\n}\n\nconst Videos: FC<iProps> = ({ videos = [] }) => {\n  const list = videos.map(\n    ({ type, title, coverUrl, playTime, creator, vid, durationms }) => ({\n      id: vid,\n      type,\n      title,\n      creator,\n      playCount: playTime,\n      duration: durationms,\n      cover: coverUrl,\n    })\n  );\n  return (\n    <div className=\"videos_list py-5 px-10\">\n      <GridVideo list={list} />\n    </div>\n  );\n};\n\nexport default memo(Videos)\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\nconst layouts = {\n  \"--grid-template-columns\": \"60px 6fr 2fr 5fr\",\n};\n\nexport default ({ playlists = [] }) => (\n  <div className=\"playlists_list _list\" style={layouts}>\n    {playlists.map((item, index) => (\n      <div\n        className={classNames(\n          \"item grid items-center relative hover:bg-gray-100\",\n          { \"bg-gray-50\": index % 2 === 1 }\n        )}\n        key={item.id}\n      >\n        <Link\n          className=\"absolute inset-0 z-0\"\n          to={`/playlist/music/${item.id}`}\n        />\n        <div className=\"cover\">\n          <img className=\"\" src={`${item.coverImgUrl}?param=60y60`} alt=\"\" />\n        </div>\n        <div className=\"name px-3\">{item.name}</div>\n        <div className=\"trackCount text-gray-400\">{item.trackCount}首</div>\n        <div className=\"creator text-gray-300\">\n          by &nbsp;\n          <Link\n            to={`/user/${item.creator.userId}`}\n            className=\"ui_text_black_hover relative z-10\"\n          >\n            {item.creator.nickname}\n          </Link>\n        </div>\n      </div>\n    ))}\n  </div>\n);\n","import React, { useEffect, useRef, useState } from \"react\";\n\nexport default ({ lyrics = [] }) => {\n  const content = useRef();\n  const [status, SetStatus] = useState(false);\n  useEffect(() => {\n    content.current = lyrics.join(\"\\n\").replace(/<b>|<\\/b>/gm, \"\");\n  }, [lyrics]);\n  const handleClip = () => {\n    const input = document.createElement(\"textarea\");\n    input.setAttribute(\"readonly\", \"readonly\");\n    input.textContent = content.current;\n    document.body.appendChild(input);\n    input.select();\n    if (document.execCommand(\"copy\")) {\n      document.execCommand(\"copy\");\n      console.log(\"复制成功\");\n    }\n    document.body.removeChild(input);\n  };\n  return (\n    <div className=\"lrc flex pb-2\">\n      <div className=\"content w-2/3 px-2 text-gray-500\">\n        {lyrics.slice(0, status ? Infinity : 4).map((lrc, index) => (\n          <div key={lrc + index} dangerouslySetInnerHTML={{ __html: lrc }} />\n        ))}\n      </div>\n      <div className=\"actions w-1/3 flex flex-col justify-between\">\n        <div className=\"flex space-x-2.5\">\n          <button\n            type=\"button\"\n            className=\"flex-center border border-gray-400 px-3 h-6 hover:bg-gray-300 rounded-full\"\n            onClick={() => SetStatus(!status)}\n          >\n            {status ? \"收起\" : \"展开\"}\n            歌词\n          </button>\n          <button\n            type=\"button\"\n            className=\"flex-center border border-gray-400 px-3 h-6 hover:bg-gray-300 rounded-full clip\"\n            onClick={handleClip}\n          >\n            复制歌词\n          </button>\n        </div>\n        {status && (\n          <div className=\"flex space-x-2.5\">\n            <button\n              type=\"button\"\n              className=\"flex-center border border-gray-400 px-3 h-6 hover:bg-gray-300 rounded-full\"\n              onClick={() => SetStatus(false)}\n            >\n              收起歌词\n            </button>\n            <button\n              type=\"button\"\n              className=\"flex-center border border-gray-400 px-3 h-6 hover:bg-gray-300 rounded-full clip\"\n              onClick={handleClip}\n            >\n              复制歌词\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { memo } from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\nconst layouts = {\n  \"--grid-template-columns\": \"60px 5fr 2fr\",\n};\n\nconst DJRadios = ({ djRadios = [] }) => (\n  <div className=\"djRadios_list _list\" style={layouts}>\n    {djRadios.map((item, index) => (\n      <div\n        className={classNames(\"item grid items-center hover:bg-gray-100\", {\n          \"bg-gray-50\": index % 2 === 0,\n        })}\n        key={item.id}\n      >\n        <Link to={`/playlist/dj/${item.id}`} className=\"cover\">\n          <img className=\"\" src={`${item.picUrl}?param=60y60`} alt=\"\" />\n        </Link>\n        <div className=\"px-5\">\n          <Link to={`/playlist/dj/${item.id}`} className=\"name\">\n            {item.name}\n          </Link>\n        </div>\n        <div className=\"dj text-gray-300\">\n          by &nbsp;\n          <Link to={`/user/${item.dj.userId}`} className=\"ui_text_gray_hover\">\n            {item.dj.nickname}\n          </Link>\n        </div>\n      </div>\n    ))}\n  </div>\n);\n\nexport default memo(DJRadios);\n","import React, { memo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport DomGender from \"@/components/Gender\";\n\nconst layouts = {\n  \"--grid-template-columns\": \"60px 5fr 2fr\",\n};\n\nconst UserProfiles = ({ userprofiles = [] }) => (\n  <div className=\"userprofiles_list _list\" style={layouts}>\n    {userprofiles.map((item, index) => (\n      <Link\n        to={`/user/${item.userId}`}\n        className={classNames(\"item grid items-center hover:bg-gray-100\", {\n          \"bg-gray-50\": index % 2 === 1,\n        })}\n        key={item.userId}\n      >\n        <div className=\"rounded-full overflow-hidden\">\n          <img src={`${item.avatarUrl}?param=60y60`} alt=\"\" />\n        </div>\n        <div className=\"name px-5\">\n          {item.nickname}\n          &nbsp;\n          <DomGender size={16} gender={item.gender} />\n        </div>\n        <div className=\"signature text-gray-400 ml-auto\">{item.signature}</div>\n      </Link>\n    ))}\n  </div>\n);\n\nexport default memo(UserProfiles);\n","import Songs from \"./Songs\";\nimport Artists from \"./Artists\";\nimport Albums from \"./Albums\";\nimport Videos from \"./Videos\";\nimport Playlists from \"./Playlists\";\nimport Lyrics from \"./Lyrics\";\nimport DJRadios from \"./DJRadios\";\nimport UserProfiles from \"./UserProfiles\";\nimport { FC, ReactNode } from \"react\";\n\nexport type Types =\n  | \"单曲\"\n  | \"歌手\"\n  | \"专辑\"\n  | \"视频\"\n  | \"歌单\"\n  | \"歌词\"\n  | \"主播电台\"\n  | \"用户\";\n\ntype Config = {\n  [key in Types]: {\n    code: number;\n    unit: string;\n    limit: number;\n    Node: FC<any>;\n    countName: string;\n  };\n};\n\nconst config: Config = {\n  单曲: {\n    code: 1,\n    unit: \"首\",\n    limit: 100,\n    Node: Songs,\n    countName: \"songCount\",\n  },\n  歌手: {\n    code: 100,\n    unit: \"位\",\n    limit: 20,\n    Node: Artists,\n    countName: \"artistCount\",\n  },\n  专辑: {\n    code: 10,\n    unit: \"张\",\n    limit: 20,\n    Node: Albums,\n    countName: \"albumCount\",\n  },\n  视频: {\n    code: 1014,\n    unit: \"个\",\n    limit: 24,\n    Node: Videos,\n    countName: \"videoCount\",\n  },\n  歌单: {\n    code: 1000,\n    unit: \"个\",\n    limit: 20,\n    Node: Playlists,\n    countName: \"playlistCount\",\n  },\n  歌词: {\n    code: 1006,\n    unit: \"首\",\n    limit: 20,\n    Node: Lyrics,\n    countName: \"songCount\",\n  },\n  主播电台: {\n    code: 1009,\n    unit: \"个\",\n    limit: 100,\n    Node: DJRadios,\n    countName: \"djRadiosCount\",\n  },\n  用户: {\n    code: 1002,\n    unit: \"位\",\n    limit: 20,\n    Node: UserProfiles,\n    countName: \"userprofileCount\",\n  },\n};\n\nexport default config;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport dayjs from \"dayjs\";\nimport DomMenuCreate from \"@/components/MenuCreate/MenuCreate\";\nimport DomRank from \"@/components/Table/Rank\";\nimport DomHeart from \"@/components/Table/Heart\";\nimport DomDownload from \"@/components/Table/Download\";\nimport DomName from \"@/components/Table/Name\";\nimport DomArtists from \"@/components/Table/Artists\";\nimport DomAlbum from \"@/components/Table/Album\";\nimport DomPop from \"@/components/Table/Pop\";\nimport DomLyricsItem from \"./Item\";\n\nexport default ({ songs: lyrics = [] }) => (\n  <div\n    className=\"lyrics_list\"\n    style={{\n      \"--ui_grid_template\": \"36px / 54px 24px 24px 37% 4fr 5fr 2fr 3fr\",\n    }}\n  >\n    <div className=\"thead\">\n      <div className=\"item grid items-center text-gray-400 ui_grid_template\">\n        <div className=\"index\" />\n        <div className=\"heart\" />\n        <div className=\"download\" />\n        <div className=\"name\">音乐标题</div>\n        <div className=\"artist\">歌手</div>\n        <div className=\"album\">专辑</div>\n        <div className=\"duration\">时长</div>\n        <div className=\"text-gray-400\">热度</div>\n      </div>\n    </div>\n    <div className=\"tbody\">\n      {lyrics.map((item, index) => (\n        <DomMenuCreate\n          schema={[\n            [\"评论\", \"播放\", \"下一首播放\"],\n            [\"收藏到歌单\", \"分享\", \"复制链接\", \"下载\"],\n          ]}\n          item={item}\n          type=\"song\"\n          key={item.id}\n        >\n          <div\n            tabIndex=\"2\"\n            className={classNames(\n              \"item grid items-center hover:bg-gray-100 focus:outline-none focus:bg-gray-200 ui_grid_template\",\n              { \"bg-gray-50\": index % 2 === 0 }\n            )}\n          >\n            <div className=\"index pr-2\">\n              <DomRank index={index} id={item.id} />\n            </div>\n            <div className=\"heart\">\n              <DomHeart id={item.id} />\n            </div>\n            <div className=\"download\">\n              <DomDownload />\n            </div>\n            <div className=\"name flex\">\n              <DomName item={item} />\n            </div>\n            <div className=\"artist truncate\">\n              <DomArtists artists={item.ar} />\n            </div>\n            <div className=\"album truncate\">\n              <DomAlbum name={item.al.name} id={item.al.id} />\n            </div>\n            <div className=\"duration text-gray-400 truncate\">\n              {dayjs(item.dt).format(\"mm:ss\")}\n            </div>\n            <div className=\"pop\">\n              <DomPop pop={item.pop} />\n            </div>\n            <DomLyricsItem lyrics={item.lyrics} />\n          </div>\n        </DomMenuCreate>\n      ))}\n    </div>\n  </div>\n);\n","import { NavLink, Outlet, useParams } from \"react-router-dom\";\nimport React, { memo, useEffect } from \"react\";\nimport { useLocalStorage } from \"react-use\";\nimport classNames from \"classnames\";\nimport config from \"./config\";\nimport { useAppSelector } from \"@/modules/hooks\";\nimport { searchSelector } from \"@/modules/reducers/search/slice\";\n\nconst Layout = () => {\n  const { keywords = \"\", type = \"\" } = useParams();\n  const [searchHistory, setSearchHistory, removeSearchHistory] =\n    useLocalStorage(\"searchHistory\", []);\n  const { count = 0 } = useAppSelector(searchSelector);\n  useEffect(() => {\n    const otherSearchHistory =\n      searchHistory?.filter((otherKeywords) => otherKeywords !== keywords) ||\n      [];\n    setSearchHistory([keywords, ...otherSearchHistory]);\n  }, [keywords]);\n\n  const unit = config[type]?.unit || \"\";\n\n  return (\n    <div className=\"domSearch overflow-auto max-h-full flex-auto\">\n      <div className=\"p-8 pb-2.5 border-b\">\n        <div className=\"font-bold text-base\">\n          找到\n          {count}\n          {unit}\n        </div>\n        <div className=\"mt-5 space-x-4\">\n          {Object.keys(config).map((name) => (\n            <NavLink\n              key={name}\n              to={name}\n              className={({ isActive }) =>\n                classNames(\"text-sm\", isActive && \"font-bold\")\n              }\n            >\n              {name}\n            </NavLink>\n          ))}\n        </div>\n        {}\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default memo(Layout);\n","import { Searchs } from \"./types\";\nimport { base } from \"../base\";\n\ninterface ReqSearch {\n  keywords: string;\n  limit: number;\n  type: number;\n  offset: number;\n}\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getCloudSearch: build.mutation<Searchs, ReqSearch>({\n      query: (body) => ({\n        url: `cloudSearch`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getSearchMultimatch: build.query<Searchs, { keywords: string }>({\n      query: (body) => ({\n        url: `search/multimatch`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetCloudSearchMutation, useGetSearchMultimatchQuery } = api;\n","import React, { createElement, memo, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  setSearchCount,\n  setSearchValue,\n} from \"@/modules/reducers/search/slice\";\nimport \"./style.scss\";\nimport Loading from \"@/components/Loading\";\nimport Page from \"@/components/Page\";\nimport { useAppDispatch, useAppSelector } from \"@/modules/hooks\";\nimport { useGetCloudSearchMutation } from \"@/modules/services/search\";\nimport config, { Types } from \"./config\";\n\nconst Search = () => {\n  console.log(\"entry search\");\n  const { keywords = \"\", type = \"\" } = useParams();\n  const dispatch = useAppDispatch();\n  const [page, setPage] = useState(1);\n  const [result, setResult] = useState({});\n  const [count, setCount] = useState(0);\n  const { code, limit, Node, countName } = config[type as Types];\n\n  const { searchValue } = useAppSelector(({ common }) => common);\n  const [cloudSearchGet, { isLoading }] = useGetCloudSearchMutation();\n\n  useEffect(() => {\n    dispatch(setSearchCount({ count }));\n  }, [count]);\n  useEffect(() => {\n    if (!searchValue) {\n      dispatch(\n        setSearchValue({\n          searchValue: keywords,\n        })\n      );\n    }\n  }, []);\n\n  const handleInit = async (page: number) => {\n    const data = await cloudSearchGet({\n      keywords,\n      limit,\n      type: code,\n      offset: (page - 1) * limit,\n    });\n    const result = data?.data?.result || {};\n    setResult(result);\n    setCount(result[countName]);\n  };\n\n  const handleChangePage = (page: number) => {\n    setPage(page);\n    handleInit(page);\n  };\n\n  useEffect(() => {\n    handleChangePage(1);\n  }, [keywords, type]);\n  if (isLoading) {\n    return (\n      <div className=\"pt-48 flex-center\">\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <>\n      {createElement(Node, result)}\n      <Page\n        total={Math.ceil(count / limit)}\n        page={page}\n        func={handleChangePage}\n      />\n    </>\n  );\n};\n\nexport default memo(Search);\n","import React, { memo } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport Search from \"./Search\";\n\nconst Router = () => {\n  return (\n    <Routes>\n      <Route path=\":keywords\" element={<Layout />}>\n        <Route path={`:type`} element={<Search />} />\n        <Route index element={<Navigate to=\"单曲\" replace={true} />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default memo(Router);\n"],"names":["Pop","pop","div","className","style","width","memo","Songs","songs","map","item","index","MenuCreate","schema","type","key","id","tabIndex","classNames","Rank","Heart","Download","Name","Artists","artists","ar","Album","name","al","dayjs","dt","format","layouts","Videos","videos","list","title","coverUrl","playTime","creator","vid","playCount","duration","durationms","cover","GridVideo","lyrics","content","useRef","useState","status","SetStatus","useEffect","current","join","replace","handleClip","input","document","createElement","setAttribute","textContent","body","appendChild","select","execCommand","console","log","removeChild","slice","Infinity","lrc","dangerouslySetInnerHTML","__html","button","onClick","DJRadios","djRadios","Link","to","img","src","picUrl","alt","dj","userId","nickname","UserProfiles","userprofiles","avatarUrl","DomGender","size","gender","signature","单曲","code","unit","limit","Node","countName","歌手","img1v1Url","alia","span","alias","accountId","IconUser","stroke","专辑","albums","length","artist","视频","歌单","playlists","coverImgUrl","trackCount","歌词","DomMenuCreate","DomRank","DomHeart","DomDownload","DomName","DomArtists","DomAlbum","DomPop","DomLyricsItem","主播电台","用户","Layout","config","useParams","keywords","useLocalStorage","searchHistory","setSearchHistory","useAppSelector","searchSelector","count","otherSearchHistory","filter","otherKeywords","Object","keys","NavLink","isActive","Outlet","api","base","endpoints","build","getCloudSearch","mutation","query","url","method","getSearchMultimatch","useGetCloudSearchMutation","useGetSearchMultimatchQuery","Search","dispatch","useAppDispatch","page","setPage","result","setResult","setCount","searchValue","common","cloudSearchGet","isLoading","setSearchCount","setSearchValue","handleInit","data","offset","handleChangePage","Loading","Page","total","Math","ceil","func","Router","Routes","Route","path","element","Navigate"],"sourceRoot":""}