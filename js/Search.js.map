{"version":3,"file":"js/Search.js?version=700f387d","mappings":"+WAMMA,EAAkB,SAAC,GAAD,QAAGC,IAAAA,OAAH,MAAS,EAAT,SACtB,yBAAKC,UAAU,wCACb,yBAAKA,UAAU,6BAA6BC,MAAO,CAAEC,MAAO,GAAF,OAAKH,EAAL,UAI9D,SAAeI,EAAAA,EAAAA,MAAKL,GCIpB,IA8DMM,EAAoB,SAAC,GAAmB,QAAjBC,MAAAA,OAAiB,MAAT,GAAS,EAS5C,OACE,oCAQE,yBACEL,UAAU,aACVC,MAAO,CACL,qBAAsB,8CAGxB,yBAAKD,UAAU,SACb,yBAAKA,UAAU,yDACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,uBAAf,QACA,yBAAKA,UAAU,yBAAf,MACA,yBAAKA,UAAU,wBAAf,MACA,yBAAKA,UAAU,2BAAf,MACA,yBAAKA,UAAU,sBAAf,QAGJ,yBAAKA,UAAU,SACZK,EAAMC,KAAI,SAACC,EAAMC,GAAP,OACT,kBAACC,EAAA,EAAD,CACEC,OAAQ,CACN,CAAC,KAAM,KAAM,SACb,CAAC,QAAS,KAAM,OAAQ,OAE1BH,KAAMA,EACNI,KAAK,OACLC,IAAKL,EAAKM,IAEV,yBACEC,SAAU,EACVd,UAAWe,GAAAA,CACT,iGACA,CAAE,aAAcP,EAAQ,GAAM,KAGhC,yBAAKR,UAAU,cACb,kBAACgB,EAAA,EAAD,CAAMR,MAAOA,EAAOK,GAAIN,EAAKM,MAE/B,yBAAKb,UAAU,qBACb,kBAACiB,EAAA,EAAD,CAAOJ,GAAIN,EAAKM,MAElB,yBAAKb,UAAU,wBACb,kBAACkB,EAAA,EAAD,OAEF,yBAAKlB,UAAU,aACb,kBAACmB,EAAA,EAAD,CAAMZ,KAAMA,KAEd,yBAAKP,UAAU,gDACb,kBAACoB,EAAA,EAAD,CAASC,QAASd,EAAKe,MAEzB,yBAAKtB,UAAU,iCACb,kBAACuB,EAAA,EAAD,CAAOC,KAAMjB,EAAKkB,GAAGD,KAAMX,GAAIN,EAAKkB,GAAGD,QAEzC,yBAAKxB,UAAU,kDACZ0B,GAAAA,CAAMnB,EAAKoB,IAAIC,OAAO,UAEzB,yBAAK5B,UAAU,OACb,kBAAC,EAAD,CAAKD,IAAKQ,EAAKR,gBAWjC,SAAeI,EAAAA,EAAAA,MAAKC,GChKpB,IAAMyB,EAAU,CACd,0BAA2B,wBCFvBA,EAAU,CACd,0BAA2B,gB,UCEvBC,EAAqB,SAAC,GAAoB,QAAlBC,OACtBC,QADwC,MAAT,GAAS,GAC1B1B,KAClB,gBAAGK,EAAH,EAAGA,KAAMsB,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,SAAUC,EAApC,EAAoCA,QAApC,MAAoE,CAClEvB,GADF,EAA6CwB,IAE3C1B,KAAAA,EACAsB,MAAAA,EACAG,QAAAA,EACAE,UAAWH,EACXI,SANF,EAAkDC,WAOhDC,MAAOP,MAGX,OACE,yBAAKlC,UAAU,0BACb,kBAAC0C,EAAA,EAAD,CAAWV,KAAMA,MAKvB,SAAe7B,EAAAA,EAAAA,MAAK2B,GCtBpB,IAAMD,EAAU,CACd,0BAA2B,oB,gCCH7B,iBAAe,GAAqB,QAAlBc,OAAAA,OAAkB,MAAT,GAAS,EAC5BC,GAAUC,EAAAA,EAAAA,UAChB,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,MACAC,EAAAA,EAAAA,YAAU,WACRL,EAAQM,QAAUP,EAAOQ,KAAK,MAAMC,QAAQ,cAAe,MAC1D,CAACT,IACJ,IAAMU,EAAa,WACjB,IAAMC,EAAQC,SAASC,cAAc,YACrCF,EAAMG,aAAa,WAAY,YAC/BH,EAAMI,YAAcd,EAAQM,QAC5BK,SAASI,KAAKC,YAAYN,GAC1BA,EAAMO,SACFN,SAASO,YAAY,UACvBP,SAASO,YAAY,QACrBC,QAAQC,IAAI,SAEdT,SAASI,KAAKM,YAAYX,IAE5B,OACE,yBAAKtD,UAAU,iBACb,yBAAKA,UAAU,oCACZ2C,EAAOuB,MAAM,EAAGnB,EAASoB,EAAAA,EAAW,GAAG7D,KAAI,SAAC8D,EAAK5D,GAAN,OAC1C,yBAAKI,IAAKwD,EAAM5D,EAAO6D,wBAAyB,CAAEC,OAAQF,SAG9D,yBAAKpE,UAAU,+CACb,yBAAKA,UAAU,oBACb,4BACEW,KAAK,SACLX,UAAU,6EACVuE,QAAS,kBAAMvB,GAAWD,KAEzBA,EAAS,KAAO,KALnB,MAQA,4BACEpC,KAAK,SACLX,UAAU,kFACVuE,QAASlB,GAHX,SAQDN,GACC,yBAAK/C,UAAU,oBACb,4BACEW,KAAK,SACLX,UAAU,6EACVuE,QAAS,kBAAMvB,GAAU,KAH3B,QAOA,4BACErC,KAAK,SACLX,UAAU,kFACVuE,QAASlB,GAHX,YClDZ,IAAMxB,EAAU,CACd,0BAA2B,gBAGvB2C,EAAW,SAAC,GAAD,QAAGC,SAAAA,OAAH,MAAc,GAAd,SACf,yBAAKzE,UAAU,sBAAsBC,MAAO4B,GACzC4C,EAASnE,KAAI,SAACC,EAAMC,GAAP,OACZ,yBACER,UAAWe,GAAAA,CAAW,2CAA4C,CAChE,aAAcP,EAAQ,GAAM,IAE9BI,IAAKL,EAAKM,IAEV,kBAAC,EAAA6D,KAAD,CAAMC,GAAE,uBAAkBpE,EAAKM,IAAMb,UAAU,SAC7C,yBAAKA,UAAU,GAAG4E,IAAG,UAAKrE,EAAKsE,OAAV,gBAAgCC,IAAI,MAE3D,yBAAK9E,UAAU,QACb,kBAAC,EAAA0E,KAAD,CAAMC,GAAE,uBAAkBpE,EAAKM,IAAMb,UAAU,QAC5CO,EAAKiB,OAGV,yBAAKxB,UAAU,oBAAf,OAEE,kBAAC,EAAA0E,KAAD,CAAMC,GAAE,gBAAWpE,EAAKwE,GAAGC,QAAUhF,UAAU,sBAC5CO,EAAKwE,GAAGE,iBAQrB,SAAe9E,EAAAA,EAAAA,MAAKqE,G,cC/Bd3C,EAAU,CACd,0BAA2B,gBAGvBqD,EAAe,SAAC,GAAD,QAAGC,aAAAA,OAAH,MAAkB,GAAlB,SACnB,yBAAKnF,UAAU,0BAA0BC,MAAO4B,GAC7CsD,EAAa7E,KAAI,SAACC,EAAMC,GAAP,OAChB,kBAAC,EAAAkE,KAAD,CACEC,GAAE,gBAAWpE,EAAKyE,QAClBhF,UAAWe,GAAAA,CAAW,2CAA4C,CAChE,aAAcP,EAAQ,GAAM,IAE9BI,IAAKL,EAAKyE,QAEV,yBAAKhF,UAAU,gCACb,yBAAK4E,IAAG,UAAKrE,EAAK6E,UAAV,gBAAmCN,IAAI,MAEjD,yBAAK9E,UAAU,aACZO,EAAK0E,SADR,IAGE,kBAAC,KAAD,CAAWI,KAAM,GAAIC,OAAQ/E,EAAK+E,UAEpC,yBAAKtF,UAAU,mCAAmCO,EAAKgF,iBAM/D,MCxBA,GACEC,GAAI,CACFC,KAAM,EACNC,KAAM,IACNC,MAAO,IACPC,IAAKxF,EACLyF,UAAW,aAEbC,GAAI,CACFL,KAAM,IACNC,KAAM,IACNC,MAAO,GACPC,IPZJ,SAAe,WAAGvE,QAAAA,OAAH,MAAa,GAAb,SACb,yBAAKrB,UAAU,qBAAqBC,MAAO4B,GACxCR,EAAQf,KAAI,SAACC,EAAMC,GAAP,OACX,yBACER,UAAWe,GAAAA,CACT,oDACA,CAAE,aAAcP,EAAQ,GAAM,IAEhCI,IAAKL,EAAKM,IAEV,kBAAC,EAAA6D,KAAD,CAAMC,GAAE,kBAAapE,EAAKM,IAAMb,UAAU,qBAC1C,yBAAKA,UAAU,SACb,yBAAKA,UAAU,GAAG4E,IAAG,UAAKrE,EAAKwF,UAAV,gBAAmCjB,IAAI,MAE9D,yBAAK9E,UAAU,uBACZO,EAAKiB,KACLjB,EAAKyF,MACJ,0BAAMhG,UAAU,iBAAhB,IAAkCO,MAAAA,OAAlC,EAAkCA,EAAM0F,MAAM,GAA9C,MAGH1F,EAAK2F,WACJ,0BAAMlG,UAAU,kEACd,kBAAC,EAAAmG,SAAD,CAAUd,KAAM,GAAIe,OAAQ,WOTpCP,UAAW,eAEbQ,GAAI,CACFZ,KAAM,GACNC,KAAM,IACNC,MAAO,GACPC,INpBJ,SAAe,WAAGU,OAAAA,OAAH,MAAY,GAAZ,SACb,yBAAKtG,UAAU,oBAAoBC,MAAO4B,GACvCyE,EAAOhG,KAAI,SAACC,EAAMC,GAAP,OACV,yBACEM,SAAS,IACTd,UAAWe,GAAAA,CACT,oDACA,CAAE,aAAcP,EAAQ,GAAM,IAEhCI,IAAKL,EAAKM,IAEV,kBAAC,EAAA6D,KAAD,CACE1E,UAAU,uBACV2E,GAAE,0BAAqBpE,EAAKM,MAE9B,yBAAKb,UAAU,SACb,yBAAK4E,IAAG,UAAKrE,EAAKsE,OAAV,gBAAgCC,IAAI,MAE9C,yBAAK9E,UAAU,qBACZO,EAAKiB,KACLjB,EAAK0F,MAAMM,OAAS,GACnB,0BAAMvG,UAAU,iBAAhB,WAAqCO,EAAK0F,MAA1C,OAGJ,yBAAKjG,UAAU,mBACb,kBAAC,EAAA0E,KAAD,CACEC,GAAE,kBAAapE,EAAKiG,OAAO3F,IAC3Bb,UAAU,oCAETO,EAAKiG,OAAOhF,KACZjB,EAAKiG,OAAOP,MAAMM,OAAS,GAC1B,0BAAMvG,UAAU,iBAAhB,WACOO,EAAKiG,OAAOP,MADnB,cMVVJ,UAAW,cAEbY,GAAI,CACFhB,KAAM,KACNC,KAAM,IACNC,MAAO,GACPC,IAAK9D,EACL+D,UAAW,cAEba,GAAI,CACFjB,KAAM,IACNC,KAAM,IACNC,MAAO,GACPC,IJlCJ,SAAe,WAAGe,UAAAA,OAAH,MAAe,GAAf,SACb,yBAAK3G,UAAU,uBAAuBC,MAAO4B,GAC1C8E,EAAUrG,KAAI,SAACC,EAAMC,GAAP,OACb,yBACER,UAAWe,GAAAA,CACT,oDACA,CAAE,aAAcP,EAAQ,GAAM,IAEhCI,IAAKL,EAAKM,IAEV,kBAAC,EAAA6D,KAAD,CACE1E,UAAU,uBACV2E,GAAE,0BAAqBpE,EAAKM,MAE9B,yBAAKb,UAAU,SACb,yBAAKA,UAAU,GAAG4E,IAAG,UAAKrE,EAAKqG,YAAV,gBAAqC9B,IAAI,MAEhE,yBAAK9E,UAAU,aAAaO,EAAKiB,MACjC,yBAAKxB,UAAU,4BAA4BO,EAAKsG,WAAhD,KACA,yBAAK7G,UAAU,yBAAf,OAEE,kBAAC,EAAA0E,KAAD,CACEC,GAAE,gBAAWpE,EAAK6B,QAAQ4C,QAC1BhF,UAAU,qCAETO,EAAK6B,QAAQ6C,iBIUtBY,UAAW,iBAEbiB,GAAI,CACFrB,KAAM,KACNC,KAAM,IACNC,MAAO,GACPC,ICpCJ,SAAe,WAAGvF,MAAOsC,OAAV,MAAmB,GAAnB,SACb,yBACE3C,UAAU,cACVC,MAAO,CACL,qBAAsB,8CAGxB,yBAAKD,UAAU,SACb,yBAAKA,UAAU,yDACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,QAAf,QACA,yBAAKA,UAAU,UAAf,MACA,yBAAKA,UAAU,SAAf,MACA,yBAAKA,UAAU,YAAf,MACA,yBAAKA,UAAU,iBAAf,QAGJ,yBAAKA,UAAU,SACZ2C,EAAOrC,KAAI,SAACC,EAAMC,GAAP,OACV,kBAAC,IAAD,CACEE,OAAQ,CACN,CAAC,KAAM,KAAM,SACb,CAAC,QAAS,KAAM,OAAQ,OAE1BH,KAAMA,EACNI,KAAK,OACLC,IAAKL,EAAKM,IAEV,yBACEC,SAAS,IACTd,UAAWe,GAAAA,CACT,iGACA,CAAE,aAAcP,EAAQ,GAAM,KAGhC,yBAAKR,UAAU,cACb,kBAAC,IAAD,CAASQ,MAAOA,EAAOK,GAAIN,EAAKM,MAElC,yBAAKb,UAAU,SACb,kBAAC,IAAD,CAAUa,GAAIN,EAAKM,MAErB,yBAAKb,UAAU,YACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAASO,KAAMA,KAEjB,yBAAKP,UAAU,mBACb,kBAAC,IAAD,CAAYqB,QAASd,EAAKe,MAE5B,yBAAKtB,UAAU,kBACb,kBAAC,IAAD,CAAUwB,KAAMjB,EAAKkB,GAAGD,KAAMX,GAAIN,EAAKkB,GAAGZ,MAE5C,yBAAKb,UAAU,mCACZ0B,GAAAA,CAAMnB,EAAKoB,IAAIC,OAAO,UAEzB,yBAAK5B,UAAU,OACb,kBAAC,EAAD,CAAQD,IAAKQ,EAAKR,OAEpB,kBAAC,EAAD,CAAe4C,OAAQpC,EAAKoC,iBDxBpCkD,UAAW,aAEbkB,KAAM,CACJtB,KAAM,KACNC,KAAM,IACNC,MAAO,IACPC,IAAKpB,EACLqB,UAAW,iBAEbmB,GAAI,CACFvB,KAAM,KACNC,KAAM,IACNC,MAAO,GACPC,KD9BWzF,EAAAA,EAAAA,MAAK+E,GC+BhBW,UAAW,qB,wBExDToB,EAAS,WACb,OAAqCC,EAAAA,EAAAA,aAArC,IAAQC,SAAAA,OAAR,MAAmB,GAAnB,MAAuBxG,KAAAA,OAAvB,MAA8B,GAA9B,EACA,GACEyG,EAAAA,EAAAA,GAAgB,gBAAiB,IADnC,eAAOC,EAAP,KAAsBC,EAAtB,KAEA,GAFA,MAEsBC,EAAAA,EAAAA,GAAeC,EAAAA,gBAA7BC,OAAAA,OAAR,MAAgB,EAAhB,GACAxE,EAAAA,EAAAA,YAAU,WACR,IAAMyE,GACJL,MAAAA,OAAA,EAAAA,EAAeM,QAAO,SAACC,GAAD,OAAmBA,IAAkBT,OAC3D,GACFG,EAAiB,CAACH,GAAF,eAAeO,OAC9B,CAACP,IAEJ,IAAQzB,EAASmC,EAAOlH,GAAhB+E,KAER,OACE,yBAAK1F,UAAU,gDACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,uBAAf,KAEGyH,EACA/B,GAEH,yBAAK1F,UAAU,kBACZ8H,OAAOC,KAAKF,GAAQvH,KAAI,SAACkB,GAAD,OACvB,kBAAC,EAAAwG,QAAD,CACEpH,IAAKY,EACLmD,GAAInD,EACJxB,UAAW,gBAAGiI,EAAH,EAAGA,SAAH,OACTlH,GAAAA,CAAW,UAAWkH,GAAY,eAGnCzG,QAMT,kBAAC,EAAA0G,OAAD,QAKN,SAAe/H,EAAAA,EAAAA,MAAK8G,G,cCxCPkB,E,QAAMC,EAAAA,gBAAqB,CACtCC,UAAW,SAACC,GAAD,MAAY,CACrBC,eAAgBD,EAAME,MAA0B,CAC9CA,MAAO,SAAC7E,GAAD,MAAW,CAChB8E,IAAK,cACLC,OAAQ,OACR/E,KAAAA,MAGJgF,oBAAqBL,EAAME,MAAqC,CAC9DA,MAAO,SAAC7E,GAAD,MAAW,CAChB8E,IAAK,oBACLC,OAAQ,OACR/E,KAAAA,UAMOiF,EAAwDT,EAAxDS,uBCfTC,GDeiEV,EAAhCW,4BCfxB,WACb/E,QAAQC,IAAI,gBACZ,OAAqCkD,EAAAA,EAAAA,aAArC,IAAQC,SAAAA,OAAR,MAAmB,GAAnB,MAAuBxG,KAAAA,OAAvB,MAA8B,GAA9B,EACMoI,GAAWC,EAAAA,EAAAA,KACjB,GAAwBlG,EAAAA,EAAAA,UAAS,GAAjC,eAAOmG,EAAP,KACA,GADA,KAC8CpB,EAAOlH,IAA7C8E,EAAR,EAAQA,KAAYE,GAApB,EAAcD,KAAd,EAAoBC,OAAOC,EAA3B,EAA2BA,IAAKC,EAAhC,EAAgCA,UAExBqD,GAAgB3B,EAAAA,EAAAA,IAAe,qBAAG4B,UAAlCD,YACR,EAA4BN,EAAuB,CACjDzB,SAAAA,EACAxB,MAAAA,EACAhF,KAAM8E,EACN2D,QAASH,EAAO,GAAKtD,IAJf0D,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAORC,GAASF,MAAAA,OAAA,EAAAA,EAAME,SAAU,GACzB9B,EAAQ8B,EAAO1D,GAiBrB,OAhBA5C,EAAAA,EAAAA,YAAU,WACR8F,GAASS,EAAAA,EAAAA,gBAAe,CAAE/B,MAAAA,OACzB,CAACA,KACJxE,EAAAA,EAAAA,YAAU,WACHiG,GACHH,GACEU,EAAAA,EAAAA,gBAAe,CACbP,YAAa/B,OAIlB,IAKCmC,EAEA,yBAAKtJ,UAAU,qBACb,kBAAC0J,EAAA,EAAD,QAIClG,EAAAA,EAAAA,eAAcoC,EAAK2D,KAG5B,SAAepJ,EAAAA,EAAAA,MAAK0I,GCpDpB,IAAMc,EAAS,WACb,OACE,kBAAC,EAAAC,OAAD,KACE,kBAAC,EAAAC,MAAD,CAAOC,KAAK,YAAYC,QAAS,kBAAC,EAAD,OAC/B,kBAAC,EAAAF,MAAD,CAAOC,KAAI,QAAWC,QAAS,kBAAC,EAAD,QAC/B,kBAAC,EAAAF,MAAD,CAAOrJ,OAAK,EAACuJ,QAAS,kBAAC,EAAAC,SAAD,CAAUrF,GAAG,KAAKvB,SAAS,SAMzD,SAAejD,EAAAA,EAAAA,MAAKwJ","sources":["webpack://wyy/./src/components/Table/Pop.tsx","webpack://wyy/./src/features/Search/Songs.tsx","webpack://wyy/./src/features/Search/Artists.tsx","webpack://wyy/./src/features/Search/Albums.tsx","webpack://wyy/./src/features/Search/Videos.tsx","webpack://wyy/./src/features/Search/Playlists.tsx","webpack://wyy/./src/features/Search/Lyrics/Item.tsx","webpack://wyy/./src/features/Search/DJRadios.tsx","webpack://wyy/./src/features/Search/UserProfiles.tsx","webpack://wyy/./src/features/Search/config.ts","webpack://wyy/./src/features/Search/Lyrics/index.tsx","webpack://wyy/./src/features/Search/Layout.tsx","webpack://wyy/./src/modules/services/search/api.ts","webpack://wyy/./src/features/Search/Search.tsx","webpack://wyy/./src/features/Search/Router.tsx"],"sourcesContent":["import React, { FC, memo } from \"react\";\n\ninterface iProps {\n  pop: number;\n}\n\nconst Pop: FC<iProps> = ({ pop = 0 }) => (\n  <div className=\"range w-20 h-1.5 rounded bg-gray-200\">\n    <div className=\"h-full bg-gray-300 rounded\" style={{ width: `${pop}%` }} />\n  </div>\n);\n\nexport default memo(Pop);\n","import React, { FC, memo } from \"react\";\nimport classNames from \"classnames\";\nimport { Link, useParams } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport { IconChevronRight } from \"@tabler/icons\";\nimport MenuCreate from \"@/components/MenuCreate/MenuCreate\";\nimport Rank from \"@/components/Table/Rank\";\nimport Heart from \"@/components/Table/Heart\";\nimport Download from \"@/components/Table/Download\";\nimport Name from \"@/components/Table/Name\";\nimport Artists from \"@/components/Table/Artists\";\nimport Album from \"@/components/Table/Album\";\nimport Pop from \"@/components/Table/Pop\";\nimport { useGetSearchMultimatchQuery } from \"@/modules/services/search\";\nimport Loading from \"@/components/Loading\";\n\nconst Build = {\n  artist: ({ item }) => (\n    <Link\n      to={`/artist/${item.id}`}\n      className=\"item group h-20 flex items-center bg-gray-100 rounded overflow-hidden\"\n    >\n      <div className=\"cover\">\n        <img className=\"\" src={`${item.picUrl}?param=80y80`} alt=\"\" />\n      </div>\n      <div className=\"content px-2\">\n        <div className=\"name text-sm\">\n          歌手：\n          {item.name}\n          {item.alias?.length > 0 && (\n            <span className=\"text-gray-400\">{`（${item.alias}）`}</span>\n          )}\n        </div>\n      </div>\n      <div className=\"ico text-gray-600 group-hover:text-black ml-auto mr-4\">\n        <IconChevronRight size={24} stroke={1} />\n      </div>\n    </Link>\n  ),\n  album: ({ item }) => (\n    <Link\n      to={`/playlist/album/${item.id}`}\n      className=\"item h-20 flex items-center bg-gray-100 rounded overflow-hidden\"\n    >\n      <div className=\"cover\">\n        <img className=\"\" src={`${item.blurPicUrl}?param=80y80`} alt=\"\" />\n      </div>\n      <div className=\"content px-2\">\n        <div className=\"name text-sm\">{item.name}</div>\n        <div className=\"subname\">{item.artist.name}</div>\n      </div>\n      <div className=\"ico text-gray-600 group-hover:text-black ml-auto mr-4\">\n        <IconChevronRight size={24} stroke={1} />\n      </div>\n    </Link>\n  ),\n};\n\nconst Multimatch: FC<{ list: [] }> = ({ list = [] }) => {\n  const BuildKeys = Object.keys(Build);\n  if (list.length === 0) return null;\n  return (\n    <div className=\"domSearch_multimatch border-b px-8 py-5\">\n      <div className=\"title text-bold\">最佳匹配</div>\n      <div className=\"list mt-5 flex space-x-6\">\n        {list.map(\n          ([item, Dom, order]) =>\n            BuildKeys.includes(order) && <Dom item={item} key={order} />\n        )}\n      </div>\n    </div>\n  );\n};\n\ninterface iProps {\n  songs: [];\n}\n\nconst Songs: FC<iProps> = ({ songs = [] }) => {\n  // const { keywords = \"\", type = \"\" } = useParams();\n  // const { data, isLoading } = useGetSearchMultimatchQuery({ keywords });\n  // const multimatch = data?.result || {};\n  // const list = multimatch.orders?.map((order) => [\n  //   multimatch[order][0],\n  //   Build[order],\n  //   order,\n  // ]);\n  return (\n    <>\n      {/*{isLoading ? (\n        <div className={`flex-center`}>\n          <Loading />\n        </div>\n      ) : (\n        <Multimatch list={list} />\n      )}*/}\n      <div\n        className=\"songs_list\"\n        style={{\n          \"--ui_grid_template\": \"36px / 54px 24px 24px 37% 4fr 5fr 2fr 3fr\",\n        }}\n      >\n        <div className=\"thead\">\n          <div className=\"item grid items-center text-gray-400 ui_grid_template\">\n            <div className=\"index\" />\n            <div className=\"heart\" />\n            <div className=\"download\" />\n            <div className=\"name flex-auto px-2\">音乐标题</div>\n            <div className=\"artist flex-none px-2\">歌手</div>\n            <div className=\"album flex-none px-2\">专辑</div>\n            <div className=\"duration flex-none px-2\">时长</div>\n            <div className=\"pop flex-none px-2\">热度</div>\n          </div>\n        </div>\n        <div className=\"tbody\">\n          {songs.map((item, index) => (\n            <MenuCreate\n              schema={[\n                [\"评论\", \"播放\", \"下一首播放\"],\n                [\"收藏到歌单\", \"分享\", \"复制链接\", \"下载\"],\n              ]}\n              item={item}\n              type=\"song\"\n              key={item.id}\n            >\n              <div\n                tabIndex={2}\n                className={classNames(\n                  \"item grid items-center hover:bg-gray-100 focus:bg-gray-200 focus:outline-none ui_grid_template\",\n                  { \"bg-gray-50\": index % 2 === 0 }\n                )}\n              >\n                <div className=\"index px-2\">\n                  <Rank index={index} id={item.id} />\n                </div>\n                <div className=\"heart text-center\">\n                  <Heart id={item.id} />\n                </div>\n                <div className=\"download text-center\">\n                  <Download />\n                </div>\n                <div className=\"name px-2\">\n                  <Name item={item} />\n                </div>\n                <div className=\"artist flex-none px-2 truncate text-gray-400\">\n                  <Artists artists={item.ar} />\n                </div>\n                <div className=\"album truncate flex-none px-2\">\n                  <Album name={item.al.name} id={item.al.name} />\n                </div>\n                <div className=\"duration text-gray-400 truncate flex-none px-2\">\n                  {dayjs(item.dt).format(\"mm:ss\")}\n                </div>\n                <div className=\"pop\">\n                  <Pop pop={item.pop} />\n                </div>\n              </div>\n            </MenuCreate>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default memo(Songs);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { IconUser } from \"@tabler/icons\";\n\nconst layouts = {\n  \"--grid-template-columns\": \"60px 6fr min-content\",\n};\n\nexport default ({ artists = [] }) => (\n  <div className=\"artists_list _list\" style={layouts}>\n    {artists.map((item, index) => (\n      <div\n        className={classNames(\n          \"item relative grid items-center hover:bg-gray-100\",\n          { \"bg-gray-50\": index % 2 === 1 }\n        )}\n        key={item.id}\n      >\n        <Link to={`/artist/${item.id}`} className=\"absolute inset-0\" />\n        <div className=\"cover\">\n          <img className=\"\" src={`${item.img1v1Url}?param=60y60`} alt=\"\" />\n        </div>\n        <div className=\"name px-2.5 text-sm\">\n          {item.name}\n          {item.alia && (\n            <span className=\"text-gray-400\">({item?.alias[0]})</span>\n          )}\n        </div>\n        {item.accountId && (\n          <span className=\"account bg-red-500 w-4 h-4 rounded-full text-white flex-center\">\n            <IconUser size={12} stroke={3} />\n          </span>\n        )}\n      </div>\n    ))}\n  </div>\n);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\nconst layouts = {\n  \"--grid-template-columns\": \"60px 1fr 1fr\",\n};\n\nexport default ({ albums = [] }) => (\n  <div className=\"albums_list _list\" style={layouts}>\n    {albums.map((item, index) => (\n      <div\n        tabIndex=\"2\"\n        className={classNames(\n          \"item grid items-center relative hover:bg-gray-100\",\n          { \"bg-gray-50\": index % 2 === 1 }\n        )}\n        key={item.id}\n      >\n        <Link\n          className=\"absolute inset-0 z-0\"\n          to={`/playlist/album/${item.id}`}\n        />\n        <div className=\"cover\">\n          <img src={`${item.picUrl}?param=60y60`} alt=\"\" />\n        </div>\n        <div className=\"name px-5 text-sm\">\n          {item.name}\n          {item.alias.length > 0 && (\n            <span className=\"text-gray-400\">{`（${item.alias}）`}</span>\n          )}\n        </div>\n        <div className=\"artist truncate\">\n          <Link\n            to={`/artist/${item.artist.id}`}\n            className=\"ui_text_gray_hover relative z-10\"\n          >\n            {item.artist.name}\n            {item.artist.alias.length > 0 && (\n              <span className=\"text-gray-400\">\n                {`（${item.artist.alias}）`}\n              </span>\n            )}\n          </Link>\n        </div>\n      </div>\n    ))}\n  </div>\n);\n","import React, {FC, memo} from \"react\";\nimport GridVideo from \"@/components/GridVideo\";\n\ninterface iProps {\n  videos: []\n}\n\nconst Videos: FC<iProps> = ({ videos = [] }) => {\n  const list = videos.map(\n    ({ type, title, coverUrl, playTime, creator, vid, durationms }) => ({\n      id: vid,\n      type,\n      title,\n      creator,\n      playCount: playTime,\n      duration: durationms,\n      cover: coverUrl,\n    })\n  );\n  return (\n    <div className=\"videos_list py-5 px-10\">\n      <GridVideo list={list} />\n    </div>\n  );\n};\n\nexport default memo(Videos)\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\nconst layouts = {\n  \"--grid-template-columns\": \"60px 6fr 2fr 5fr\",\n};\n\nexport default ({ playlists = [] }) => (\n  <div className=\"playlists_list _list\" style={layouts}>\n    {playlists.map((item, index) => (\n      <div\n        className={classNames(\n          \"item grid items-center relative hover:bg-gray-100\",\n          { \"bg-gray-50\": index % 2 === 1 }\n        )}\n        key={item.id}\n      >\n        <Link\n          className=\"absolute inset-0 z-0\"\n          to={`/playlist/music/${item.id}`}\n        />\n        <div className=\"cover\">\n          <img className=\"\" src={`${item.coverImgUrl}?param=60y60`} alt=\"\" />\n        </div>\n        <div className=\"name px-3\">{item.name}</div>\n        <div className=\"trackCount text-gray-400\">{item.trackCount}首</div>\n        <div className=\"creator text-gray-300\">\n          by &nbsp;\n          <Link\n            to={`/user/${item.creator.userId}`}\n            className=\"ui_text_black_hover relative z-10\"\n          >\n            {item.creator.nickname}\n          </Link>\n        </div>\n      </div>\n    ))}\n  </div>\n);\n","import React, { useEffect, useRef, useState } from \"react\";\n\nexport default ({ lyrics = [] }) => {\n  const content = useRef();\n  const [status, SetStatus] = useState(false);\n  useEffect(() => {\n    content.current = lyrics.join(\"\\n\").replace(/<b>|<\\/b>/gm, \"\");\n  }, [lyrics]);\n  const handleClip = () => {\n    const input = document.createElement(\"textarea\");\n    input.setAttribute(\"readonly\", \"readonly\");\n    input.textContent = content.current;\n    document.body.appendChild(input);\n    input.select();\n    if (document.execCommand(\"copy\")) {\n      document.execCommand(\"copy\");\n      console.log(\"复制成功\");\n    }\n    document.body.removeChild(input);\n  };\n  return (\n    <div className=\"lrc flex pb-2\">\n      <div className=\"content w-2/3 px-2 text-gray-500\">\n        {lyrics.slice(0, status ? Infinity : 4).map((lrc, index) => (\n          <div key={lrc + index} dangerouslySetInnerHTML={{ __html: lrc }} />\n        ))}\n      </div>\n      <div className=\"actions w-1/3 flex flex-col justify-between\">\n        <div className=\"flex space-x-2.5\">\n          <button\n            type=\"button\"\n            className=\"flex-center border border-gray-400 px-3 h-6 hover:bg-gray-300 rounded-full\"\n            onClick={() => SetStatus(!status)}\n          >\n            {status ? \"收起\" : \"展开\"}\n            歌词\n          </button>\n          <button\n            type=\"button\"\n            className=\"flex-center border border-gray-400 px-3 h-6 hover:bg-gray-300 rounded-full clip\"\n            onClick={handleClip}\n          >\n            复制歌词\n          </button>\n        </div>\n        {status && (\n          <div className=\"flex space-x-2.5\">\n            <button\n              type=\"button\"\n              className=\"flex-center border border-gray-400 px-3 h-6 hover:bg-gray-300 rounded-full\"\n              onClick={() => SetStatus(false)}\n            >\n              收起歌词\n            </button>\n            <button\n              type=\"button\"\n              className=\"flex-center border border-gray-400 px-3 h-6 hover:bg-gray-300 rounded-full clip\"\n              onClick={handleClip}\n            >\n              复制歌词\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { memo } from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\nconst layouts = {\n  \"--grid-template-columns\": \"60px 5fr 2fr\",\n};\n\nconst DJRadios = ({ djRadios = [] }) => (\n  <div className=\"djRadios_list _list\" style={layouts}>\n    {djRadios.map((item, index) => (\n      <div\n        className={classNames(\"item grid items-center hover:bg-gray-100\", {\n          \"bg-gray-50\": index % 2 === 0,\n        })}\n        key={item.id}\n      >\n        <Link to={`/playlist/dj/${item.id}`} className=\"cover\">\n          <img className=\"\" src={`${item.picUrl}?param=60y60`} alt=\"\" />\n        </Link>\n        <div className=\"px-5\">\n          <Link to={`/playlist/dj/${item.id}`} className=\"name\">\n            {item.name}\n          </Link>\n        </div>\n        <div className=\"dj text-gray-300\">\n          by &nbsp;\n          <Link to={`/user/${item.dj.userId}`} className=\"ui_text_gray_hover\">\n            {item.dj.nickname}\n          </Link>\n        </div>\n      </div>\n    ))}\n  </div>\n);\n\nexport default memo(DJRadios);\n","import React, { memo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport DomGender from \"@/components/Gender\";\n\nconst layouts = {\n  \"--grid-template-columns\": \"60px 5fr 2fr\",\n};\n\nconst UserProfiles = ({ userprofiles = [] }) => (\n  <div className=\"userprofiles_list _list\" style={layouts}>\n    {userprofiles.map((item, index) => (\n      <Link\n        to={`/user/${item.userId}`}\n        className={classNames(\"item grid items-center hover:bg-gray-100\", {\n          \"bg-gray-50\": index % 2 === 1,\n        })}\n        key={item.userId}\n      >\n        <div className=\"rounded-full overflow-hidden\">\n          <img src={`${item.avatarUrl}?param=60y60`} alt=\"\" />\n        </div>\n        <div className=\"name px-5\">\n          {item.nickname}\n          &nbsp;\n          <DomGender size={16} gender={item.gender} />\n        </div>\n        <div className=\"signature text-gray-400 ml-auto\">{item.signature}</div>\n      </Link>\n    ))}\n  </div>\n);\n\nexport default memo(UserProfiles);\n","import Songs from \"./Songs\";\nimport Artists from \"./Artists\";\nimport Albums from \"./Albums\";\nimport Videos from \"./Videos\";\nimport Playlists from \"./Playlists\";\nimport Lyrics from \"./Lyrics\";\nimport DJRadios from \"./DJRadios\";\nimport Userprofiles from \"./UserProfiles\";\n\nexport default {\n  单曲: {\n    code: 1,\n    unit: \"首\",\n    limit: 100,\n    Dom: Songs,\n    countName: \"songCount\",\n  },\n  歌手: {\n    code: 100,\n    unit: \"位\",\n    limit: 20,\n    Dom: Artists,\n    countName: \"artistCount\",\n  },\n  专辑: {\n    code: 10,\n    unit: \"张\",\n    limit: 20,\n    Dom: Albums,\n    countName: \"albumCount\",\n  },\n  视频: {\n    code: 1014,\n    unit: \"个\",\n    limit: 24,\n    Dom: Videos,\n    countName: \"videoCount\",\n  },\n  歌单: {\n    code: 1000,\n    unit: \"个\",\n    limit: 20,\n    Dom: Playlists,\n    countName: \"playlistCount\",\n  },\n  歌词: {\n    code: 1006,\n    unit: \"首\",\n    limit: 20,\n    Dom: Lyrics,\n    countName: \"songCount\",\n  },\n  主播电台: {\n    code: 1009,\n    unit: \"个\",\n    limit: 100,\n    Dom: DJRadios,\n    countName: \"djRadiosCount\",\n  },\n  用户: {\n    code: 1002,\n    unit: \"位\",\n    limit: 20,\n    Dom: Userprofiles,\n    countName: \"userprofileCount\",\n  },\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport dayjs from \"dayjs\";\nimport DomMenuCreate from \"@/components/MenuCreate/MenuCreate\";\nimport DomRank from \"@/components/Table/Rank\";\nimport DomHeart from \"@/components/Table/Heart\";\nimport DomDownload from \"@/components/Table/Download\";\nimport DomName from \"@/components/Table/Name\";\nimport DomArtists from \"@/components/Table/Artists\";\nimport DomAlbum from \"@/components/Table/Album\";\nimport DomPop from \"@/components/Table/Pop\";\nimport DomLyricsItem from \"./Item\";\n\nexport default ({ songs: lyrics = [] }) => (\n  <div\n    className=\"lyrics_list\"\n    style={{\n      \"--ui_grid_template\": \"36px / 54px 24px 24px 37% 4fr 5fr 2fr 3fr\",\n    }}\n  >\n    <div className=\"thead\">\n      <div className=\"item grid items-center text-gray-400 ui_grid_template\">\n        <div className=\"index\" />\n        <div className=\"heart\" />\n        <div className=\"download\" />\n        <div className=\"name\">音乐标题</div>\n        <div className=\"artist\">歌手</div>\n        <div className=\"album\">专辑</div>\n        <div className=\"duration\">时长</div>\n        <div className=\"text-gray-400\">热度</div>\n      </div>\n    </div>\n    <div className=\"tbody\">\n      {lyrics.map((item, index) => (\n        <DomMenuCreate\n          schema={[\n            [\"评论\", \"播放\", \"下一首播放\"],\n            [\"收藏到歌单\", \"分享\", \"复制链接\", \"下载\"],\n          ]}\n          item={item}\n          type=\"song\"\n          key={item.id}\n        >\n          <div\n            tabIndex=\"2\"\n            className={classNames(\n              \"item grid items-center hover:bg-gray-100 focus:outline-none focus:bg-gray-200 ui_grid_template\",\n              { \"bg-gray-50\": index % 2 === 0 }\n            )}\n          >\n            <div className=\"index pr-2\">\n              <DomRank index={index} id={item.id} />\n            </div>\n            <div className=\"heart\">\n              <DomHeart id={item.id} />\n            </div>\n            <div className=\"download\">\n              <DomDownload />\n            </div>\n            <div className=\"name flex\">\n              <DomName item={item} />\n            </div>\n            <div className=\"artist truncate\">\n              <DomArtists artists={item.ar} />\n            </div>\n            <div className=\"album truncate\">\n              <DomAlbum name={item.al.name} id={item.al.id} />\n            </div>\n            <div className=\"duration text-gray-400 truncate\">\n              {dayjs(item.dt).format(\"mm:ss\")}\n            </div>\n            <div className=\"pop\">\n              <DomPop pop={item.pop} />\n            </div>\n            <DomLyricsItem lyrics={item.lyrics} />\n          </div>\n        </DomMenuCreate>\n      ))}\n    </div>\n  </div>\n);\n","import { NavLink, Outlet, useParams } from \"react-router-dom\";\nimport React, { memo, useEffect } from \"react\";\nimport { useLocalStorage } from \"react-use\";\nimport classNames from \"classnames\";\nimport config from \"./config\";\nimport { useAppSelector } from \"@/modules/hooks\";\nimport { searchSelector } from \"@/modules/reducers/search/slice\";\n\nconst Layout = () => {\n  const { keywords = \"\", type = \"\" } = useParams();\n  const [searchHistory, setSearchHistory, removeSearchHistory] =\n    useLocalStorage(\"searchHistory\", []);\n  const { count = 0 } = useAppSelector(searchSelector);\n  useEffect(() => {\n    const otherSearchHistory =\n      searchHistory?.filter((otherKeywords) => otherKeywords !== keywords) ||\n      [];\n    setSearchHistory([keywords, ...otherSearchHistory]);\n  }, [keywords]);\n\n  const { unit } = config[type];\n\n  return (\n    <div className=\"domSearch overflow-auto max-h-full flex-auto\">\n      <div className=\"p-8 pb-2.5 border-b\">\n        <div className=\"font-bold text-base\">\n          找到\n          {count}\n          {unit}\n        </div>\n        <div className=\"mt-5 space-x-4\">\n          {Object.keys(config).map((name) => (\n            <NavLink\n              key={name}\n              to={name}\n              className={({ isActive }) =>\n                classNames(\"text-sm\", isActive && \"font-bold\")\n              }\n            >\n              {name}\n            </NavLink>\n          ))}\n        </div>\n        {}\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default memo(Layout);\n","import { Searchs } from \"./types\";\nimport { base } from \"../base\";\n\ninterface ReqSearch {\n  keywords: string;\n  limit: number;\n  type: number;\n  offset: number;\n}\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getCloudSearch: build.query<Searchs, ReqSearch>({\n      query: (body) => ({\n        url: `cloudSearch`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getSearchMultimatch: build.query<Searchs, { keywords: string }>({\n      query: (body) => ({\n        url: `search/multimatch`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetCloudSearchQuery, useGetSearchMultimatchQuery } = api;\n","import React, { createElement, memo, useEffect, useState } from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport {\n  setSearchCount,\n  setSearchValue,\n} from \"@/modules/reducers/search/slice\";\nimport \"./style.scss\";\nimport Loading from \"@/components/Loading\";\nimport Page from \"@/components/Page\";\nimport classNames from \"classnames\";\nimport { useAppDispatch, useAppSelector } from \"@/modules/hooks\";\nimport { useGetCloudSearchQuery } from \"@/modules/services/search\";\nimport config from \"./config\";\n\nconst Search = () => {\n  console.log(\"entry search\");\n  const { keywords = \"\", type = \"\" } = useParams();\n  const dispatch = useAppDispatch();\n  const [page, setPage] = useState(1);\n  const { code, unit, limit, Dom, countName } = config[type];\n\n  const { searchValue } = useAppSelector(({ common }) => common);\n  const { data, isLoading } = useGetCloudSearchQuery({\n    keywords,\n    limit,\n    type: code,\n    offset: (page - 1) * limit,\n  });\n\n  const result = data?.result || {};\n  const count = result[countName];\n  useEffect(() => {\n    dispatch(setSearchCount({ count }));\n  }, [count]);\n  useEffect(() => {\n    if (!searchValue) {\n      dispatch(\n        setSearchValue({\n          searchValue: keywords,\n        })\n      );\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   return () => setPage(1);\n  // }, [keywords, type]);\n  if (isLoading) {\n    return (\n      <div className=\"pt-48 flex-center\">\n        <Loading />\n      </div>\n    );\n  }\n  return createElement(Dom, result);\n};\n\nexport default memo(Search);\n","import React, { memo } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport Search from \"./Search\";\n\nconst Router = () => {\n  return (\n    <Routes>\n      <Route path=\":keywords\" element={<Layout />}>\n        <Route path={`:type`} element={<Search />} />\n        <Route index element={<Navigate to=\"单曲\" replace={true} />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default memo(Router);\n"],"names":["Pop","pop","className","style","width","memo","Songs","songs","map","item","index","MenuCreate","schema","type","key","id","tabIndex","classNames","Rank","Heart","Download","Name","Artists","artists","ar","Album","name","al","dayjs","dt","format","layouts","Videos","videos","list","title","coverUrl","playTime","creator","vid","playCount","duration","durationms","cover","GridVideo","lyrics","content","useRef","useState","status","SetStatus","useEffect","current","join","replace","handleClip","input","document","createElement","setAttribute","textContent","body","appendChild","select","execCommand","console","log","removeChild","slice","Infinity","lrc","dangerouslySetInnerHTML","__html","onClick","DJRadios","djRadios","Link","to","src","picUrl","alt","dj","userId","nickname","UserProfiles","userprofiles","avatarUrl","size","gender","signature","单曲","code","unit","limit","Dom","countName","歌手","img1v1Url","alia","alias","accountId","IconUser","stroke","专辑","albums","length","artist","视频","歌单","playlists","coverImgUrl","trackCount","歌词","主播电台","用户","Layout","useParams","keywords","useLocalStorage","searchHistory","setSearchHistory","useAppSelector","searchSelector","count","otherSearchHistory","filter","otherKeywords","config","Object","keys","NavLink","isActive","Outlet","api","base","endpoints","build","getCloudSearch","query","url","method","getSearchMultimatch","useGetCloudSearchQuery","Search","useGetSearchMultimatchQuery","dispatch","useAppDispatch","page","searchValue","common","offset","data","isLoading","result","setSearchCount","setSearchValue","Loading","Router","Routes","Route","path","element","Navigate"],"sourceRoot":""}