{"version":3,"file":"js/Artist.js?version=272a712d","mappings":"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","sources":["webpack://@wyy/web/./src/features/Artist/components/Detail.tsx","webpack://@wyy/web/./src/features/Artist/layouts/Grid.tsx","webpack://@wyy/web/./src/features/Artist/layouts/List.tsx","webpack://@wyy/web/./src/features/Artist/layouts/Column.tsx","webpack://@wyy/web/./src/features/Artist/components/Album.tsx","webpack://@wyy/web/./src/features/Artist/components/Desc.tsx","webpack://@wyy/web/./src/features/Artist/components/Similarity.tsx","webpack://@wyy/web/./src/features/Artist/config.ts","webpack://@wyy/web/./src/features/Artist/components/MV.tsx","webpack://@wyy/web/./src/features/Artist/Artist.tsx","webpack://@wyy/web/./src/features/Artist/Router.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport { IconFolderPlus, IconCheckbox } from \"@tabler/icons\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n  setDialogUnSubscriptionShow,\n  setToast,\n} from \"@/modules/reducers/mask/slice\";\nimport { useAppDispatch } from \"@/modules/hooks\";\nimport {\n  useGetArtistDetailQuery,\n  usePostArtistSubMutation,\n} from \"@/modules/services/artist\";\n\nconst Detail = () => {\n  const { id = \"\" } = useParams();\n  const dispatch = useAppDispatch();\n  const [subPost, { isLoading: isSubbing }] = usePostArtistSubMutation();\n  const { data } = useGetArtistDetailQuery({ id });\n  const detail = data?.data || {};\n  const isFollowed = detail?.user?.followed || false;\n  const handleUnSubscription = () => {\n    dispatch(\n      setDialogUnSubscriptionShow({\n        artistId: id,\n      })\n    );\n  };\n\n  const handleSubscription = async () => {\n    try {\n      await subPost({\n        id,\n        t: 1,\n      });\n      dispatch(setToast(\"收藏成功！\"));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleToggleSub = async () => {\n    isFollowed ? handleUnSubscription() : await handleSubscription();\n  };\n\n  return (\n    <div className=\"domArtist_header flex p-8\">\n      <div className=\"w-44 h-44 border overflow-hidden rounded\">\n        <img src={`${detail.artist?.cover}?param=200y200`} alt=\"\" />\n      </div>\n      <div className=\"content flex-auto px-5\">\n        <div className=\"name h1 select-text\">{detail.artist?.name}</div>\n        <div className=\"enname my-3 select-text\">\n          {detail.alias?.map((alia) => alia)}\n        </div>\n        <div className=\"actions mt-3 flex space-x-2\">\n          <button\n            onClick={handleToggleSub}\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex items-center text-sm\"\n          >\n            {isFollowed ? (\n              <>\n                <IconCheckbox size={20} stroke={1} />\n                已收藏\n              </>\n            ) : (\n              <>\n                <IconFolderPlus size={20} stroke={1} />\n                收藏\n              </>\n            )}\n          </button>\n          {detail.user && (\n            <Link\n              to={`/user/${detail.user?.userId}`}\n              className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex items-center text-sm\"\n            >\n              个人主页\n            </Link>\n          )}\n        </div>\n        <div className=\"info mt-5 space-x-5\">\n          <span className=\"size\">\n            单曲数:\n            {detail?.artist?.musicSize}\n          </span>\n          <span className=\"size\">\n            专辑数:\n            {detail.artist?.albumSize}\n          </span>\n          <span className=\"size\">\n            MV数:\n            {detail.artist?.mvSize}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Detail);\n","import React, { FC, memo } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport { IconPlayerPlay } from \"@tabler/icons\";\nimport { iProps } from \"./types\";\n\nconst Grid: FC<iProps> = ({ hotAlbums = [] }) => (\n  <div className=\"grid grid-cols-4 p-8 gap-x-20 gap-y-5\">\n    {hotAlbums.map((item) => (\n      <div className=\"item\" key={item.id}>\n        <div className=\"cover rounded overflow-hidden relative group\">\n          <Link to={`/playlist/album/${item.id}`}>\n            <img className=\"\" src={`${item.picUrl}?param=200y200`} alt=\"\" />\n          </Link>\n          <button\n            type=\"button\"\n            className=\"absolute inset-0 ui_themeColor flex-center m-auto w-10 h-10 rounded-full bg-white bg-opacity-90 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"\n          >\n            <IconPlayerPlay size={20} className=\"fill-current\" />\n          </button>\n        </div>\n        <div className=\"name text-sm mt-2\">\n          <Link to={`/playlist/album/${item.id}`} className=\"ui_ellipse\">\n            <span className=\"ui_text_black_hover\">{item.name}</span>\n            {item.alias.map((alia) => (\n              <span className=\"text-gray-500\" key={alia}>\n                {`（${alia}）`}\n              </span>\n            ))}\n          </Link>\n        </div>\n        <div className=\"text-gray-400 mt-2\">\n          {dayjs(item.publishTime).format(\"YYYY-MM-DD\")}\n        </div>\n      </div>\n    ))}\n  </div>\n);\n\nexport default memo(Grid);\n","import React, { FC, memo } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { iProps } from \"./types\";\n\nconst List: FC<iProps> = ({ hotAlbums = [] }) => (\n  <div className=\"list pt-4\">\n    {hotAlbums.map((item, index) => (\n      <div\n        className={classNames(\n          \"list_item pl-5 flex items-center h-20 hover:bg-gray-100\",\n          {\n            \"bg-gray-50\": index % 2 === 0,\n          }\n        )}\n        key={item.id}\n      >\n        <Link\n          className=\"cover border rounded flex-none w-14 h-14\"\n          to={`/playlist/album/${item.id}`}\n        >\n          <img\n            className=\"ui_containimg\"\n            src={`${item.picUrl}?param=100y100`}\n            alt=\"\"\n          />\n        </Link>\n        <Link\n          className=\"name truncate px-2.5\"\n          to={`/playlist/album/${item.id}`}\n        >\n          {item.name}\n          &nbsp;\n          {item.alias?.length > 0 && (\n            <span className=\"text-gray-400\">\n              ({item.alias.map((alia) => alia)})\n            </span>\n          )}\n        </Link>\n        <span className=\"size text-gray-400\">{item.size}首</span>\n        <span className=\"publishTime text-gray-400\">\n          发行时间：\n          {dayjs(item.publishTime).format(\"YYYY-MM-DD\")}\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nexport default memo(List);\n","import React, { FC, memo, useEffect, useState } from \"react\";\nimport { IconPlayerPlay, IconFolderPlus, IconDownload } from \"@tabler/icons\";\n\nimport dayjs from \"dayjs\";\nimport classNames from \"classnames\";\nimport DomTags from \"@/components/Tags\";\nimport DomHeart from \"@/components/Table/Heart\";\nimport { useGetArtistTopSongQuery } from \"@/modules/services/artist\";\nimport { useParams } from \"react-router-dom\";\n\ninterface iProps {}\n\nconst Column: FC<iProps> = () => {\n  const { id = \"\" } = useParams();\n  console.log(\"artist_column\");\n  const [limit, setLimit] = useState(10);\n  const { data } = useGetArtistTopSongQuery({ id });\n  const top50 = data?.songs || [];\n  return (\n    <div className=\"column p-8\">\n      <div className=\"column_item\">\n        <div className=\"cover\">\n          <div className=\"Top50 flex-none bg-black bg-opacity-50 flex-center flex-col font-bold rounded w-full h-full text-white\">\n            <div className=\"text-4xl\">TOP</div>\n            <div className=\"text-6xl\">50</div>\n          </div>\n        </div>\n        <div className=\"aside flex-auto ml-20 w-0\">\n          <div className=\"flex\">\n            <span className=\"font-bold text-base\">热门50首</span>\n            <div className=\"flex items-center\">\n              <button\n                type=\"button\"\n                className=\"flex-none border rounded-full flex-center mx-3 p-1\"\n              >\n                <IconPlayerPlay size={10} className=\"fill-current\" />\n              </button>\n              <span className=\"text-gray-300\">|</span>\n              <button type=\"button\" className=\"mx-3\">\n                <IconFolderPlus size={20} stroke={1} />\n              </button>\n            </div>\n          </div>\n          <div className=\"list mt-2\">\n            {top50.slice(0, limit).map((item, index) => (\n              <div\n                className={classNames(\n                  \"item hover:bg-gray-100 focus:outline-none focus:bg-gray-200\",\n                  { \"bg-gray-50\": index % 2 === 0 }\n                )}\n                tabIndex={2}\n                key={item.id}\n              >\n                <div className=\"index flex-none text-right text-gray-400\">\n                  {String(index + 1).padStart(2, \"0\")}\n                </div>\n                <div className=\"heart flex-none text-center\">\n                  <DomHeart id={item.id} />\n                </div>\n                <div className=\"download flex-none text-center\">\n                  <button\n                    type=\"button\"\n                    className=\"text-gray-500 hover:text-black\"\n                  >\n                    <IconDownload size={16} stroke={1} />\n                  </button>\n                </div>\n                <div className=\"name flex-auto flex flex-auto min-w-0 px-2.5\">\n                  <span\n                    className=\"truncate\"\n                    title={`${item.name}(${item.alia.map((alia) => alia)})`}\n                  >\n                    {item.name}\n                    &nbsp;\n                    <span className=\"text-gray-400\">\n                      {item.alia.map((alia) => alia)}\n                    </span>\n                  </span>\n                  <DomTags item={item} className=\"flex-none\" />\n                </div>\n                <div className=\"duration text-gray-400 flex-none\">\n                  {dayjs(item.dt).format(\"mm:ss\")}\n                </div>\n              </div>\n            ))}\n            {limit === 10 && top50.length > 10 && (\n              <button\n                type=\"button\"\n                className=\"seeMore\"\n                onClick={() => setLimit(50)}\n              >\n                查看全部\n                {top50.length}首 &gt;\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Column);\n","import React, { memo, createElement, ReactNode } from \"react\";\nimport {\n  IconLayoutGrid,\n  IconList,\n  IconLayout,\n  TablerIcon,\n} from \"@tabler/icons\";\nimport classNames from \"classnames\";\nimport Grid from \"../layouts/Grid\";\nimport List from \"../layouts/List\";\nimport Column from \"../layouts/Column\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocalStorage } from \"react-use\";\nimport { useGetArtistAlbumQuery } from \"@/modules/services/artist\";\nimport Loading from \"@/components/Loading\";\n\nexport type Layout = \"Grid\" | \"List\" | \"Column\";\n\nconst navs: [Layout, TablerIcon][] = [\n  [\"Grid\", IconLayoutGrid],\n  [\"List\", IconList],\n  [\"Column\", IconLayout],\n];\n\nconst Contents: { [key in Layout]: ReactNode } = {\n  Grid,\n  List,\n  Column,\n};\n\nexport default memo(function Album() {\n  const { id = \"\" } = useParams();\n  const [layout = \"Grid\", setLayout, remove] = useLocalStorage<Layout>(\n    \"layout\",\n    navs[0][0]\n  );\n  const { data, isLoading } = useGetArtistAlbumQuery({ id });\n  const hotAlbums = data?.hotAlbums || [];\n  const more = data?.more || false;\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <div className=\"domArtist_section relative\">\n      <div className=\"absolute right-8 bottom-full actions ml-auto space-x-0.5 flex rounded-sm overflow-hidden\">\n        {navs.map(([view, Ico]) => (\n          <button\n            key={view}\n            type=\"button\"\n            className={classNames(\n              \"px-1.5 py-0.5 bg-gray-200\",\n              \"handle\",\n              view === layout && \"bg-gray-400 text-white\"\n            )}\n            onClick={() => setLayout(view)}\n          >\n            <Ico size={14} stroke={1} />\n          </button>\n        ))}\n      </div>\n      <div className=\"domArtist_section_layout\">\n        {createElement(Contents[layout], { hotAlbums, id })}\n      </div>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useGetArtistDescQuery } from \"@/modules/services/artist\";\nimport Loading from \"@/components/Loading\";\n\nconst Desc = () => {\n  const { id = \"\" } = useParams();\n  const { data, isLoading } = useGetArtistDescQuery({ id });\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <div className=\"domArtist_section p-8 leading-8 text-sm select-text\">\n      <div className=\"domArtist_subtitle font-bold\">简介</div>\n      <div className=\"domArtist_article text-gray-500 indent-8\">\n        {data?.briefDesc}\n      </div>\n      <br />\n      <br />\n      {data?.introduction?.map((introduction) => (\n        <div key={introduction.ti} className=\"select-text\">\n          <div className=\"domArtist_subtitle font-bold\">{introduction.ti}</div>\n          <div className=\"domArtist_article text-gray-500 whitespace-pre-line\">\n            {introduction.txt}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Desc);\n","import React, { memo, FC } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Loading from \"@/components/Loading\";\nimport { useGetSimiArtistQuery } from \"@/modules/services/artist\";\n\nconst Similarity = () => {\n  const { id = \"\" } = useParams();\n  const { data, isLoading } = useGetSimiArtistQuery({ id });\n\n  const artists = data?.artists || [];\n\n  if (isLoading) return <Loading />;\n\n  if (artists.length === 0) {\n    return (\n      <div className=\"text-center text-gray-400 text-sm pt-16\">\n        没有相似歌手\n      </div>\n    );\n  }\n  return (\n    <div className=\"p-8\">\n      <div className=\"grid grid-cols-5 gap-5\">\n        {artists.map((item) => (\n          <div className={`space-y-2`} key={item.id}>\n            <Link\n              to={`/artist/${item.id}`}\n              className=\"block rounded overflow-hidden border\"\n            >\n              <img\n                loading={`lazy`}\n                className=\"aspect-square object-fit w-full h-full\"\n                src={`${item.picUrl}?param=200y200`}\n                alt=\"\"\n              />\n            </Link>\n            <div>\n              <Link to={`/artist/${item.id}`} className=\"text-sm\">\n                {item.name}\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Similarity);\n","import Album from \"./components/Album\";\nimport Desc from \"./components/Desc\";\nimport MV from \"./components/MV\";\nimport Similarity from \"./components/Similarity\";\n\nexport type Nav = \"Album\" | \"MV\" | \"Desc\" | \"Similarity\";\n\nexport const navs: [string, Nav][] = [\n  [\"专辑\", \"Album\"],\n  [\"MV\", \"MV\"],\n  [\"歌手详情\", \"Desc\"],\n  [\"相似歌手\", \"Similarity\"],\n];\n\nexport const Contents = {\n  Album,\n  MV,\n  Desc,\n  Similarity,\n};\n","import React, { useRef, memo } from \"react\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport GridVideo from \"@/components/GridVideo\";\nimport { useParams } from \"react-router-dom\";\nimport { useGetArtistMVMutation } from \"@/modules/services/artist\";\nimport { useImmer } from \"use-immer\";\nimport Loading from \"@/components/Loading\";\nimport { MV } from \"@/modules/services/types\";\n\nconst limit = 24;\n\nexport default memo(function MV() {\n  const { id = \"\" } = useParams();\n  const [MVs, setMVs] = useImmer([]);\n  const [MVGet, { isLoading }] = useGetArtistMVMutation();\n  // const [hasMore, setHasMore] = useState(true);\n  const more = useRef(true);\n  const offset = useRef(0);\n  const domScroll = useRef<HTMLDivElement>(null);\n  const domObserver = useRef<HTMLDivElement>(null);\n  const handleInit = async () => {\n    if (!more.current) return;\n    try {\n      const { data } = await MVGet({\n        id,\n        limit,\n        offset: offset.current,\n      });\n      offset.current += limit;\n      const mvs = data?.mvs || [];\n      const hasMore = data?.hasMore || false;\n      more.current = hasMore;\n      setMVs((draft) => {\n        draft.push(\n          ...mvs.map(({ id, imgurl, duration, name, playCount }: MV) => ({\n            id,\n            duration,\n            playCount,\n            cover: imgurl,\n            title: name,\n            type: \"0\",\n          }))\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useInfinite(handleInit, domScroll, domObserver);\n\n  return (\n    <div className=\"domArtist_section p-8\">\n      <GridVideo list={MVs} />\n      <div ref={domObserver} className=\"flex-center\">\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n});\n","import React, { createElement, memo, useState } from \"react\";\n\nimport classNames from \"classnames\";\nimport \"./style.scss\";\nimport Detail from \"./components/Detail\";\nimport { Contents, navs } from \"./config\";\n\nexport default memo(function Artist() {\n  const [active, setActive] = useState(navs[0][1]);\n  return (\n    <div className=\"domArtist overflow-auto max-h-full flex-auto\">\n      <Detail />\n      <div>\n        <div className=\"flex mx-8\">\n          <div className=\"flex gap-4 text-sm\">\n            {navs.map(([name, key]) => (\n              <button\n                key={key}\n                onClick={() => setActive(key)}\n                type=\"button\"\n                className={classNames(\n                  active === key && \"font-bold ui_underline\"\n                )}\n              >\n                {name}\n              </button>\n            ))}\n          </div>\n          <div className=\"relative ml-auto\" />\n        </div>\n        {createElement(Contents[active])}\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Artist from \"./Artist\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route path={\":id\"} element={<Artist />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["Detail","detail","useParams","id","dispatch","useAppDispatch","usePostArtistSubMutation","subPost","data","isLoading","useGetArtistDetailQuery","isFollowed","user","followed","handleSubscription","t","setToast","console","log","handleToggleSub","setDialogUnSubscriptionShow","artistId","div","className","img","src","artist","cover","alt","name","alias","map","alia","button","onClick","type","IconCheckbox","size","stroke","IconFolderPlus","Link","to","userId","span","memo","Grid","hotAlbums","item","key","picUrl","IconPlayerPlay","dayjs","publishTime","format","List","index","classNames","length","Column","useState","limit","setLimit","useGetArtistTopSongQuery","top50","songs","slice","tabIndex","String","padStart","DomHeart","IconDownload","title","DomTags","dt","navs","IconLayoutGrid","IconList","IconLayout","Contents","useLocalStorage","layout","setLayout","useGetArtistAlbumQuery","more","Loading","Ico","view","createElement","Desc","useGetArtistDescQuery","briefDesc","br","introduction","ti","txt","Similarity","useGetSimiArtistQuery","artists","loading","Album","MV","useImmer","MVs","setMVs","useGetArtistMVMutation","MVGet","useRef","offset","domScroll","domObserver","handleInit","mvs","hasMore","current","draft","push","imgurl","duration","playCount","useInfinite","GridVideo","list","ref","active","setActive","Routes","Route","path","element","Artist"],"sourceRoot":""}