{"version":3,"file":"js/Artist.js?version=e7ecaf92","mappings":"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","sources":["webpack://@wyy/web/./src/features/Artist/components/Detail.tsx","webpack://@wyy/web/./src/features/Artist/layouts/Grid.tsx","webpack://@wyy/web/./src/features/Artist/layouts/List.tsx","webpack://@wyy/web/./src/features/Artist/layouts/Column.tsx","webpack://@wyy/web/./src/features/Artist/components/Album.tsx","webpack://@wyy/web/./src/features/Artist/components/Desc.tsx","webpack://@wyy/web/./src/features/Artist/components/MV.tsx","webpack://@wyy/web/./src/features/Artist/components/Similarity.tsx","webpack://@wyy/web/./src/features/Artist/config.ts","webpack://@wyy/web/./src/features/Artist/Artist.tsx","webpack://@wyy/web/./src/features/Artist/Router.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport { IconFolderPlus, IconCheckbox } from \"@tabler/icons\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { setDialogUnSubscriptionShow } from \"@/modules/reducers/mask/slice\";\nimport { useAppDispatch } from \"@/modules/hooks\";\nimport {\n  useGetArtistDetailQuery,\n  usePostArtistSubMutation,\n} from \"@/modules/services/artist\";\nimport { useToast } from \"@/components/Toast\";\n\nconst Detail = () => {\n  const { id = \"\" } = useParams();\n  const toast = useToast();\n  const dispatch = useAppDispatch();\n  const [subPost, { isLoading: isSubbing }] = usePostArtistSubMutation();\n  const { data } = useGetArtistDetailQuery({ id });\n  const detail = data?.data || {};\n  const isFollowed = detail?.user?.followed || false;\n  const handleUnSubscription = () => {\n    dispatch(\n      setDialogUnSubscriptionShow({\n        artistId: id,\n      })\n    );\n  };\n\n  const handleSubscription = async () => {\n    try {\n      await subPost({\n        id,\n        t: 1,\n      });\n      toast(\"收藏成功！\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleToggleSub = async () => {\n    isFollowed ? handleUnSubscription() : await handleSubscription();\n  };\n\n  return (\n    <div className=\"domArtist_header flex p-8\">\n      <div className=\"w-44 h-44 border overflow-hidden rounded\">\n        <img src={`${detail.artist?.cover}?param=200y200`} alt=\"\" />\n      </div>\n      <div className=\"content flex-auto px-5\">\n        <div className=\"name h1 select-text\">{detail.artist?.name}</div>\n        <div className=\"enname my-3 select-text\">\n          {detail.alias?.map((alia) => alia)}\n        </div>\n        <div className=\"actions mt-3 flex space-x-2\">\n          <button\n            onClick={handleToggleSub}\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex items-center text-sm\"\n          >\n            {isFollowed ? (\n              <>\n                <IconCheckbox size={20} stroke={1} />\n                已收藏\n              </>\n            ) : (\n              <>\n                <IconFolderPlus size={20} stroke={1} />\n                收藏\n              </>\n            )}\n          </button>\n          {detail.user && (\n            <Link\n              to={`/user/${detail.user?.userId}`}\n              className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex items-center text-sm\"\n            >\n              个人主页\n            </Link>\n          )}\n        </div>\n        <div className=\"info mt-5 space-x-5\">\n          <span className=\"size\">\n            单曲数:\n            {detail?.artist?.musicSize}\n          </span>\n          <span className=\"size\">\n            专辑数:\n            {detail.artist?.albumSize}\n          </span>\n          <span className=\"size\">\n            MV数:\n            {detail.artist?.mvSize}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Detail);\n","import React, { FC, memo } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport { IconPlayerPlay } from \"@tabler/icons\";\nimport { iProps } from \"./types\";\n\nconst Grid: FC<iProps> = ({ hotAlbums = [] }) => (\n  <div className=\"grid grid-cols-4 p-8 gap-x-20 gap-y-5\">\n    {hotAlbums.map((item) => (\n      <div className=\"item\" key={item.id}>\n        <div className=\"cover rounded overflow-hidden relative group\">\n          <Link to={`/playlist/album/${item.id}`}>\n            <img className=\"\" src={`${item.picUrl}?param=200y200`} alt=\"\" />\n          </Link>\n          <button\n            type=\"button\"\n            className=\"absolute inset-0 ui_themeColor flex-center m-auto w-10 h-10 rounded-full bg-white bg-opacity-90 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"\n          >\n            <IconPlayerPlay size={20} className=\"fill-current\" />\n          </button>\n        </div>\n        <div className=\"name text-sm mt-2\">\n          <Link to={`/playlist/album/${item.id}`} className=\"ui_ellipse\">\n            <span className=\"ui_text_black_hover\">{item.name}</span>\n            {item.alias.map((alia) => (\n              <span className=\"text-gray-500\" key={alia}>\n                {`（${alia}）`}\n              </span>\n            ))}\n          </Link>\n        </div>\n        <div className=\"text-gray-400 mt-2\">\n          {dayjs(item.publishTime).format(\"YYYY-MM-DD\")}\n        </div>\n      </div>\n    ))}\n  </div>\n);\n\nexport default memo(Grid);\n","import React, { FC, memo } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { iProps } from \"./types\";\n\nconst List: FC<iProps> = ({ hotAlbums = [] }) => (\n  <div className=\"list pt-4\">\n    {hotAlbums.map((item, index) => (\n      <div\n        className={classNames(\n          \"list_item pl-5 flex items-center h-20 hover:bg-gray-100\",\n          {\n            \"bg-gray-50\": index % 2 === 0,\n          }\n        )}\n        key={item.id}\n      >\n        <Link\n          className=\"cover border rounded flex-none w-14 h-14\"\n          to={`/playlist/album/${item.id}`}\n        >\n          <img\n            className=\"ui_containimg\"\n            src={`${item.picUrl}?param=100y100`}\n            alt=\"\"\n          />\n        </Link>\n        <Link\n          className=\"name truncate px-2.5\"\n          to={`/playlist/album/${item.id}`}\n        >\n          {item.name}\n          &nbsp;\n          {item.alias?.length > 0 && (\n            <span className=\"text-gray-400\">\n              ({item.alias.map((alia) => alia)})\n            </span>\n          )}\n        </Link>\n        <span className=\"size text-gray-400\">{item.size}首</span>\n        <span className=\"publishTime text-gray-400\">\n          发行时间：\n          {dayjs(item.publishTime).format(\"YYYY-MM-DD\")}\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nexport default memo(List);\n","import React, { FC, memo, useEffect, useState } from \"react\";\nimport { IconPlayerPlay, IconFolderPlus, IconDownload } from \"@tabler/icons\";\n\nimport dayjs from \"dayjs\";\nimport classNames from \"classnames\";\nimport DomTags from \"@/components/Tags\";\nimport DomHeart from \"@/components/Table/Heart\";\nimport { useGetArtistTopSongQuery } from \"@/modules/services/artist\";\nimport { useParams } from \"react-router-dom\";\n\ninterface iProps {}\n\nconst Column: FC<iProps> = () => {\n  const { id = \"\" } = useParams();\n  console.log(\"artist_column\");\n  const [limit, setLimit] = useState(10);\n  const { data } = useGetArtistTopSongQuery({ id });\n  const top50 = data?.songs || [];\n  return (\n    <div className=\"column p-8\">\n      <div className=\"column_item\">\n        <div className=\"cover\">\n          <div className=\"Top50 flex-none bg-black bg-opacity-50 flex-center flex-col font-bold rounded w-full h-full text-white\">\n            <div className=\"text-4xl\">TOP</div>\n            <div className=\"text-6xl\">50</div>\n          </div>\n        </div>\n        <div className=\"aside flex-auto ml-20 w-0\">\n          <div className=\"flex\">\n            <span className=\"font-bold text-base\">热门50首</span>\n            <div className=\"flex items-center\">\n              <button\n                type=\"button\"\n                className=\"flex-none border rounded-full flex-center mx-3 p-1\"\n              >\n                <IconPlayerPlay size={10} className=\"fill-current\" />\n              </button>\n              <span className=\"text-gray-300\">|</span>\n              <button type=\"button\" className=\"mx-3\">\n                <IconFolderPlus size={20} stroke={1} />\n              </button>\n            </div>\n          </div>\n          <div className=\"list mt-2\">\n            {top50.slice(0, limit).map((item, index) => (\n              <div\n                className={classNames(\n                  \"item hover:bg-gray-100 focus:outline-none focus:bg-gray-200\",\n                  { \"bg-gray-50\": index % 2 === 0 }\n                )}\n                tabIndex={2}\n                key={item.id}\n              >\n                <div className=\"index flex-none text-right text-gray-400\">\n                  {String(index + 1).padStart(2, \"0\")}\n                </div>\n                <div className=\"heart flex-none text-center\">\n                  <DomHeart id={item.id} />\n                </div>\n                <div className=\"download flex-none text-center\">\n                  <button\n                    type=\"button\"\n                    className=\"text-gray-500 hover:text-black\"\n                  >\n                    <IconDownload size={16} stroke={1} />\n                  </button>\n                </div>\n                <div className=\"name flex-auto flex flex-auto min-w-0 px-2.5\">\n                  <span\n                    className=\"truncate\"\n                    title={`${item.name}(${item.alia.map((alia) => alia)})`}\n                  >\n                    {item.name}\n                    &nbsp;\n                    <span className=\"text-gray-400\">\n                      {item.alia.map((alia) => alia)}\n                    </span>\n                  </span>\n                  <DomTags item={item} className=\"flex-none\" />\n                </div>\n                <div className=\"duration text-gray-400 flex-none\">\n                  {dayjs(item.dt).format(\"mm:ss\")}\n                </div>\n              </div>\n            ))}\n            {limit === 10 && top50.length > 10 && (\n              <button\n                type=\"button\"\n                className=\"seeMore\"\n                onClick={() => setLimit(50)}\n              >\n                查看全部\n                {top50.length}首 &gt;\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Column);\n","import React, { memo, createElement, ReactNode } from \"react\";\nimport {\n  IconLayoutGrid,\n  IconList,\n  IconLayout,\n  TablerIcon,\n} from \"@tabler/icons\";\nimport classNames from \"classnames\";\nimport Grid from \"../layouts/Grid\";\nimport List from \"../layouts/List\";\nimport Column from \"../layouts/Column\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocalStorage } from \"react-use\";\nimport { useGetArtistAlbumQuery } from \"@/modules/services/artist\";\nimport Loading from \"@/components/Loading\";\n\nexport type Layout = \"Grid\" | \"List\" | \"Column\";\n\nconst navs: [Layout, TablerIcon][] = [\n  [\"Grid\", IconLayoutGrid],\n  [\"List\", IconList],\n  [\"Column\", IconLayout],\n];\n\nconst Contents: { [key in Layout]: ReactNode } = {\n  Grid,\n  List,\n  Column,\n};\n\nexport default memo(function Album() {\n  const { id = \"\" } = useParams();\n  const [layout = \"Grid\", setLayout, remove] = useLocalStorage<Layout>(\n    \"layout\",\n    navs[0][0]\n  );\n  const { data, isLoading } = useGetArtistAlbumQuery({ id });\n  const hotAlbums = data?.hotAlbums || [];\n  const more = data?.more || false;\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <div className=\"domArtist_section relative\">\n      <div className=\"absolute right-8 bottom-full actions ml-auto space-x-0.5 flex rounded-sm overflow-hidden\">\n        {navs.map(([view, Ico]) => (\n          <button\n            key={view}\n            type=\"button\"\n            className={classNames(\n              \"px-1.5 py-0.5 bg-gray-200\",\n              \"handle\",\n              view === layout && \"bg-gray-400 text-white\"\n            )}\n            onClick={() => setLayout(view)}\n          >\n            <Ico size={14} stroke={1} />\n          </button>\n        ))}\n      </div>\n      <div className=\"domArtist_section_layout\">\n        {createElement(Contents[layout], { hotAlbums, id })}\n      </div>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useGetArtistDescQuery } from \"@/modules/services/artist\";\nimport Loading from \"@/components/Loading\";\n\nconst Desc = () => {\n  const { id = \"\" } = useParams();\n  const { data, isLoading } = useGetArtistDescQuery({ id });\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <div className=\"domArtist_section p-8 leading-8 text-sm select-text\">\n      <div className=\"domArtist_subtitle font-bold\">简介</div>\n      <div className=\"domArtist_article text-gray-500 indent-8\">\n        {data?.briefDesc}\n      </div>\n      <br />\n      <br />\n      {data?.introduction?.map((introduction) => (\n        <div key={introduction.ti} className=\"select-text\">\n          <div className=\"domArtist_subtitle font-bold\">{introduction.ti}</div>\n          <div className=\"domArtist_article text-gray-500 whitespace-pre-line\">\n            {introduction.txt}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Desc);\n","import React, { useRef, memo } from \"react\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport GridVideo from \"@/components/GridVideo\";\nimport { useParams } from \"react-router-dom\";\nimport { useGetArtistMVMutation } from \"@/modules/services/artist\";\nimport { useImmer } from \"use-immer\";\nimport Loading from \"@/components/Loading\";\nimport { MV } from \"@/modules/services/types\";\n\nconst limit = 24;\n\nexport default memo(function MV() {\n  const { id = \"\" } = useParams();\n  const [MVs, setMVs] = useImmer([]);\n  const [MVGet, { isLoading }] = useGetArtistMVMutation();\n  // const [hasMore, setHasMore] = useState(true);\n  const more = useRef(true);\n  const offset = useRef(0);\n  const domScroll = useRef<HTMLDivElement>(null);\n  const domObserver = useRef<HTMLDivElement>(null);\n  const handleInit = async () => {\n    if (!more.current) return;\n    try {\n      const { data } = await MVGet({\n        id,\n        limit,\n        offset: offset.current,\n      });\n      offset.current += limit;\n      const mvs = data?.mvs || [];\n      const hasMore = data?.hasMore || false;\n      more.current = hasMore;\n      setMVs((draft) => {\n        draft.push(\n          ...mvs.map(({ id, imgurl, duration, name, playCount }: MV) => ({\n            id,\n            duration,\n            playCount,\n            cover: imgurl,\n            title: name,\n            type: \"0\",\n          }))\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useInfinite(handleInit, domScroll, domObserver);\n\n  return (\n    <div className=\"domArtist_section p-8\">\n      <GridVideo list={MVs} />\n      <div ref={domObserver} className=\"flex-center\">\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n});\n","import React, { memo, FC } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Loading from \"@/components/Loading\";\nimport { useGetSimiArtistQuery } from \"@/modules/services/artist\";\n\nconst Similarity = () => {\n  const { id = \"\" } = useParams();\n  const { data, isLoading } = useGetSimiArtistQuery({ id });\n\n  const artists = data?.artists || [];\n\n  if (isLoading) return <Loading />;\n\n  if (artists.length === 0) {\n    return (\n      <div className=\"text-center text-gray-400 text-sm pt-16\">\n        没有相似歌手\n      </div>\n    );\n  }\n  return (\n    <div className=\"p-8\">\n      <div className=\"grid grid-cols-5 gap-5\">\n        {artists.map((item) => (\n          <div className={`space-y-2`} key={item.id}>\n            <Link\n              to={`/artist/${item.id}`}\n              className=\"block rounded overflow-hidden border\"\n            >\n              <img\n                loading={`lazy`}\n                className=\"aspect-square object-fit w-full h-full\"\n                src={`${item.picUrl}?param=200y200`}\n                alt=\"\"\n              />\n            </Link>\n            <div>\n              <Link to={`/artist/${item.id}`} className=\"text-sm\">\n                {item.name}\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Similarity);\n","import Album from \"./components/Album\";\nimport Desc from \"./components/Desc\";\nimport MV from \"./components/MV\";\nimport Similarity from \"./components/Similarity\";\n\nexport type Nav = \"Album\" | \"MV\" | \"Desc\" | \"Similarity\";\n\nexport const navs: [string, Nav][] = [\n  [\"专辑\", \"Album\"],\n  [\"MV\", \"MV\"],\n  [\"歌手详情\", \"Desc\"],\n  [\"相似歌手\", \"Similarity\"],\n];\n\nexport const Contents = {\n  Album,\n  MV,\n  Desc,\n  Similarity,\n};\n","import React, { createElement, memo, useState } from \"react\";\n\nimport classNames from \"classnames\";\nimport \"./style.scss\";\nimport Detail from \"./components/Detail\";\nimport { Contents, navs } from \"./config\";\n\nexport default memo(function Artist() {\n  const [active, setActive] = useState(navs[0][1]);\n  return (\n    <div className=\"domArtist overflow-auto max-h-full flex-auto\">\n      <Detail />\n      <div>\n        <div className=\"flex mx-8\">\n          <div className=\"flex gap-4 text-sm\">\n            {navs.map(([name, key]) => (\n              <button\n                key={key}\n                onClick={() => setActive(key)}\n                type=\"button\"\n                className={classNames(\n                  active === key && \"font-bold ui_underline\"\n                )}\n              >\n                {name}\n              </button>\n            ))}\n          </div>\n          <div className=\"relative ml-auto\" />\n        </div>\n        {createElement(Contents[active])}\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Artist from \"./Artist\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route path={\":id\"} element={<Artist />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["Detail","detail","useParams","id","toast","useToast","dispatch","useAppDispatch","usePostArtistSubMutation","subPost","isLoading","useGetArtistDetailQuery","data","isFollowed","user","followed","handleSubscription","t","console","log","handleToggleSub","setDialogUnSubscriptionShow","artistId","div","className","img","src","artist","cover","alt","name","alias","map","alia","button","onClick","type","IconCheckbox","size","stroke","IconFolderPlus","Link","to","userId","span","memo","Grid","hotAlbums","item","key","picUrl","IconPlayerPlay","dayjs","publishTime","format","List","index","classNames","length","Column","useState","limit","setLimit","useGetArtistTopSongQuery","top50","songs","slice","tabIndex","String","padStart","DomHeart","IconDownload","title","DomTags","dt","navs","IconLayoutGrid","IconList","IconLayout","Contents","useLocalStorage","layout","setLayout","useGetArtistAlbumQuery","more","Loading","view","Ico","createElement","Desc","useGetArtistDescQuery","briefDesc","br","introduction","ti","txt","Similarity","useGetSimiArtistQuery","artists","loading","Album","MV","useImmer","MVs","setMVs","useGetArtistMVMutation","MVGet","useRef","offset","domScroll","domObserver","handleInit","mvs","hasMore","current","draft","push","imgurl","duration","playCount","useInfinite","GridVideo","list","ref","active","setActive","Routes","Route","path","element","Artist"],"sourceRoot":""}