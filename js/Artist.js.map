{"version":3,"file":"js/Artist.js?version=e07280b7","mappings":"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","sources":["webpack://wyy/./src/features/Artist/components/layouts/Grid.tsx","webpack://wyy/./src/features/Artist/components/layouts/List.tsx","webpack://wyy/./src/features/Artist/components/layouts/Column.tsx","webpack://wyy/./src/features/Artist/components/Album.tsx","webpack://wyy/./src/features/Artist/components/MV.tsx","webpack://wyy/./src/features/Artist/components/Detail.tsx","webpack://wyy/./src/features/Artist/components/Similarity.tsx","webpack://wyy/./src/features/Artist/components/Header.tsx","webpack://wyy/./src/features/Artist/Artist.tsx","webpack://wyy/./src/features/Artist/Router.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport { IconPlayerPlay } from \"@tabler/icons\";\n\nexport default memo(({ hotAlbums = [] }) => (\n  <div className=\"grid grid-cols-4 p-8 gap-x-20 gap-y-5\">\n    {hotAlbums.map((item) => (\n      <div className=\"item\" key={item.id}>\n        <div className=\"cover rounded overflow-hidden relative group\">\n          <Link to={`/playlist/album/${item.id}`}>\n            <img className=\"\" src={`${item.picUrl}?param=200y200`} alt=\"\" />\n          </Link>\n          <button\n            type=\"button\"\n            className=\"absolute inset-0 ui_themeColor flex-center m-auto w-10 h-10 rounded-full bg-white bg-opacity-90 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"\n          >\n            <IconPlayerPlay size={20} className=\"fill-current\" />\n          </button>\n        </div>\n        <div className=\"name text-sm mt-2\">\n          <Link to={`/playlist/album/${item.id}`} className=\"ui_ellipse\">\n            <span className=\"ui_text_black_hover\">{item.name}</span>\n            {item.alias.map((alia) => (\n              <span className=\"text-gray-500\" key={alia}>\n                {`（${alia}）`}\n              </span>\n            ))}\n          </Link>\n        </div>\n        <div className=\"text-gray-400 mt-2\">\n          {dayjs(item.publishTime).format(\"YYYY-MM-DD\")}\n        </div>\n      </div>\n    ))}\n  </div>\n));\n","import React, { memo } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nexport default memo(({ hotAlbums = [] }) => (\n  <div className=\"list pt-4\">\n    {hotAlbums.map((item, index) => (\n      <div\n        className={classNames(\n          \"list_item pl-5 flex items-center h-20 hover:bg-gray-100\",\n          {\n            \"bg-gray-50\": index % 2 === 0,\n          }\n        )}\n        key={item.id}\n      >\n        <Link\n          className=\"cover border rounded flex-none w-14 h-14\"\n          to={`/playlist/album/${item.id}`}\n        >\n          <img\n            className=\"ui_containimg\"\n            src={`${item.picUrl}?param=100y100`}\n            alt=\"\"\n          />\n        </Link>\n        <Link\n          className=\"name truncate px-2.5\"\n          to={`/playlist/album/${item.id}`}\n        >\n          {item.name}\n          &nbsp;\n          {item.alias?.length > 0 && (\n            <span className=\"text-gray-400\">\n              ({item.alias.map((alia) => alia)})\n            </span>\n          )}\n        </Link>\n        <span className=\"size text-gray-400\">{item.size}首</span>\n        <span className=\"publishTime text-gray-400\">\n          发行时间：\n          {dayjs(item.publishTime).format(\"YYYY-MM-DD\")}\n        </span>\n      </div>\n    ))}\n  </div>\n));\n","import React, { memo, useEffect, useState } from \"react\";\nimport { IconPlayerPlay, IconFolderPlus, IconDownload } from \"@tabler/icons\";\n\nimport dayjs from \"dayjs\";\nimport classNames from \"classnames\";\nimport DomTags from \"@/components/Tags\";\nimport DomHeart from \"@/components/Table/Heart\";\nimport { apiArtistTopSong } from \"@/api\";\n\nexport default memo(({ hotAlbums = [], id }) => {\n  console.log(\"artist_column\");\n  const [top50, setTop50] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const handleInit = async () => {\n    try {\n      const { songs } = await apiArtistTopSong({\n        id,\n      });\n      setTop50(songs);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"column p-8\">\n      <div className=\"column_item\">\n        <div className=\"cover\">\n          <div className=\"Top50 flex-none bg-black bg-opacity-50 flex-center flex-col font-bold rounded w-full h-full text-white\">\n            <div className=\"text-4xl\">TOP</div>\n            <div className=\"text-6xl\">50</div>\n          </div>\n        </div>\n        <div className=\"aside flex-auto ml-20 w-0\">\n          <div className=\"flex\">\n            <span className=\"font-bold text-base\">热门50首</span>\n            <div className=\"flex items-center\">\n              <button\n                type=\"button\"\n                className=\"flex-none border rounded-full flex-center mx-3 p-1\"\n              >\n                <IconPlayerPlay size={10} className=\"fill-current\" />\n              </button>\n              <span className=\"text-gray-300\">|</span>\n              <button type=\"button\" className=\"mx-3\">\n                <IconFolderPlus size={20} stroke={1} />\n              </button>\n            </div>\n          </div>\n          <div className=\"list mt-2\">\n            {top50.slice(0, limit).map((item, index) => (\n              <div\n                className={classNames(\n                  \"item hover:bg-gray-100 focus:outline-none focus:bg-gray-200\",\n                  { \"bg-gray-50\": index % 2 === 0 }\n                )}\n                tabIndex=\"2\"\n                key={item.id}\n              >\n                <div className=\"index flex-none text-right text-gray-400\">\n                  {String(index + 1).padStart(2, 0)}\n                </div>\n                <div className=\"heart flex-none text-center\">\n                  <DomHeart id={item.id} />\n                </div>\n                <div className=\"download flex-none text-center\">\n                  <button\n                    type=\"button\"\n                    className=\"text-gray-500 hover:text-black\"\n                  >\n                    <IconDownload size={16} stroke={1} />\n                  </button>\n                </div>\n                <div className=\"name flex-auto flex flex-auto min-w-0 px-2.5\">\n                  <span\n                    className=\"truncate\"\n                    title={`${item.name}(${item.alia.map((alia) => alia)})`}\n                  >\n                    {item.name}\n                    &nbsp;\n                    <span className=\"text-gray-400\">\n                      {item.alia.map((alia) => alia)}\n                    </span>\n                  </span>\n                  <DomTags item={item} className=\"flex-none\" />\n                </div>\n                <div className=\"duration text-gray-400 flex-none\">\n                  {dayjs(item.dt).format(\"mm:ss\")}\n                </div>\n              </div>\n            ))}\n            {limit === 10 && top50.length > 10 && (\n              <button\n                type=\"button\"\n                className=\"seeMore\"\n                onClick={() => setLimit(50)}\n              >\n                查看全部\n                {top50.length}首 &gt;\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, {\n  useState,\n  useEffect,\n  memo,\n  createElement,\n  ReactNode,\n} from \"react\";\nimport {\n  IconLayoutGrid,\n  IconList,\n  IconLayout,\n  TablerIcon,\n} from \"@tabler/icons\";\nimport classNames from \"classnames\";\nimport { apiArtistAlbum } from \"@/api\";\nimport Grid from \"./layouts/Grid\";\nimport List from \"./layouts/List\";\nimport Column from \"./layouts/Column\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocalStorage } from \"react-use\";\n\nexport type Layout = \"Grid\" | \"List\" | \"Column\";\n\nconst navs: [Layout, TablerIcon][] = [\n  [\"Grid\", IconLayoutGrid],\n  [\"List\", IconList],\n  [\"Column\", IconLayout],\n];\n\nconst Contents: { [key in Layout]: ReactNode } = {\n  Grid,\n  List,\n  Column,\n};\n\nexport default memo(function Album() {\n  const { id } = useParams();\n  const [layout = \"Grid\", setLayout, remove] = useLocalStorage<Layout>(\n    \"layout\",\n    navs[0][0]\n  );\n  const [album, setAlbum] = useState({ hotAlbums: [], more: null });\n\n  const handleInit = async () => {\n    try {\n      const { hotAlbums, more } = await apiArtistAlbum({\n        id,\n      });\n\n      setAlbum({ hotAlbums, more });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"domArtist_section relative\">\n      <div className=\"absolute right-8 bottom-full actions ml-auto space-x-0.5 flex rounded-sm overflow-hidden\">\n        {navs.map(([view, Ico]) => (\n          <button\n            key={view}\n            type=\"button\"\n            className={classNames(\n              \"px-1.5 py-0.5 bg-gray-200\",\n              \"handle\",\n              view === layout && \"bg-gray-400 text-white\"\n            )}\n            onClick={() => setLayout(view)}\n          >\n            <Ico size={14} stroke={1} />\n          </button>\n        ))}\n      </div>\n      <div className=\"domArtist_section_layout\">\n        {createElement(Contents[layout], { hotAlbums: album.hotAlbums, id })}\n      </div>\n    </div>\n  );\n});\n","import React, { useState, useRef, memo } from \"react\";\nimport { apiArtistMV } from \"@/api\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport GridVideo from \"@/components/GridVideo\";\nimport { useParams } from \"react-router-dom\";\n\nexport default memo(function MV() {\n  const { id } = useParams();\n  const [MVs, setMVs] = useState([]);\n  // const [hasMore, setHasMore] = useState(true);\n  const more = useRef(true);\n  const offset = useRef(0);\n  const domScroll = useRef<HTMLDivElement>(null);\n  const domObserver = useRef<HTMLDivElement>(null);\n  const limit = 24;\n  const handleInit = async () => {\n    if (!more.current) return;\n    try {\n      const { mvs, time, hasMore } = await apiArtistMV({\n        id,\n        limit,\n        offset: offset.current,\n      });\n      offset.current += limit;\n      more.current = hasMore;\n      setMVs((prev) => [\n        ...prev,\n        ...mvs.map(({ id, imgurl, duration, name, playCount }) => ({\n          id,\n          duration,\n          playCount,\n          cover: imgurl,\n          title: name,\n          type: \"0\",\n        })),\n      ]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useInfinite(handleInit, domScroll, domObserver);\n\n  return (\n    <div className=\"domArtist_section p-8\">\n      <GridVideo list={MVs} />\n      <div ref={domObserver} />\n    </div>\n  );\n});\n","import React, { memo, useEffect, useState } from \"react\";\nimport { apiArtistDesc } from \"@/api\";\nimport { useParams } from \"react-router-dom\";\n\nexport default memo(function Detail() {\n  const { id } = useParams();\n  const [desc, setDesc] = useState({});\n  const handleInit = async () => {\n    try {\n      const desc = await apiArtistDesc({\n        id,\n      });\n      setDesc(desc);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"domArtist_section p-8 leading-8 text-sm select-text\">\n      <div className=\"domArtist_subtitle font-bold\">简介</div>\n      <div\n        className=\"domArtist_article text-gray-500\"\n        style={{ textIndent: \"2em\" }}\n      >\n        {desc.briefDesc}\n      </div>\n      <br />\n      <br />\n      {desc.introduction?.map((introduction) => (\n        <div key={introduction.ti} className=\"select-text\">\n          <div className=\"domArtist_subtitle font-bold\">{introduction.ti}</div>\n          <div className=\"domArtist_article text-gray-500 whitespace-pre-line\">\n            {introduction.txt}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n});\n","import React, { useState, useEffect, memo } from \"react\";\nimport { apiSimiArtist } from \"@/api\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Loading from \"@/components/Loading\";\n\nexport default memo(function Similarity() {\n  const { id } = useParams();\n  const [simiArtists, setSimiArtists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const handleInit = async () => {\n    try {\n      const { artists } = await apiSimiArtist({\n        id,\n      });\n      setSimiArtists(artists);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center pt-12\">\n        <Loading />\n      </div>\n    );\n  }\n  if (simiArtists.length === 0) {\n    return (\n      <div className=\"text-center text-gray-400 text-sm pt-16\">\n        没有相似歌手\n      </div>\n    );\n  }\n  return (\n    <div className=\"domArtist_section p-8\">\n      <div className=\"grid grid-cols-5 gap-5\">\n        {simiArtists.map((item) => (\n          <div className=\"item\" key={item.id}>\n            <div className=\"cover rounded overflow-hidden border\">\n              <Link to={`/artist/${item.id}`} className=\"\">\n                <img\n                  loading={`lazy`}\n                  className=\"aspect-square\"\n                  src={`${item.picUrl}?param=200y200`}\n                  alt=\"\"\n                />\n              </Link>\n            </div>\n            <div className=\"footer text-sm mt-2\">\n              <Link to={`/artist/${item.id}`} className=\"\">\n                {item.name}\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n});\n","import React, { memo, useEffect, useMemo, useState } from \"react\";\nimport { IconFolderPlus, IconCheckbox } from \"@tabler/icons\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n  setDialogUnSubscriptionShow,\n  setToast,\n} from \"@/modules/reducers/mask/slice\";\nimport { apiArtistDetail, apiArtistSub } from \"@/api\";\nimport { useRefreshArtistSublist } from \"@/hooks/useHelp\";\nimport { useAppDispatch, useAppSelector } from \"@/modules/hooks\";\n\nexport default memo(function Header() {\n  const { id } = useParams();\n  const { artistSublist } = useAppSelector(({ account }) => account);\n\n  const isSub = useMemo(\n    () => artistSublist.find((item) => item.id === Number(id)),\n    [artistSublist, id]\n  );\n  const dispatch = useAppDispatch();\n  const [detail, setDetail] = useState({});\n  const handleInit = async () => {\n    try {\n      const { data: detail } = await apiArtistDetail({\n        id,\n      });\n      setDetail(detail);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleUnSubscription = () => {\n    dispatch(\n      setDialogUnSubscriptionShow({\n        artistId: id,\n      })\n    );\n  };\n\n  const handleSubscription = async () => {\n    try {\n      await apiArtistSub({\n        id,\n        t: 1,\n      });\n      dispatch(setToast(\"收藏成功！\"));\n      useRefreshArtistSublist(dispatch);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleToggleSub = async () => {\n    isSub ? handleUnSubscription() : await handleSubscription();\n  };\n\n  useEffect(() => {\n    handleInit();\n  }, [id]);\n  return (\n    <div className=\"domArtist_header flex p-8\">\n      <div className=\"w-44 h-44 border overflow-hidden rounded\">\n        <img src={`${detail.artist?.cover}?param=200y200`} alt=\"\" />\n      </div>\n      <div className=\"content flex-auto px-5\">\n        <div className=\"name h1 select-text\">{detail.artist?.name}</div>\n        <div className=\"enname my-3 select-text\">\n          {detail.alias?.map((alia) => alia)}\n        </div>\n        <div className=\"actions mt-3 flex space-x-2\">\n          <button\n            onClick={handleToggleSub}\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex items-center text-sm\"\n          >\n            {isSub ? (\n              <>\n                <IconCheckbox size={20} stroke={1} />\n                已收藏\n              </>\n            ) : (\n              <>\n                <IconFolderPlus size={20} stroke={1} />\n                收藏\n              </>\n            )}\n          </button>\n          {detail.user && (\n            <Link\n              to={`/user/${detail.user?.userId}`}\n              className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex items-center text-sm\"\n            >\n              个人主页\n            </Link>\n          )}\n        </div>\n        <div className=\"info mt-5 space-x-5\">\n          <span className=\"size\">\n            单曲数:\n            {detail.artist?.musicSize}\n          </span>\n          <span className=\"size\">\n            专辑数:\n            {detail.artist?.albumSize}\n          </span>\n          <span className=\"size\">\n            MV数:\n            {detail.artist?.mvSize}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { createElement, memo, useState } from \"react\";\n\nimport classNames from \"classnames\";\n\nimport \"./style.scss\";\n\nimport Album from \"./components/Album\";\nimport MV from \"./components/MV\";\nimport Detail from \"./components/Detail\";\nimport Similarity from \"./components/Similarity\";\nimport Header from \"./components/Header\";\nimport { useParams } from \"react-router-dom\";\n\ntype Nav = \"Album\" | \"MV\" | \"Detail\" | \"Similarity\";\n\nconst navs: [string, Nav][] = [\n  [\"专辑\", \"Album\"],\n  [\"MV\", \"MV\"],\n  [\"歌手详情\", \"Detail\"],\n  [\"相似歌手\", \"Similarity\"],\n];\n\nconst Contents = {\n  Album,\n  MV,\n  Detail,\n  Similarity,\n};\n\nexport default memo(function Artist() {\n  const { id } = useParams();\n  const [active, setActive] = useState<Nav>(navs[0][1]);\n  return (\n    <div className=\"domArtist overflow-auto max-h-full flex-auto\">\n      <Header />\n      <div className=\"domArtist_main\">\n        <div className=\"domArtist_nav flex mx-8\">\n          <div className=\"flex space-x-4 text-sm\">\n            {navs.map(([name, key]) => (\n              <button\n                key={key}\n                onClick={() => setActive(key)}\n                type=\"button\"\n                className={classNames(\n                  \"domArtist_nav_link\",\n                  active === key && \"font-bold ui_underline\"\n                )}\n              >\n                {name}\n              </button>\n            ))}\n          </div>\n          <div className=\"domArtist_album_layout relative ml-auto\" />\n        </div>\n        {createElement(Contents[active])}\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Artist from \"./Artist\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route path={\":id\"} element={<Artist />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["memo","hotAlbums","className","map","item","key","id","Link","to","src","picUrl","alt","type","IconPlayerPlay","size","name","alias","alia","dayjs","publishTime","format","index","classNames","length","console","log","useState","top50","setTop50","limit","setLimit","handleInit","apiArtistTopSong","songs","useEffect","IconFolderPlus","stroke","slice","tabIndex","String","padStart","IconDownload","title","dt","onClick","navs","IconLayoutGrid","IconList","IconLayout","Contents","Grid","List","Column","useParams","useLocalStorage","layout","setLayout","more","album","setAlbum","apiArtistAlbum","view","Ico","createElement","MVs","setMVs","useRef","offset","domScroll","domObserver","current","apiArtistMV","mvs","time","hasMore","prev","imgurl","duration","playCount","cover","useInfinite","GridVideo","list","ref","desc","setDesc","apiArtistDesc","style","textIndent","briefDesc","introduction","ti","txt","simiArtists","setSimiArtists","loading","setLoading","apiSimiArtist","artists","Loading","artistSublist","useAppSelector","account","isSub","useMemo","find","Number","dispatch","useAppDispatch","detail","setDetail","apiArtistDetail","data","handleSubscription","apiArtistSub","t","setToast","useRefreshArtistSublist","handleToggleSub","setDialogUnSubscriptionShow","artistId","artist","IconCheckbox","user","userId","musicSize","albumSize","mvSize","Album","MV","Detail","Similarity","active","setActive","Header","Routes","Route","path","element","Artist"],"sourceRoot":""}