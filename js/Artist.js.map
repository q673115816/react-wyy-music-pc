{"version":3,"file":"js/Artist.js?version=233ebd71","mappings":"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","sources":["webpack://wyy/./src/features/Artist/components/layouts/Grid.tsx","webpack://wyy/./src/features/Artist/components/layouts/List.tsx","webpack://wyy/./src/modules/services/artist/api.ts","webpack://wyy/./src/features/Artist/components/layouts/Column.tsx","webpack://wyy/./src/features/Artist/components/Album.tsx","webpack://wyy/./src/features/Artist/components/MV.tsx","webpack://wyy/./src/features/Artist/components/Detail.tsx","webpack://wyy/./src/features/Artist/components/Similarity.tsx","webpack://wyy/./src/features/Artist/components/Header.tsx","webpack://wyy/./src/features/Artist/Artist.tsx","webpack://wyy/./src/features/Artist/Router.tsx"],"sourcesContent":["import React, { FC, memo } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport { IconPlayerPlay } from \"@tabler/icons\";\nimport { iProps } from \"./types\";\n\nconst Grid: FC<iProps> = ({ hotAlbums = [] }) => (\n  <div className=\"grid grid-cols-4 p-8 gap-x-20 gap-y-5\">\n    {hotAlbums.map((item) => (\n      <div className=\"item\" key={item.id}>\n        <div className=\"cover rounded overflow-hidden relative group\">\n          <Link to={`/playlist/album/${item.id}`}>\n            <img className=\"\" src={`${item.picUrl}?param=200y200`} alt=\"\" />\n          </Link>\n          <button\n            type=\"button\"\n            className=\"absolute inset-0 ui_themeColor flex-center m-auto w-10 h-10 rounded-full bg-white bg-opacity-90 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"\n          >\n            <IconPlayerPlay size={20} className=\"fill-current\" />\n          </button>\n        </div>\n        <div className=\"name text-sm mt-2\">\n          <Link to={`/playlist/album/${item.id}`} className=\"ui_ellipse\">\n            <span className=\"ui_text_black_hover\">{item.name}</span>\n            {item.alias.map((alia) => (\n              <span className=\"text-gray-500\" key={alia}>\n                {`（${alia}）`}\n              </span>\n            ))}\n          </Link>\n        </div>\n        <div className=\"text-gray-400 mt-2\">\n          {dayjs(item.publishTime).format(\"YYYY-MM-DD\")}\n        </div>\n      </div>\n    ))}\n  </div>\n);\n\nexport default memo(Grid);\n","import React, { FC, memo } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { iProps } from \"./types\";\n\nconst List: FC<iProps> = ({ hotAlbums = [] }) => (\n  <div className=\"list pt-4\">\n    {hotAlbums.map((item, index) => (\n      <div\n        className={classNames(\n          \"list_item pl-5 flex items-center h-20 hover:bg-gray-100\",\n          {\n            \"bg-gray-50\": index % 2 === 0,\n          }\n        )}\n        key={item.id}\n      >\n        <Link\n          className=\"cover border rounded flex-none w-14 h-14\"\n          to={`/playlist/album/${item.id}`}\n        >\n          <img\n            className=\"ui_containimg\"\n            src={`${item.picUrl}?param=100y100`}\n            alt=\"\"\n          />\n        </Link>\n        <Link\n          className=\"name truncate px-2.5\"\n          to={`/playlist/album/${item.id}`}\n        >\n          {item.name}\n          &nbsp;\n          {item.alias?.length > 0 && (\n            <span className=\"text-gray-400\">\n              ({item.alias.map((alia) => alia)})\n            </span>\n          )}\n        </Link>\n        <span className=\"size text-gray-400\">{item.size}首</span>\n        <span className=\"publishTime text-gray-400\">\n          发行时间：\n          {dayjs(item.publishTime).format(\"YYYY-MM-DD\")}\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nexport default memo(List);\n","import {\n  Artists,\n  Detail,\n  Albums,\n  TopSongs,\n  Desc,\n  Req,\n  ArtistMV,\n} from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getArtistDetail: build.query<Detail, Req>({\n      query: (body) => ({\n        url: `artist/detail`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    postArtistSub: build.mutation<Detail, Req & { t: number }>({\n      query: (body) => ({\n        url: `artist/sub`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getSimiArtist: build.query<Artists, Req>({\n      query: (body) => ({\n        url: `simi/artist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistAlbum: build.query<Albums, Req>({\n      query: (body) => ({\n        url: `artist/album`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistTopSong: build.query<TopSongs, Req>({\n      query: (body) => ({\n        url: `artist/top/song`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistDesc: build.query<Desc, Req>({\n      query: (body) => ({\n        url: `artist/desc`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistMV: build.mutation<\n      ArtistMV,\n      Req & { limit: number; offset: number }\n    >({\n      query: (body) => ({\n        url: `artist/mv`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetArtistDetailQuery,\n  useGetSimiArtistQuery,\n  useGetArtistAlbumQuery,\n  useGetArtistTopSongQuery,\n  useGetArtistDescQuery,\n  useGetArtistMVMutation,\n  usePostArtistSubMutation,\n} = api;\n","import React, { FC, memo, useEffect, useState } from \"react\";\nimport { IconPlayerPlay, IconFolderPlus, IconDownload } from \"@tabler/icons\";\n\nimport dayjs from \"dayjs\";\nimport classNames from \"classnames\";\nimport DomTags from \"@/components/Tags\";\nimport DomHeart from \"@/components/Table/Heart\";\nimport { useGetArtistTopSongQuery } from \"@/modules/services/artist\";\nimport { useParams } from \"react-router-dom\";\n\ninterface iProps {}\n\nconst Column: FC<iProps> = () => {\n  const { id = \"\" } = useParams();\n  console.log(\"artist_column\");\n  const [limit, setLimit] = useState(10);\n  const { data } = useGetArtistTopSongQuery({ id });\n  const top50 = data?.songs || [];\n  return (\n    <div className=\"column p-8\">\n      <div className=\"column_item\">\n        <div className=\"cover\">\n          <div className=\"Top50 flex-none bg-black bg-opacity-50 flex-center flex-col font-bold rounded w-full h-full text-white\">\n            <div className=\"text-4xl\">TOP</div>\n            <div className=\"text-6xl\">50</div>\n          </div>\n        </div>\n        <div className=\"aside flex-auto ml-20 w-0\">\n          <div className=\"flex\">\n            <span className=\"font-bold text-base\">热门50首</span>\n            <div className=\"flex items-center\">\n              <button\n                type=\"button\"\n                className=\"flex-none border rounded-full flex-center mx-3 p-1\"\n              >\n                <IconPlayerPlay size={10} className=\"fill-current\" />\n              </button>\n              <span className=\"text-gray-300\">|</span>\n              <button type=\"button\" className=\"mx-3\">\n                <IconFolderPlus size={20} stroke={1} />\n              </button>\n            </div>\n          </div>\n          <div className=\"list mt-2\">\n            {top50.slice(0, limit).map((item, index) => (\n              <div\n                className={classNames(\n                  \"item hover:bg-gray-100 focus:outline-none focus:bg-gray-200\",\n                  { \"bg-gray-50\": index % 2 === 0 }\n                )}\n                tabIndex={2}\n                key={item.id}\n              >\n                <div className=\"index flex-none text-right text-gray-400\">\n                  {String(index + 1).padStart(2, \"0\")}\n                </div>\n                <div className=\"heart flex-none text-center\">\n                  <DomHeart id={item.id} />\n                </div>\n                <div className=\"download flex-none text-center\">\n                  <button\n                    type=\"button\"\n                    className=\"text-gray-500 hover:text-black\"\n                  >\n                    <IconDownload size={16} stroke={1} />\n                  </button>\n                </div>\n                <div className=\"name flex-auto flex flex-auto min-w-0 px-2.5\">\n                  <span\n                    className=\"truncate\"\n                    title={`${item.name}(${item.alia.map((alia) => alia)})`}\n                  >\n                    {item.name}\n                    &nbsp;\n                    <span className=\"text-gray-400\">\n                      {item.alia.map((alia) => alia)}\n                    </span>\n                  </span>\n                  <DomTags item={item} className=\"flex-none\" />\n                </div>\n                <div className=\"duration text-gray-400 flex-none\">\n                  {dayjs(item.dt).format(\"mm:ss\")}\n                </div>\n              </div>\n            ))}\n            {limit === 10 && top50.length > 10 && (\n              <button\n                type=\"button\"\n                className=\"seeMore\"\n                onClick={() => setLimit(50)}\n              >\n                查看全部\n                {top50.length}首 &gt;\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Column);\n","import React, { memo, createElement, ReactNode } from \"react\";\nimport {\n  IconLayoutGrid,\n  IconList,\n  IconLayout,\n  TablerIcon,\n} from \"@tabler/icons\";\nimport classNames from \"classnames\";\nimport Grid from \"./layouts/Grid\";\nimport List from \"./layouts/List\";\nimport Column from \"./layouts/Column\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocalStorage } from \"react-use\";\nimport { useGetArtistAlbumQuery } from \"@/modules/services/artist\";\nimport Loading from \"@/components/Loading\";\n\nexport type Layout = \"Grid\" | \"List\" | \"Column\";\n\nconst navs: [Layout, TablerIcon][] = [\n  [\"Grid\", IconLayoutGrid],\n  [\"List\", IconList],\n  [\"Column\", IconLayout],\n];\n\nconst Contents: { [key in Layout]: ReactNode } = {\n  Grid,\n  List,\n  Column,\n};\n\nexport default memo(function Album() {\n  const { id = \"\" } = useParams();\n  const [layout = \"Grid\", setLayout, remove] = useLocalStorage<Layout>(\n    \"layout\",\n    navs[0][0]\n  );\n  const { data, isLoading } = useGetArtistAlbumQuery({ id });\n  const hotAlbums = data?.hotAlbums || [];\n  const more = data?.more || false;\n  if (isLoading) {\n    return (\n      <div className=\"flex-center\">\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <div className=\"domArtist_section relative\">\n      <div className=\"absolute right-8 bottom-full actions ml-auto space-x-0.5 flex rounded-sm overflow-hidden\">\n        {navs.map(([view, Ico]) => (\n          <button\n            key={view}\n            type=\"button\"\n            className={classNames(\n              \"px-1.5 py-0.5 bg-gray-200\",\n              \"handle\",\n              view === layout && \"bg-gray-400 text-white\"\n            )}\n            onClick={() => setLayout(view)}\n          >\n            <Ico size={14} stroke={1} />\n          </button>\n        ))}\n      </div>\n      <div className=\"domArtist_section_layout\">\n        {createElement(Contents[layout], { hotAlbums, id })}\n      </div>\n    </div>\n  );\n});\n","import React, { useRef, memo } from \"react\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport GridVideo from \"@/components/GridVideo\";\nimport { useParams } from \"react-router-dom\";\nimport { useGetArtistMVMutation } from \"@/modules/services/artist\";\nimport { useImmer } from \"use-immer\";\nimport Loading from \"@/components/Loading\";\nimport { MV } from \"@/modules/services/types\";\n\nconst limit = 24;\n\nexport default memo(function MV() {\n  const { id = \"\" } = useParams();\n  const [MVs, setMVs] = useImmer([]);\n  const [MVGet, { isLoading }] = useGetArtistMVMutation();\n  // const [hasMore, setHasMore] = useState(true);\n  const more = useRef(true);\n  const offset = useRef(0);\n  const domScroll = useRef<HTMLDivElement>(null);\n  const domObserver = useRef<HTMLDivElement>(null);\n  const handleInit = async () => {\n    if (!more.current) return;\n    try {\n      const { data } = await MVGet({\n        id,\n        limit,\n        offset: offset.current,\n      });\n      offset.current += limit;\n      const mvs = data?.mvs || [];\n      const hasMore = data?.hasMore || false;\n      more.current = hasMore;\n      setMVs((draft) => {\n        draft.push(\n          ...mvs.map(({ id, imgurl, duration, name, playCount }: MV) => ({\n            id,\n            duration,\n            playCount,\n            cover: imgurl,\n            title: name,\n            type: \"0\",\n          }))\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useInfinite(handleInit, domScroll, domObserver);\n\n  return (\n    <div className=\"domArtist_section p-8\">\n      <GridVideo list={MVs} />\n      <div ref={domObserver} className=\"flex-center\">\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useGetArtistDescQuery } from \"@/modules/services/artist\";\nimport Loading from \"@/components/Loading\";\n\nexport default memo(function Detail() {\n  const { id = \"\" } = useParams();\n  const { data, isLoading } = useGetArtistDescQuery({ id });\n  if (isLoading) {\n    return (\n      <div className=\"flex-center\">\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <div className=\"domArtist_section p-8 leading-8 text-sm select-text\">\n      <div className=\"domArtist_subtitle font-bold\">简介</div>\n      <div className=\"domArtist_article text-gray-500 indent-8\">\n        {data?.briefDesc}\n      </div>\n      <br />\n      <br />\n      {data?.introduction?.map((introduction) => (\n        <div key={introduction.ti} className=\"select-text\">\n          <div className=\"domArtist_subtitle font-bold\">{introduction.ti}</div>\n          <div className=\"domArtist_article text-gray-500 whitespace-pre-line\">\n            {introduction.txt}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n});\n","import React, { memo, FC} from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Loading from \"@/components/Loading\";\nimport {useGetSimiArtistQuery} from \"@/modules/services/artist\";\n\nconst Similarity = () => {\n  const {id = ''} = useParams()\n  const {data, isLoading} = useGetSimiArtistQuery({id})\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center pt-12\">\n        <Loading />\n      </div>\n    );\n  }\n  const artists = data?.artists || []\n\n  if (artists.length === 0) {\n    return (\n      <div className=\"text-center text-gray-400 text-sm pt-16\">\n        没有相似歌手\n      </div>\n    );\n  }\n  return (\n    <div className=\"domArtist_section p-8\">\n      <div className=\"grid grid-cols-5 gap-5\">\n        {artists.map((item) => (\n          <div className=\"item\" key={item.id}>\n            <div className=\"cover rounded overflow-hidden border\">\n              <Link to={`/artist/${item.id}`} className=\"\">\n                <img\n                  loading={`lazy`}\n                  className=\"aspect-square\"\n                  src={`${item.picUrl}?param=200y200`}\n                  alt=\"\"\n                />\n              </Link>\n            </div>\n            <div className=\"footer text-sm mt-2\">\n              <Link to={`/artist/${item.id}`} className=\"\">\n                {item.name}\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Similarity)\n","import React, { memo, useEffect, useMemo, useState } from \"react\";\nimport { IconFolderPlus, IconCheckbox } from \"@tabler/icons\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n  setDialogUnSubscriptionShow,\n  setToast,\n} from \"@/modules/reducers/mask/slice\";\nimport { useRefreshArtistSublist } from \"@/hooks/useHelp\";\nimport { useAppDispatch, useAppSelector } from \"@/modules/hooks\";\nimport {\n  useGetArtistDetailQuery,\n  usePostArtistSubMutation,\n} from \"@/modules/services/artist\";\n\nexport default memo(function Header() {\n  const { id = \"\" } = useParams();\n  const { artistSublist } = useAppSelector(({ account }) => account);\n\n  const isSub = useMemo(\n    () => artistSublist.find((item) => item.id === Number(id)),\n    [artistSublist, id]\n  );\n  const dispatch = useAppDispatch();\n  const [subPost, { isLoading: isSubbing }] = usePostArtistSubMutation();\n  const { data } = useGetArtistDetailQuery({ id });\n  const detail = data?.data || {};\n  const handleUnSubscription = () => {\n    dispatch(\n      setDialogUnSubscriptionShow({\n        artistId: id,\n      })\n    );\n  };\n\n  const handleSubscription = async () => {\n    try {\n      await subPost({\n        id,\n        t: 1,\n      });\n      dispatch(setToast(\"收藏成功！\"));\n      useRefreshArtistSublist(dispatch);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleToggleSub = async () => {\n    isSub ? handleUnSubscription() : await handleSubscription();\n  };\n\n  // useEffect(() => {\n  //   handleInit();\n  // }, [id]);\n  return (\n    <div className=\"domArtist_header flex p-8\">\n      <div className=\"w-44 h-44 border overflow-hidden rounded\">\n        <img src={`${detail.artist?.cover}?param=200y200`} alt=\"\" />\n      </div>\n      <div className=\"content flex-auto px-5\">\n        <div className=\"name h1 select-text\">{detail.artist?.name}</div>\n        <div className=\"enname my-3 select-text\">\n          {detail.alias?.map((alia) => alia)}\n        </div>\n        <div className=\"actions mt-3 flex space-x-2\">\n          <button\n            onClick={handleToggleSub}\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex items-center text-sm\"\n          >\n            {isSub ? (\n              <>\n                <IconCheckbox size={20} stroke={1} />\n                已收藏\n              </>\n            ) : (\n              <>\n                <IconFolderPlus size={20} stroke={1} />\n                收藏\n              </>\n            )}\n          </button>\n          {detail.user && (\n            <Link\n              to={`/user/${detail.user?.userId}`}\n              className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex items-center text-sm\"\n            >\n              个人主页\n            </Link>\n          )}\n        </div>\n        <div className=\"info mt-5 space-x-5\">\n          <span className=\"size\">\n            单曲数:\n            {detail?.artist?.musicSize}\n          </span>\n          <span className=\"size\">\n            专辑数:\n            {detail.artist?.albumSize}\n          </span>\n          <span className=\"size\">\n            MV数:\n            {detail.artist?.mvSize}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { createElement, memo, useState } from \"react\";\n\nimport classNames from \"classnames\";\n\nimport \"./style.scss\";\n\nimport Album from \"./components/Album\";\nimport MV from \"./components/MV\";\nimport Detail from \"./components/Detail\";\nimport Similarity from \"./components/Similarity\";\nimport Header from \"./components/Header\";\nimport {useParams} from \"react-router-dom\";\n\ntype Nav = \"Album\" | \"MV\" | \"Detail\" | \"Similarity\";\n\nconst navs: [string, Nav][] = [\n  [\"专辑\", \"Album\"],\n  [\"MV\", \"MV\"],\n  [\"歌手详情\", \"Detail\"],\n  [\"相似歌手\", \"Similarity\"],\n];\n\nconst Contents = {\n  Album,\n  MV,\n  Detail,\n  Similarity,\n};\n\nexport default memo(function Artist() {\n  const [active, setActive] = useState<Nav>(navs[0][1]);\n  return (\n    <div className=\"domArtist overflow-auto max-h-full flex-auto\">\n      <Header />\n      <div className=\"domArtist_main\">\n        <div className=\"domArtist_nav flex mx-8\">\n          <div className=\"flex space-x-4 text-sm\">\n            {navs.map(([name, key]) => (\n              <button\n                key={key}\n                onClick={() => setActive(key)}\n                type=\"button\"\n                className={classNames(\n                  \"domArtist_nav_link\",\n                  active === key && \"font-bold ui_underline\"\n                )}\n              >\n                {name}\n              </button>\n            ))}\n          </div>\n          <div className=\"domArtist_album_layout relative ml-auto\" />\n        </div>\n        {createElement(Contents[active])}\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Artist from \"./Artist\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route path={\":id\"} element={<Artist />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["Grid","hotAlbums","div","className","map","item","key","id","Link","to","img","src","picUrl","alt","button","type","IconPlayerPlay","size","span","name","alias","alia","dayjs","publishTime","format","memo","List","index","classNames","length","api","base","endpoints","build","getArtistDetail","query","body","url","method","postArtistSub","mutation","getSimiArtist","getArtistAlbum","getArtistTopSong","getArtistDesc","getArtistMV","useGetArtistDetailQuery","useGetSimiArtistQuery","useGetArtistAlbumQuery","useGetArtistTopSongQuery","useGetArtistDescQuery","useGetArtistMVMutation","usePostArtistSubMutation","Column","useParams","console","log","useState","limit","setLimit","data","top50","songs","IconFolderPlus","stroke","slice","tabIndex","String","padStart","DomHeart","IconDownload","title","DomTags","dt","onClick","navs","IconLayoutGrid","IconList","IconLayout","Contents","useLocalStorage","layout","setLayout","isLoading","more","Loading","Ico","view","createElement","useImmer","MVs","setMVs","MVGet","useRef","offset","domScroll","domObserver","handleInit","mvs","hasMore","current","draft","push","imgurl","duration","playCount","cover","useInfinite","GridVideo","list","ref","briefDesc","br","introduction","ti","txt","Similarity","artists","loading","detail","artistSublist","useAppSelector","account","isSub","useMemo","find","Number","dispatch","useAppDispatch","subPost","handleSubscription","t","setToast","useRefreshArtistSublist","handleToggleSub","setDialogUnSubscriptionShow","artistId","artist","IconCheckbox","user","userId","Album","MV","Detail","active","setActive","Header","Routes","Route","path","element","Artist"],"sourceRoot":""}