{"version":3,"file":"js/Artist.js?version=7861e178","mappings":"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","sources":["webpack://wyy/./src/features/Artist/components/layouts/Grid.tsx","webpack://wyy/./src/features/Artist/components/layouts/List.tsx","webpack://wyy/./src/modules/services/artist/api.ts","webpack://wyy/./src/features/Artist/components/layouts/Column.tsx","webpack://wyy/./src/features/Artist/components/Album.tsx","webpack://wyy/./src/features/Artist/components/MV.tsx","webpack://wyy/./src/features/Artist/components/Detail.tsx","webpack://wyy/./src/features/Artist/components/Similarity.tsx","webpack://wyy/./src/features/Artist/components/Header.tsx","webpack://wyy/./src/features/Artist/Artist.tsx","webpack://wyy/./src/features/Artist/Router.tsx"],"sourcesContent":["import React, { FC, memo } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport { IconPlayerPlay } from \"@tabler/icons\";\nimport { iProps } from \"./types\";\n\nconst Grid: FC<iProps> = ({ hotAlbums = [] }) => (\n  <div className=\"grid grid-cols-4 p-8 gap-x-20 gap-y-5\">\n    {hotAlbums.map((item) => (\n      <div className=\"item\" key={item.id}>\n        <div className=\"cover rounded overflow-hidden relative group\">\n          <Link to={`/playlist/album/${item.id}`}>\n            <img className=\"\" src={`${item.picUrl}?param=200y200`} alt=\"\" />\n          </Link>\n          <button\n            type=\"button\"\n            className=\"absolute inset-0 ui_themeColor flex-center m-auto w-10 h-10 rounded-full bg-white bg-opacity-90 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"\n          >\n            <IconPlayerPlay size={20} className=\"fill-current\" />\n          </button>\n        </div>\n        <div className=\"name text-sm mt-2\">\n          <Link to={`/playlist/album/${item.id}`} className=\"ui_ellipse\">\n            <span className=\"ui_text_black_hover\">{item.name}</span>\n            {item.alias.map((alia) => (\n              <span className=\"text-gray-500\" key={alia}>\n                {`（${alia}）`}\n              </span>\n            ))}\n          </Link>\n        </div>\n        <div className=\"text-gray-400 mt-2\">\n          {dayjs(item.publishTime).format(\"YYYY-MM-DD\")}\n        </div>\n      </div>\n    ))}\n  </div>\n);\n\nexport default memo(Grid);\n","import React, { FC, memo } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { iProps } from \"./types\";\n\nconst List: FC<iProps> = ({ hotAlbums = [] }) => (\n  <div className=\"list pt-4\">\n    {hotAlbums.map((item, index) => (\n      <div\n        className={classNames(\n          \"list_item pl-5 flex items-center h-20 hover:bg-gray-100\",\n          {\n            \"bg-gray-50\": index % 2 === 0,\n          }\n        )}\n        key={item.id}\n      >\n        <Link\n          className=\"cover border rounded flex-none w-14 h-14\"\n          to={`/playlist/album/${item.id}`}\n        >\n          <img\n            className=\"ui_containimg\"\n            src={`${item.picUrl}?param=100y100`}\n            alt=\"\"\n          />\n        </Link>\n        <Link\n          className=\"name truncate px-2.5\"\n          to={`/playlist/album/${item.id}`}\n        >\n          {item.name}\n          &nbsp;\n          {item.alias?.length > 0 && (\n            <span className=\"text-gray-400\">\n              ({item.alias.map((alia) => alia)})\n            </span>\n          )}\n        </Link>\n        <span className=\"size text-gray-400\">{item.size}首</span>\n        <span className=\"publishTime text-gray-400\">\n          发行时间：\n          {dayjs(item.publishTime).format(\"YYYY-MM-DD\")}\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nexport default memo(List);\n","import {\n  Artists,\n  Detail,\n  Albums,\n  TopSongs,\n  Desc,\n  Req,\n  ArtistMV,\n} from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getArtistDetail: build.query<Detail, Req>({\n      query: (body) => ({\n        url: `artist/detail`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    postArtistSub: build.mutation<Detail, Req & { t: number }>({\n      query: (body) => ({\n        url: `artist/sub`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getSimiArtist: build.query<Artists, Req>({\n      query: (body) => ({\n        url: `simi/artist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistAlbum: build.query<Albums, Req>({\n      query: (body) => ({\n        url: `artist/album`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistTopSong: build.query<TopSongs, Req>({\n      query: (body) => ({\n        url: `artist/top/song`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistDesc: build.query<Desc, Req>({\n      query: (body) => ({\n        url: `artist/desc`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistMV: build.mutation<\n      ArtistMV,\n      Req & { limit: number; offset: number }\n    >({\n      query: (body) => ({\n        url: `artist/mv`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetArtistDetailQuery,\n  useGetSimiArtistQuery,\n  useGetArtistAlbumQuery,\n  useGetArtistTopSongQuery,\n  useGetArtistDescQuery,\n  useGetArtistMVMutation,\n  usePostArtistSubMutation,\n} = api;\n","import React, { FC, memo, useEffect, useState } from \"react\";\nimport { IconPlayerPlay, IconFolderPlus, IconDownload } from \"@tabler/icons\";\n\nimport dayjs from \"dayjs\";\nimport classNames from \"classnames\";\nimport DomTags from \"@/components/Tags\";\nimport DomHeart from \"@/components/Table/Heart\";\nimport { useGetArtistTopSongQuery } from \"@/modules/services/artist\";\nimport { useParams } from \"react-router-dom\";\n\ninterface iProps {}\n\nconst Column: FC<iProps> = () => {\n  const { id = \"\" } = useParams();\n  console.log(\"artist_column\");\n  const [limit, setLimit] = useState(10);\n  const { data } = useGetArtistTopSongQuery({ id });\n  const top50 = data?.songs || [];\n  return (\n    <div className=\"column p-8\">\n      <div className=\"column_item\">\n        <div className=\"cover\">\n          <div className=\"Top50 flex-none bg-black bg-opacity-50 flex-center flex-col font-bold rounded w-full h-full text-white\">\n            <div className=\"text-4xl\">TOP</div>\n            <div className=\"text-6xl\">50</div>\n          </div>\n        </div>\n        <div className=\"aside flex-auto ml-20 w-0\">\n          <div className=\"flex\">\n            <span className=\"font-bold text-base\">热门50首</span>\n            <div className=\"flex items-center\">\n              <button\n                type=\"button\"\n                className=\"flex-none border rounded-full flex-center mx-3 p-1\"\n              >\n                <IconPlayerPlay size={10} className=\"fill-current\" />\n              </button>\n              <span className=\"text-gray-300\">|</span>\n              <button type=\"button\" className=\"mx-3\">\n                <IconFolderPlus size={20} stroke={1} />\n              </button>\n            </div>\n          </div>\n          <div className=\"list mt-2\">\n            {top50.slice(0, limit).map((item, index) => (\n              <div\n                className={classNames(\n                  \"item hover:bg-gray-100 focus:outline-none focus:bg-gray-200\",\n                  { \"bg-gray-50\": index % 2 === 0 }\n                )}\n                tabIndex={2}\n                key={item.id}\n              >\n                <div className=\"index flex-none text-right text-gray-400\">\n                  {String(index + 1).padStart(2, \"0\")}\n                </div>\n                <div className=\"heart flex-none text-center\">\n                  <DomHeart id={item.id} />\n                </div>\n                <div className=\"download flex-none text-center\">\n                  <button\n                    type=\"button\"\n                    className=\"text-gray-500 hover:text-black\"\n                  >\n                    <IconDownload size={16} stroke={1} />\n                  </button>\n                </div>\n                <div className=\"name flex-auto flex flex-auto min-w-0 px-2.5\">\n                  <span\n                    className=\"truncate\"\n                    title={`${item.name}(${item.alia.map((alia) => alia)})`}\n                  >\n                    {item.name}\n                    &nbsp;\n                    <span className=\"text-gray-400\">\n                      {item.alia.map((alia) => alia)}\n                    </span>\n                  </span>\n                  <DomTags item={item} className=\"flex-none\" />\n                </div>\n                <div className=\"duration text-gray-400 flex-none\">\n                  {dayjs(item.dt).format(\"mm:ss\")}\n                </div>\n              </div>\n            ))}\n            {limit === 10 && top50.length > 10 && (\n              <button\n                type=\"button\"\n                className=\"seeMore\"\n                onClick={() => setLimit(50)}\n              >\n                查看全部\n                {top50.length}首 &gt;\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Column);\n","import React, { memo, createElement, ReactNode } from \"react\";\nimport {\n  IconLayoutGrid,\n  IconList,\n  IconLayout,\n  TablerIcon,\n} from \"@tabler/icons\";\nimport classNames from \"classnames\";\nimport Grid from \"./layouts/Grid\";\nimport List from \"./layouts/List\";\nimport Column from \"./layouts/Column\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocalStorage } from \"react-use\";\nimport { useGetArtistAlbumQuery } from \"@/modules/services/artist\";\nimport Loading from \"@/components/Loading\";\n\nexport type Layout = \"Grid\" | \"List\" | \"Column\";\n\nconst navs: [Layout, TablerIcon][] = [\n  [\"Grid\", IconLayoutGrid],\n  [\"List\", IconList],\n  [\"Column\", IconLayout],\n];\n\nconst Contents: { [key in Layout]: ReactNode } = {\n  Grid,\n  List,\n  Column,\n};\n\nexport default memo(function Album() {\n  const { id = \"\" } = useParams();\n  const [layout = \"Grid\", setLayout, remove] = useLocalStorage<Layout>(\n    \"layout\",\n    navs[0][0]\n  );\n  const { data, isLoading } = useGetArtistAlbumQuery({ id });\n  const hotAlbums = data?.hotAlbums || [];\n  const more = data?.more || false;\n  if (isLoading) {\n    return (\n      <div className=\"flex-center\">\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <div className=\"domArtist_section relative\">\n      <div className=\"absolute right-8 bottom-full actions ml-auto space-x-0.5 flex rounded-sm overflow-hidden\">\n        {navs.map(([view, Ico]) => (\n          <button\n            key={view}\n            type=\"button\"\n            className={classNames(\n              \"px-1.5 py-0.5 bg-gray-200\",\n              \"handle\",\n              view === layout && \"bg-gray-400 text-white\"\n            )}\n            onClick={() => setLayout(view)}\n          >\n            <Ico size={14} stroke={1} />\n          </button>\n        ))}\n      </div>\n      <div className=\"domArtist_section_layout\">\n        {createElement(Contents[layout], { hotAlbums, id })}\n      </div>\n    </div>\n  );\n});\n","import React, { useRef, memo } from \"react\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport GridVideo from \"@/components/GridVideo\";\nimport { useParams } from \"react-router-dom\";\nimport { useGetArtistMVMutation } from \"@/modules/services/artist\";\nimport { useImmer } from \"use-immer\";\nimport Loading from \"@/components/Loading\";\nimport { MV } from \"@/modules/services/types\";\n\nconst limit = 24;\n\nexport default memo(function MV() {\n  const { id = \"\" } = useParams();\n  const [MVs, setMVs] = useImmer([]);\n  const [MVGet, { isLoading }] = useGetArtistMVMutation();\n  // const [hasMore, setHasMore] = useState(true);\n  const more = useRef(true);\n  const offset = useRef(0);\n  const domScroll = useRef<HTMLDivElement>(null);\n  const domObserver = useRef<HTMLDivElement>(null);\n  const handleInit = async () => {\n    if (!more.current) return;\n    try {\n      const { data } = await MVGet({\n        id,\n        limit,\n        offset: offset.current,\n      });\n      offset.current += limit;\n      const mvs = data?.mvs || [];\n      const hasMore = data?.hasMore || false;\n      more.current = hasMore;\n      setMVs((draft) => {\n        draft.push(\n          ...mvs.map(({ id, imgurl, duration, name, playCount }: MV) => ({\n            id,\n            duration,\n            playCount,\n            cover: imgurl,\n            title: name,\n            type: \"0\",\n          }))\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useInfinite(handleInit, domScroll, domObserver);\n\n  return (\n    <div className=\"domArtist_section p-8\">\n      <GridVideo list={MVs} />\n      <div ref={domObserver} className=\"flex-center\">\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useGetArtistDescQuery } from \"@/modules/services/artist\";\nimport Loading from \"@/components/Loading\";\n\nexport default memo(function Detail() {\n  const { id = \"\" } = useParams();\n  const { data, isLoading } = useGetArtistDescQuery({ id });\n  if (isLoading) {\n    return (\n      <div className=\"flex-center\">\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <div className=\"domArtist_section p-8 leading-8 text-sm select-text\">\n      <div className=\"domArtist_subtitle font-bold\">简介</div>\n      <div className=\"domArtist_article text-gray-500 indent-8\">\n        {data?.briefDesc}\n      </div>\n      <br />\n      <br />\n      {data?.introduction?.map((introduction) => (\n        <div key={introduction.ti} className=\"select-text\">\n          <div className=\"domArtist_subtitle font-bold\">{introduction.ti}</div>\n          <div className=\"domArtist_article text-gray-500 whitespace-pre-line\">\n            {introduction.txt}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n});\n","import React, { memo, FC} from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Loading from \"@/components/Loading\";\nimport {useGetSimiArtistQuery} from \"@/modules/services/artist\";\n\nconst Similarity = () => {\n  const {id = ''} = useParams()\n  const {data, isLoading} = useGetSimiArtistQuery({id})\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center pt-12\">\n        <Loading />\n      </div>\n    );\n  }\n  const artists = data?.artists || []\n\n  if (artists.length === 0) {\n    return (\n      <div className=\"text-center text-gray-400 text-sm pt-16\">\n        没有相似歌手\n      </div>\n    );\n  }\n  return (\n    <div className=\"domArtist_section p-8\">\n      <div className=\"grid grid-cols-5 gap-5\">\n        {artists.map((item) => (\n          <div className=\"item\" key={item.id}>\n            <div className=\"cover rounded overflow-hidden border\">\n              <Link to={`/artist/${item.id}`} className=\"\">\n                <img\n                  loading={`lazy`}\n                  className=\"aspect-square\"\n                  src={`${item.picUrl}?param=200y200`}\n                  alt=\"\"\n                />\n              </Link>\n            </div>\n            <div className=\"footer text-sm mt-2\">\n              <Link to={`/artist/${item.id}`} className=\"\">\n                {item.name}\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Similarity)\n","import React, { memo, useEffect, useMemo, useState } from \"react\";\nimport { IconFolderPlus, IconCheckbox } from \"@tabler/icons\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n  setDialogUnSubscriptionShow,\n  setToast,\n} from \"@/modules/reducers/mask/slice\";\nimport { useRefreshArtistSublist } from \"@/hooks/useHelp\";\nimport { useAppDispatch, useAppSelector } from \"@/modules/hooks\";\nimport {\n  useGetArtistDetailQuery,\n  usePostArtistSubMutation,\n} from \"@/modules/services/artist\";\n\nexport default memo(function Header() {\n  const { id = \"\" } = useParams();\n  const { artistSublist } = useAppSelector(({ account }) => account);\n\n  const isSub = useMemo(\n    () => artistSublist.find((item) => item.id === Number(id)),\n    [artistSublist, id]\n  );\n  const dispatch = useAppDispatch();\n  const [subPost, { isLoading: isSubbing }] = usePostArtistSubMutation();\n  const { data } = useGetArtistDetailQuery({ id });\n  const detail = data?.data || {};\n  const handleUnSubscription = () => {\n    dispatch(\n      setDialogUnSubscriptionShow({\n        artistId: id,\n      })\n    );\n  };\n\n  const handleSubscription = async () => {\n    try {\n      await subPost({\n        id,\n        t: 1,\n      });\n      dispatch(setToast(\"收藏成功！\"));\n      useRefreshArtistSublist(dispatch);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleToggleSub = async () => {\n    isSub ? handleUnSubscription() : await handleSubscription();\n  };\n\n  // useEffect(() => {\n  //   handleInit();\n  // }, [id]);\n  return (\n    <div className=\"domArtist_header flex p-8\">\n      <div className=\"w-44 h-44 border overflow-hidden rounded\">\n        <img src={`${detail.artist?.cover}?param=200y200`} alt=\"\" />\n      </div>\n      <div className=\"content flex-auto px-5\">\n        <div className=\"name h1 select-text\">{detail.artist?.name}</div>\n        <div className=\"enname my-3 select-text\">\n          {detail.alias?.map((alia) => alia)}\n        </div>\n        <div className=\"actions mt-3 flex space-x-2\">\n          <button\n            onClick={handleToggleSub}\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex items-center text-sm\"\n          >\n            {isSub ? (\n              <>\n                <IconCheckbox size={20} stroke={1} />\n                已收藏\n              </>\n            ) : (\n              <>\n                <IconFolderPlus size={20} stroke={1} />\n                收藏\n              </>\n            )}\n          </button>\n          {detail.user && (\n            <Link\n              to={`/user/${detail.user?.userId}`}\n              className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex items-center text-sm\"\n            >\n              个人主页\n            </Link>\n          )}\n        </div>\n        <div className=\"info mt-5 space-x-5\">\n          <span className=\"size\">\n            单曲数:\n            {detail?.artist?.musicSize}\n          </span>\n          <span className=\"size\">\n            专辑数:\n            {detail.artist?.albumSize}\n          </span>\n          <span className=\"size\">\n            MV数:\n            {detail.artist?.mvSize}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { createElement, memo, useState } from \"react\";\n\nimport classNames from \"classnames\";\n\nimport \"./style.scss\";\n\nimport Album from \"./components/Album\";\nimport MV from \"./components/MV\";\nimport Detail from \"./components/Detail\";\nimport Similarity from \"./components/Similarity\";\nimport Header from \"./components/Header\";\nimport {useParams} from \"react-router-dom\";\n\ntype Nav = \"Album\" | \"MV\" | \"Detail\" | \"Similarity\";\n\nconst navs: [string, Nav][] = [\n  [\"专辑\", \"Album\"],\n  [\"MV\", \"MV\"],\n  [\"歌手详情\", \"Detail\"],\n  [\"相似歌手\", \"Similarity\"],\n];\n\nconst Contents = {\n  Album,\n  MV,\n  Detail,\n  Similarity,\n};\n\nexport default memo(function Artist() {\n  const [active, setActive] = useState<Nav>(navs[0][1]);\n  return (\n    <div className=\"domArtist overflow-auto max-h-full flex-auto\">\n      <Header />\n      <div className=\"domArtist_main\">\n        <div className=\"domArtist_nav flex mx-8\">\n          <div className=\"flex space-x-4 text-sm\">\n            {navs.map(([name, key]) => (\n              <button\n                key={key}\n                onClick={() => setActive(key)}\n                type=\"button\"\n                className={classNames(\n                  \"domArtist_nav_link\",\n                  active === key && \"font-bold ui_underline\"\n                )}\n              >\n                {name}\n              </button>\n            ))}\n          </div>\n          <div className=\"domArtist_album_layout relative ml-auto\" />\n        </div>\n        {createElement(Contents[active])}\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Artist from \"./Artist\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route path={\":id\"} element={<Artist />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["Grid","hotAlbums","className","map","item","key","id","Link","to","src","picUrl","alt","type","IconPlayerPlay","size","name","alias","alia","dayjs","publishTime","format","memo","List","index","classNames","length","api","base","endpoints","build","getArtistDetail","query","body","url","method","postArtistSub","mutation","getSimiArtist","getArtistAlbum","getArtistTopSong","getArtistDesc","getArtistMV","useGetArtistDetailQuery","useGetSimiArtistQuery","useGetArtistAlbumQuery","useGetArtistTopSongQuery","useGetArtistDescQuery","useGetArtistMVMutation","usePostArtistSubMutation","Column","useParams","console","log","useState","limit","setLimit","data","top50","songs","IconFolderPlus","stroke","slice","tabIndex","String","padStart","IconDownload","title","dt","onClick","navs","IconLayoutGrid","IconList","IconLayout","Contents","useLocalStorage","layout","setLayout","isLoading","more","Loading","view","Ico","createElement","useImmer","MVs","setMVs","MVGet","useRef","offset","domScroll","domObserver","handleInit","current","mvs","hasMore","draft","push","imgurl","duration","playCount","cover","useInfinite","GridVideo","list","ref","briefDesc","introduction","ti","txt","Similarity","artists","loading","artistSublist","useAppSelector","account","isSub","useMemo","find","Number","dispatch","useAppDispatch","subPost","detail","handleSubscription","t","setToast","useRefreshArtistSublist","handleToggleSub","setDialogUnSubscriptionShow","artistId","artist","IconCheckbox","user","userId","musicSize","albumSize","mvSize","Album","MV","Detail","active","setActive","Header","Routes","Route","path","element","Artist"],"sourceRoot":""}