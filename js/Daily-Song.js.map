{"version":3,"file":"js/Daily-Song.js?version=b797aadf","mappings":"8LAeeA,E,QAZIC,EAAAA,gBAAqB,CACtCC,UAAW,SAACC,GAAD,MAAY,CACrBC,kBAAmBD,EAAME,MAAmB,CAC1CA,MAAO,SAACC,GAAD,MAAW,CAChBC,IAAK,kBACLC,OAAQ,OACRF,KAAAA,UAMON,0B,wICCTS,EAAsB,SAAC,GAAwB,QAAtBC,WAAAA,OAAsB,MAAT,GAAS,EACnD,OACE,yBACEC,UAAU,OACVC,MAAO,CACL,qBAAsB,0CAGxB,yBAAKD,UAAU,QACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,2BAAf,QACA,yBAAKA,UAAU,6BAAf,MACA,yBAAKA,UAAU,4BAAf,MACA,yBAAKA,UAAU,+BAAf,QAGJ,yBAAKA,UAAU,SACZD,EAAWG,KAAI,SAACC,EAAWC,GAAZ,OACd,kBAACC,EAAA,EAAD,CACEC,OAAQ,CACN,CAAC,KAAM,KAAM,SACb,CAAC,QAAS,KAAM,OAAQ,OAAQ,OAElCC,KAAK,OACLC,KAAML,EACNM,IAAKN,EAAUO,KAAOP,EAAUQ,GAChCC,SAAS,IACTZ,UAAWa,GAAAA,CACT,gGACA,CAAE,aAAcT,EAAQ,GAAM,KAGhC,oCACE,yBAAKJ,UAAU,yBACb,kBAACc,EAAA,EAAD,CAAMV,MAAOA,EAAOO,GAAIR,EAAUQ,MAEpC,yBAAKX,UAAU,SACb,kBAACe,EAAA,EAAD,CAAOJ,GAAIR,EAAUQ,MAEvB,yBAAKX,UAAU,YACb,kBAACgB,EAAA,EAAD,OAEF,kBAACC,EAAA,EAAD,CAAMT,KAAML,EAAWH,UAAU,SACjC,kBAACkB,EAAA,EAAD,CAASC,QAAShB,EAAUiB,GAAIpB,UAAU,SAC1C,kBAACqB,EAAA,EAAD,CACErB,UAAU,OACVU,KAAMP,EAAUmB,GAAGZ,KACnBC,GAAIR,EAAUmB,GAAGX,KAEnB,yBAAKX,UAAU,wCACZuB,GAAAA,CAAMpB,EAAUqB,IAAIC,OAAO,mBAW9C,SAAeC,EAAAA,EAAAA,MAAK5B,GCxEpB,GAAe4B,EAAAA,EAAAA,OAAK,WAAqB,OACvCC,EAAAA,EAAAA,KAEA,MACEtC,IADMuC,EAAR,EAAQA,KAAaC,GAArB,EAAcC,MAAd,EAAqBD,WAEf9B,GAFN,EAAgCgC,WAAhC,EAA4CC,UAA5C,EAAuDC,QAAvD,EAAgEC,SAE7CN,MAAAA,GAAA,UAAAA,EAAMA,YAAN,eAAY7B,aAAc,IAC7C,OAAI8B,EAEA,yBAAK7B,UAAS,qBACZ,kBAACmC,EAAA,EAAD,OAKJ,yBAAKnC,UAAU,6CACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,gCACb,kBAACoC,EAAA,GAAD,OAEF,yBAAKpC,UAAU,gBACb,yBAAKA,UAAU,MAAf,UACA,yBAAKA,UAAU,sBAAf,0BAKJ,yBAAKA,UAAU,qBACb,kBAACqC,EAAA,EAAD,CAAWC,SAAUvC,IADvB,MAGE,4BACEQ,KAAK,SACLP,UAAU,0FAEV,kBAAC,EAAAuC,eAAD,CAAgBC,KAAM,GAAIC,OAAQ,IAJpC,YASJ,kBAAC,EAAD,CAAS1C,WAAYA,QCrC3B,EARe,WACb,OACE,kBAAC,EAAA2C,OAAD,KACE,kBAAC,EAAAC,MAAD,CAAOvC,OAAK,EAACwC,QAAS,kBAACC,EAAD","sources":["webpack://wyy/./src/modules/services/daily/api.ts","webpack://wyy/./src/features/Daily-Song/Content.tsx","webpack://wyy/./src/features/Daily-Song/DailySong.tsx","webpack://wyy/./src/features/Daily-Song/Router.tsx"],"sourcesContent":["import { Daily } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getRecommendSongs: build.query<Daily, void>({\n      query: (body) => ({\n        url: `recommend/songs`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetRecommendSongsQuery } = api;\n","import React, { FC, memo } from \"react\";\nimport MenuCreate from \"@/components/MenuCreate\";\nimport classNames from \"classnames\";\nimport Rank from \"@/components/Table/Rank\";\nimport Heart from \"@/components/Table/Heart\";\nimport Download from \"@/components/Table/Download\";\nimport Name from \"@/components/Table/Name\";\nimport Artists from \"@/components/Table/Artists\";\nimport Album from \"@/components/Table/Album\";\nimport dayjs from \"dayjs\";\nimport { DailySong } from \"@/modules/services/daily/types\";\n\ninterface iProps {\n  dailySongs: DailySong[];\n}\n\nconst Content: FC<iProps> = ({ dailySongs = [] }) => {\n  return (\n    <div\n      className=\"pb-8\"\n      style={{\n        \"--ui_grid_template\": \"36px / 54px 30px 30px 36% 4fr 6fr 2fr\",\n      }}\n    >\n      <div className=\"list\">\n        <div className=\"thead\">\n          <div className=\"item grid leading-8 ui_grid_template\">\n            <div className=\"index\" />\n            <div className=\"heart\" />\n            <div className=\"download\" />\n            <div className=\"name text-gray-500 px-2\">音乐标题</div>\n            <div className=\"artist text-gray-500 px-2\">歌手</div>\n            <div className=\"album text-gray-500 px-2\">专辑</div>\n            <div className=\"duration text-gray-500 px-2\">时长</div>\n          </div>\n        </div>\n        <div className=\"tbody\">\n          {dailySongs.map((dailySong, index) => (\n            <MenuCreate\n              schema={[\n                [\"评论\", \"播放\", \"下一首播放\"],\n                [\"收藏到歌单\", \"分享\", \"复制链接\", \"不感兴趣\", \"下载\"],\n              ]}\n              type=\"song\"\n              item={dailySong}\n              key={dailySong.name + dailySong.id}\n              tabIndex=\"2\"\n              className={classNames(\n                \"grid h-9 items-center hover:bg-gray-100 focus:bg-gray-200 focus:outline-none ui_grid_template\",\n                { \"bg-gray-50\": index % 2 === 0 }\n              )}\n            >\n              <>\n                <div className=\"index pr-3 text-right\">\n                  <Rank index={index} id={dailySong.id} />\n                </div>\n                <div className=\"heart\">\n                  <Heart id={dailySong.id} />\n                </div>\n                <div className=\"download\">\n                  <Download />\n                </div>\n                <Name item={dailySong} className=\"px-2\" />\n                <Artists artists={dailySong.ar} className=\"px-2\" />\n                <Album\n                  className=\"px-2\"\n                  name={dailySong.al.name}\n                  id={dailySong.al.id}\n                />\n                <div className=\"duration text-gray-400 truncate px-2\">\n                  {dayjs(dailySong.dt).format(\"mm:ss\")}\n                </div>\n              </>\n            </MenuCreate>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Content);\n","import React, { memo } from \"react\";\nimport { IconFolderPlus } from \"@tabler/icons\";\nimport { SymbolToday } from \"@/components/Symbol\";\nimport useLoginStatus from \"@/hooks/useLoginStatus\";\nimport GroupPlay from \"@/components/GroupPlay\";\nimport { useGetRecommendSongsQuery } from \"@/modules/services/daily\";\nimport Loading from \"@/components/Loading\";\nimport Content from \"./Content\";\n\nexport default memo(function DailySong() {\n  useLoginStatus();\n\n  const { data, error, isLoading, isFetching, isSuccess, isError, refetch } =\n    useGetRecommendSongsQuery();\n  const dailySongs = data?.data?.dailySongs || [];\n  if (isLoading) {\n    return (\n      <div className={`flex-center pt-48`}>\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <div className=\"w-full overflow-auto max-h-full flex-auto\">\n      <div className=\"px-8 pb-2.5 pt-6 border-b\">\n        <div className=\"section flex items-center\">\n          <div className=\"date w-20 h-20 ui_themeColor\">\n            <SymbolToday />\n          </div>\n          <div className=\"content ml-8\">\n            <div className=\"h1\">每日歌曲推荐</div>\n            <div className=\"text-gray-400 tips\">\n              根据你的音乐口味生成, 每天6:00更新\n            </div>\n          </div>\n        </div>\n        <div className=\"actions flex mt-5\">\n          <GroupPlay playlist={dailySongs} />\n          &nbsp; &nbsp;\n          <button\n            type=\"button\"\n            className=\"inline-flex items-center justify-center border px-3 h-8 rounded-full hover:bg-gray-100\"\n          >\n            <IconFolderPlus size={22} stroke={1} />\n            &nbsp; 收藏全部\n          </button>\n        </div>\n      </div>\n      <Content dailySongs={dailySongs} />\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport DailySong from \"./DailySong\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route index element={<DailySong />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["useGetRecommendSongsQuery","base","endpoints","build","getRecommendSongs","query","body","url","method","Content","dailySongs","className","style","map","dailySong","index","MenuCreate","schema","type","item","key","name","id","tabIndex","classNames","Rank","Heart","Download","Name","Artists","artists","ar","Album","al","dayjs","dt","format","memo","useLoginStatus","data","isLoading","error","isFetching","isSuccess","isError","refetch","Loading","Symbol","GroupPlay","playlist","IconFolderPlus","size","stroke","Routes","Route","element","DailySong"],"sourceRoot":""}