{"version":3,"file":"js/Sublist.js?version=c4b4e2d8","mappings":"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","sources":["webpack://wyy/./src/modules/services/sublist/api.ts","webpack://wyy/./src/features/Sublist/Album.tsx","webpack://wyy/./src/features/Sublist/Artist.tsx","webpack://wyy/./src/features/Sublist/MV.tsx","webpack://wyy/./src/features/Sublist/Topic.tsx","webpack://wyy/./src/features/Sublist/config.ts","webpack://wyy/./src/features/Sublist/Layout.tsx","webpack://wyy/./src/features/Sublist/Router.tsx"],"sourcesContent":["import { MVs, Albums, Topics, Artists } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getMVSubList: build.query<MVs, void>({\n      query: (body) => ({\n        url: `mv/sublist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getTopicSubList: build.query<Topics, void>({\n      query: (body) => ({\n        url: `topic/sublist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistSubList: build.query<Artists, void>({\n      query: (body) => ({\n        url: `artist/sublist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getAlbumSubList: build.query<Albums, void>({\n      query: (body) => ({\n        url: `album/sublist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetAlbumSubListQuery,\n  useGetArtistSubListQuery,\n  useGetMVSubListQuery,\n  useGetTopicSubListQuery,\n} = api;\n","import React, { FC, memo } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Loading from \"@/components/Loading\";\nimport Empty from \"@/features/Sublist/components/Empty\";\nimport useInit from \"./useInit\";\nimport { useGetAlbumSubListQuery } from \"@/modules/services/sublist\";\n\nconst Album = () => {\n  const { pathname } = useLocation();\n  const path = pathname.slice(9);\n  // const { isLoading, count, search, setSearch, filter } = useInit(path);\n  const { data, isLoading } = useGetAlbumSubListQuery();\n  const count = data?.count || 0;\n  const navigate = useNavigate();\n  const filter = data?.data || [];\n  if (isLoading) {\n    return (\n      <div className={`flex-center`}>\n        <Loading />\n      </div>\n    );\n  }\n  // if (count === 0) {\n  //   return <Empty count={count} search={search} path={path} />;\n  // }\n  return (\n    <div className=\"domSublist_list\">\n      {filter.map((item) => (\n        <div\n          role=\"button\"\n          className=\"item\"\n          key={item.id}\n          onClick={() => navigate(`/playlist/album/${item.id}`)}\n        >\n          <div className=\"cover\">\n            <Link to={`/playlist/album/${item.id}`}>\n              <img\n                className=\"ui_containimg\"\n                src={`${item.picUrl}?param=100y100`}\n                alt=\"\"\n              />\n            </Link>\n          </div>\n          <div className=\"name truncate\">\n            <span>{item.name}</span>\n            <span className=\"text-gray-400\">\n              {item.alias.map((alia) => alia)}\n            </span>\n          </div>\n          <div className=\"creator\">\n            {item.artists.map((artist) => (\n              <Link\n                key={artist.id}\n                onClick={(e) => e.stopPropagation()}\n                to={`/artist/${artist.id}`}\n                className=\"text-gray-400 hover\"\n              >\n                {artist.name}\n              </Link>\n            ))}\n          </div>\n          <div className=\"size text-gray-400\">{item.size}首</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Album);\n","import React, { memo } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Loading from \"@/components/Loading\";\nimport Empty from \"@/features/Sublist/components/Empty\";\nimport useInit from \"@/features/Sublist/useInit\";\nimport { useGetAlbumSubListQuery } from \"@/modules/services/sublist\";\nconst AliasOrTrans = ({ alias, trans }) => {\n  if (alias.length) {\n    return <span className=\"text-gray-400\">({alias[0]})</span>;\n  }\n  if (trans) {\n    return <span className=\"text-gray-400\">({trans})</span>;\n  }\n};\n\nconst Artist = () => {\n  const { pathname } = useLocation();\n  const path = pathname.slice(9);\n  // const { isLoading, count, search, setSearch, filter } = useInit(path);\n  const { data, isLoading } = useGetAlbumSubListQuery();\n  const count = data?.count || 0;\n  const navigate = useNavigate();\n  const filter = data?.data || [];\n  if (isLoading) {\n    return (\n      <div className={`flex-center`}>\n        <Loading />\n      </div>\n    );\n  }\n  // if (count === 0) {\n  //   return <Empty count={count} search={search} path={path} />;\n  // }\n  return (\n    <div className=\"domSublist_list\">\n      {filter.map((item) => (\n        <Link to={`/artist/${item.id}`} className=\"item\" key={item.id}>\n          <div className=\"cover\">\n            <img\n              className=\"ui_containimg\"\n              src={`${item.picUrl}?param=100y100`}\n              alt=\"\"\n            />\n          </div>\n          <div className=\"name truncate\">\n            {item.name}\n            &nbsp;\n            {AliasOrTrans(item)}\n          </div>\n          <div className=\"creator text-gray-400\">\n            专辑：\n            {item.albumSize}\n          </div>\n          <div className=\"size text-gray-400\">\n            MV：\n            {item.mvSize}\n          </div>\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Artist);\n","import React, { memo, useMemo } from \"react\";\nimport GridVideo from \"@/components/GridVideo\";\nimport Empty from \"@/features/Sublist/components/Empty\";\nimport Loading from \"@/components/Loading\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport useInit from \"@/features/Sublist/useInit\";\nimport { useGetAlbumSubListQuery } from \"@/modules/services/sublist\";\n\nconst MV = () => {\n  const { pathname } = useLocation();\n  const path = pathname.slice(9);\n  // const { isLoading, count, search, setSearch, filter } = useInit(path);\n  const { data, isLoading } = useGetAlbumSubListQuery();\n  const count = data?.count || 0;\n  const navigate = useNavigate();\n  const filter = data?.data || [];\n  const memoFilter = useMemo(\n    () =>\n      filter.map(\n        ({ vid, coverUrl, playTime, durationms, title, type, creator }) => ({\n          id: vid,\n          cover: coverUrl,\n          playCount: playTime,\n          duration: durationms,\n          title,\n          type,\n          creator,\n        })\n      ),\n    [filter]\n  );\n  if (isLoading) {\n    return (\n      <div className={`flex-center`}>\n        <Loading />\n      </div>\n    );\n  }\n  // if (count === 0) {\n  //   return <Empty count={count} search={search} path={path} />;\n  // }\n\n  return (\n    <div className=\"domSublist_grid\">\n      <GridVideo list={memoFilter} />\n    </div>\n  );\n};\n\nexport default memo(MV);\n","import React, { memo } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Loading from \"@/components/Loading\";\nimport Empty from \"./components/Empty\";\nimport { useGetAlbumSubListQuery } from \"@/modules/services/sublist\";\n\nconst Topic = () => {\n  const navigate = useNavigate();\n  const { data, isLoading } = useGetAlbumSubListQuery();\n  const count = data?.count || 0;\n  const filter = data?.data || [];\n  if (isLoading) {\n    return (\n      <div className={`flex-center`}>\n        <Loading />\n      </div>\n    );\n  }\n  // if (count === 0) {\n  //   return <Empty count={count} search={search} path={path} />;\n  // }\n  return (\n    <div className=\"domSublist_list\">\n      {filter.map((item) => (\n        <button\n          type=\"button\"\n          className=\"item\"\n          key={item.id}\n          onClick={() => navigate(`/playlist/music/${item.id}`)}\n        >\n          <div className=\"cover\">\n            <Link to={`/playlist/music/${item.id}`}>\n              <img\n                className=\"ui_containimg\"\n                src={`${item.picUrl}?param=100y100`}\n                alt=\"\"\n              />\n            </Link>\n          </div>\n          <div className=\"name truncate\">\n            <Link to={`/playlist/music/${item.id}`}>{item.name}</Link>\n            <span className=\"text-gray-400\">\n              {item.alias.map((alia: string) => alia)}\n            </span>\n          </div>\n          <div className=\"artist\">\n            {item.artists.map((artist) => (\n              <Link\n                key={artist.id}\n                onClick={(e) => e.stopPropagation()}\n                to={`/artist/${artist.id}`}\n                className=\"text-gray-400 hover\"\n              >\n                {artist.name}\n              </Link>\n            ))}\n          </div>\n          <div className=\"size text-gray-400\">{item.size}首</div>\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Topic);\n","import Album from \"./Album\";\nimport Artist from \"./Artist\";\nimport MV from \"./MV\";\nimport Topic from \"./Topic\";\nimport { FC, ReactNode } from \"react\";\nimport {\n  useGetAlbumSubListQuery,\n  useGetArtistSubListQuery,\n  useGetMVSubListQuery,\n  useGetTopicSubListQuery,\n} from \"@/modules/services/sublist\";\n\nexport type ConfigName = \"专辑\" | \"歌手\" | \"视频\" | \"专栏\";\nexport const navs: ConfigName[] = [\"专辑\", \"歌手\", \"视频\", \"专栏\"];\n\nexport interface Rule<T> {\n  (data: T[], search: string): T;\n}\n\nexport interface iContentProps {\n  path: string;\n}\n\nexport const elements: [ConfigName, ReactNode][] = [\n  [\"专辑\", Album],\n  [\"歌手\", Artist],\n  [\"视频\", MV],\n  [\"专栏\", Topic],\n];\n\nexport const apis: { [key in ConfigName]: ReactNode } = {\n  专辑: useGetAlbumSubListQuery,\n  歌手: useGetArtistSubListQuery,\n  视频: useGetMVSubListQuery,\n  专栏: useGetTopicSubListQuery,\n};\n\nexport const rules: { [key in ConfigName]: Rule<unknown> } = {\n  专辑: (data, search) =>\n    data.filter(\n      (item) =>\n        item.name.indexOf(search) >= 0 ||\n        item.artists.find((artist) => artist.name.indexOf(search) >= 0)\n    ),\n  歌手: (data, search) =>\n    data.filter(\n      (item) =>\n        item.name.indexOf(search) >= 0 ||\n        item?.trans?.indexOf(search) >= 0 ||\n        item.alias.find((alia) => alia.indexOf(search) >= 0)\n    ),\n  视频: (data, search) =>\n    data.filter(\n      (item) =>\n        item.title.indexOf(search) >= 0 ||\n        item.creator.find((creator) => creator.userName.indexOf(search) >= 0)\n    ),\n  专栏: (data, search) =>\n    data.filter(\n      (item) =>\n        item.name.indexOf(search) >= 0 ||\n        item.artists.find((artist) => artist.name.indexOf(search) >= 0)\n    ),\n};\n","import classNames from \"classnames\";\nimport React, { memo } from \"react\";\nimport { NavLink, Outlet } from \"react-router-dom\";\nimport { navs } from \"./config\";\nconst Layout = () => {\n  return (\n    <div className=\"overflow-auto max-h-full flex-auto\">\n      <div className=\"px-8 py-5 space-x-4 text-base\">\n        {navs.map((name) => (\n          <NavLink\n            key={name}\n            to={encodeURIComponent(name)}\n            className={({ isActive }) =>\n              classNames(isActive && \"text-xl font-black ui_underline\")\n            }\n          >\n            {name}\n          </NavLink>\n        ))}\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default memo(Layout);\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport Album from \"./Album\";\nimport Artist from \"./Artist\";\nimport MV from \"./MV\";\nimport Topic from \"./Topic\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route path=\"/*\" element={<Layout />}>\n        <Route path={encodeURIComponent(`专辑`)} element={<Album />} />\n        <Route path={encodeURIComponent(`歌手`)} element={<Artist />} />\n        <Route path={encodeURIComponent(`视频`)} element={<MV />} />\n        <Route path={encodeURIComponent(`专栏`)} element={<Topic />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["api","base","endpoints","build","getMVSubList","query","body","url","method","getTopicSubList","getArtistSubList","getAlbumSubList","useGetAlbumSubListQuery","Album","useGetArtistSubListQuery","useGetMVSubListQuery","useGetTopicSubListQuery","useLocation","pathname","slice","data","isLoading","navigate","count","useNavigate","filter","div","className","Loading","map","item","role","key","id","onClick","Link","to","img","src","picUrl","alt","span","name","alias","alia","artists","artist","e","stopPropagation","size","memo","Artist","trans","length","MV","memoFilter","useMemo","coverUrl","vid","cover","playCount","playTime","duration","durationms","title","type","creator","GridVideo","list","Topic","button","navs","Layout","NavLink","encodeURIComponent","isActive","classNames","Outlet","Routes","Route","path","element"],"sourceRoot":""}