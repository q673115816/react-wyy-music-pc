{"version":3,"file":"js/Look.js?version=d429744f","mappings":"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","sources":["webpack://wyy/./src/features/Look/socket.ts","webpack://wyy/./src/features/Look/Content.ts","webpack://wyy/./src/features/Look/Look.tsx","webpack://wyy/./src/features/Look/Home/List.tsx","webpack://wyy/./src/features/Look/Home/Home.tsx","webpack://wyy/./src/features/Look/Live/Live.tsx","webpack://wyy/./src/features/Look/Room/Room.tsx","webpack://wyy/./src/features/Look/Router.tsx"],"sourcesContent":["import io from \"socket.io-client\";\n\nconst socket = io(LIVE_URL, {\n  autoConnect: false,\n});\n\nsocket.on(\"create-success\", (data) => {\n  console.log(data);\n});\n\nsocket.on(\"join-success\", (data) => {\n  console.log(data);\n});\n\nsocket.on(\"disconnect-success\", (data) => {\n  console.log(data);\n});\n\nexport default socket;\n","import socket from \"./socket\";\n\nexport const SOCKET_CONNECT = \"SOCKET_CONNECT\";\nexport const SOCKET_DISCONNECT = \"SOCKET_DISCONNECT\";\nexport const SOCKET_DESKTOP_START = \"SOCKET_DESKTOP_START\";\nexport const SOCKET_DESKTOP_END = \"SOCKET_DESKTOP_END\";\nexport const SOCKET_USER_START = \"SOCKET_USER_START\";\nexport const SOCKET_USER_END = \"SOCKET_USER_END\";\nexport const SOCKET_PUSH_START = \"SOCKET_PUSH_START\";\nexport const SOCKET_PUSH_END = \"SOCKET_PUSH_END\";\n\nexport interface LookState {\n  status: {\n    connect: boolean;\n    deskTop: boolean;\n    user: boolean;\n    push: boolean;\n    faceDetector: boolean;\n  };\n}\n\nexport const LookReducer = (draft: LookState, action: any) => {\n  switch (action.type) {\n    case SOCKET_CONNECT:\n      socket.connect();\n      draft.status.connect = true;\n      return;\n    case SOCKET_DISCONNECT:\n      socket.disconnect();\n      draft.status.connect = false;\n      return;\n    case SOCKET_DESKTOP_START:\n      draft.status.deskTop = true;\n      return;\n    case SOCKET_DESKTOP_END:\n      draft.status.deskTop = false;\n      return;\n    case SOCKET_USER_START:\n      draft.status.user = true;\n      return;\n    case SOCKET_USER_END:\n      draft.status.user = false;\n      return;\n    case SOCKET_PUSH_START:\n      socket.emit(\"create\", {\n        user: \"user\",\n        title: \"title\",\n      });\n      draft.status.push = true;\n      return;\n    case SOCKET_PUSH_END:\n      draft.status.push = false;\n      return;\n    default:\n      return draft;\n  }\n};\n\nexport const LookInitialState: LookState = {\n  status: {\n    connect: false,\n    deskTop: false,\n    user: false,\n    push: false,\n    faceDetector: false,\n  },\n};\n","import React, { memo, useEffect, createContext } from \"react\";\nimport { useImmerReducer } from \"use-immer\";\nimport { Routes, Route, Outlet } from \"react-router-dom\";\nimport adapter from \"webrtc-adapter\";\nimport { useAppDispatch } from \"@/reducers/hooks\";\nimport {\n  LookInitialState,\n  LookReducer,\n  SOCKET_CONNECT,\n  SOCKET_DISCONNECT,\n} from \"./Content\";\nimport getIP from \"./getIP\";\n\nexport const LookContent = createContext<any>(null);\n\nexport default memo(function Base() {\n  const dispatch = useAppDispatch();\n  const [lookReducer, lookDispatch] = useImmerReducer(\n    LookReducer,\n    LookInitialState\n  );\n  useEffect(() => {\n    // (async () => {\n    //   await getIP();\n    // })();\n  }, []);\n  // useEffect(() => {\n  //   lookDispatch({ type: SOCKET_CONNECT });\n  //   return () => {\n  //     lookDispatch({ type: SOCKET_DISCONNECT });\n  //   };\n  // }, []);\n  return (\n    <LookContent.Provider value={{ lookReducer, lookDispatch }}>\n      <Outlet />\n    </LookContent.Provider>\n  );\n});\n","import React, { memo } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { iList } from \"./types\";\n\nexport default memo<{ list: iList }>(({ list }) => {\n  const { pathname } = useLocation();\n  return (\n    <div className={`grid grid-cols-3 gap-5`}>\n      {list.map(([key, options]) => (\n        <div key={key}>\n          <Link to={`${pathname}/${key}`}>\n            <img\n              className={`ui_aspect-ratio-16/9 cursor-pointer`}\n              loading={`lazy`}\n              src={options.banner}\n              alt=\"\"\n            />\n          </Link>\n          <Link to={`${pathname}/${key}`} className={`cursor-pointer`}>\n            {options.title}\n          </Link>\n          <div>\n            <Link to={`/`}>{options.user}</Link>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n});\n","import React, {\n  useState,\n  memo,\n  useRef,\n  useEffect,\n  useCallback,\n  MouseEventHandler,\n} from \"react\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport Loading from \"@/components/Loading\";\nimport Rea from \"react-error-boundary\";\nimport socket from \"../socket\";\nimport { iList } from \"./types\";\nimport LiveList from \"./List\";\n\nexport default memo(function Home() {\n  const [size, setSize] = useState(20);\n  const DomScroll = useRef(null);\n  const DomObserver = useRef(null);\n  const [list, setList] = useState<iList>([]);\n  // useInfinite(() => { setSize((prev) => prev + 20); }, DomScroll, DomObserver);\n\n  const { data, error, isLoading, isSuccess, status } = useQuery(\n    \"look\",\n    async () => {\n      const { data } = await axios\n        .get(`${LIVE_URL}/list`)\n        .then((res) => res.data);\n      return data;\n    }\n  );\n\n  return (\n    <div className=\"domLook overflow-auto max-h-full flex-auto\" ref={DomScroll}>\n      <div className=\"domLook_header ui_header\">\n        <span className=\"title h1\">LOOK直播</span>\n        <span className=\"text-gray-400 slogan ml-2\">在这里，看见音乐</span>\n        <Link\n          to={`my`}\n          className=\"ml-2 py-1 px-2 rounded bg-red-500 text-white\"\n        >\n          我的直播\n        </Link>\n        <a href=\"https://look.163.com/hot\" className=\"text-gray-400 ml-auto\">\n          更多 &gt;\n        </a>\n      </div>\n      <div className=\"px-8\">\n        {isLoading && (\n          <div className={`pt-48 flex-center`}>\n            <Loading />\n          </div>\n        )}\n        {isSuccess && <LiveList list={data} />}\n\n        <div ref={DomObserver} />\n      </div>\n    </div>\n  );\n});\n","import React, {\n  EventHandler,\n  FC,\n  memo,\n  MouseEventHandler,\n  ReactEventHandler,\n  ReactNode,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport classnames from \"classnames\";\nimport useLoginStatus, { handleLoginStatus } from \"@/hooks/useLoginStatus\";\nimport { LookContent } from \"@/features/Look/Look\";\nimport {\n  SOCKET_DESKTOP_END,\n  SOCKET_DESKTOP_START,\n  SOCKET_PUSH_END,\n  SOCKET_PUSH_START,\n  SOCKET_USER_END,\n  SOCKET_USER_START,\n} from \"../Content\";\n\n// 以下代码是从网上找的\n//=========================================================================================\n//如果返回的是false说明当前操作系统是手机端，如果返回的是true则说明当前的操作系统是电脑端\n\nfunction IsPC() {\n  const userAgentInfo = navigator.userAgent;\n  const Agents = [\n    \"Android\",\n    \"iPhone\",\n    \"SymbianOS\",\n    \"Windows Phone\",\n    \"iPad\",\n    \"iPod\",\n  ];\n  let flag = true;\n\n  for (let v = 0; v < Agents.length; v++) {\n    if (userAgentInfo.indexOf(Agents[v]) > 0) {\n      flag = false;\n      break;\n    }\n  }\n\n  return flag;\n}\n\n//如果返回true 则说明是Android  false是ios\nfunction is_android() {\n  const u = navigator.userAgent,\n    app = navigator.appVersion;\n  const isAndroid = u.indexOf(\"Android\") > -1 || u.indexOf(\"Linux\") > -1; //g\n  const isIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios终端\n  if (isAndroid) {\n    //这个是安卓操作系统\n    return true;\n  }\n\n  if (isIOS) {\n    //这个是ios操作系统\n    return false;\n  }\n}\n\ninterface iButtonProps {\n  onClick: MouseEventHandler;\n  status: boolean;\n}\n\nconst Button: FC<iButtonProps> = ({ onClick, children, status }) => {\n  return (\n    <button\n      type={\"button\"}\n      className={classnames(\n        `text-white rounded p-2`,\n        status ? \"bg-red-500\" : \"bg-blue-500\"\n      )}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\n/*\n * TODO\n *  1.信令系统\n *  2.摄像头叠加桌面，如基本直播\n * */\nexport default memo(function Live() {\n  const {\n    lookReducer: { status, socket },\n    lookDispatch,\n  } = useContext(LookContent);\n  // const [isSupport] = useState<boolean>(() => {\n  //   return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n  // });\n\n  const [audioinput, setAudioinput] = useState<MediaDeviceInfo[]>([]);\n  const [videoinput, setVideoinput] = useState<MediaDeviceInfo[]>([]);\n\n  useEffect(() => {\n    (async () => {\n      const deviceInfos = await navigator.mediaDevices.enumerateDevices();\n      const audioinput = [];\n      const videoinput = [];\n      for (const deviceInfo of deviceInfos) {\n        if (deviceInfo.kind === \"audioinput\") {\n          audioinput.push(deviceInfo);\n        } else if (deviceInfo.kind === \"videoinput\") {\n          videoinput.push(deviceInfo);\n        } else {\n          console.log(\"other kind: \", deviceInfo);\n        }\n      }\n      setAudioinput(audioinput);\n      setVideoinput(videoinput);\n    })();\n  }, []);\n\n  const RefVideo = useRef<HTMLVideoElement>(null);\n  const RefDeskTop = useRef<HTMLVideoElement>(null);\n  const RefDeskTopStream = useRef<MediaStream>(null);\n  const RefUser = useRef<HTMLCanvasElement>(null);\n  const RefCtx = useRef(null);\n  const RefFace = useRef(new FaceDetector());\n  const handleDeskTop: MouseEventHandler = () => {\n    if (!(navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia))\n      return false;\n    const diskTop = RefDeskTop.current as HTMLVideoElement;\n    if (status.deskTop) {\n      const tracks = (diskTop.srcObject as MediaStream).getTracks();\n      tracks.forEach((track) => track.stop());\n      diskTop.srcObject = null;\n      lookDispatch({ type: SOCKET_DESKTOP_END });\n    } else {\n      navigator.mediaDevices\n        .getDisplayMedia({ audio: true, video: true })\n        .then((mediaStream) => {\n          diskTop.srcObject = mediaStream;\n          lookDispatch({ type: SOCKET_DESKTOP_START });\n        });\n    }\n  };\n\n  const handleUser: MouseEventHandler = () => {\n    const video = RefVideo.current as HTMLVideoElement;\n    if (status.user) {\n      const tracks = (video.srcObject as MediaStream).getTracks();\n      tracks.forEach((track) => track.stop());\n      video.srcObject = null;\n      lookDispatch({ type: SOCKET_USER_END });\n    } else {\n      navigator.mediaDevices\n        .getUserMedia({\n          // audio: true,\n          video: {\n            width: { ideal: 1280 },\n            height: { ideal: 720 },\n          },\n        })\n        .then((mediaStream) => {\n          console.log(mediaStream);\n          video.srcObject = mediaStream;\n          lookDispatch({ type: SOCKET_USER_START });\n        });\n    }\n  };\n\n  const handleSend: MouseEventHandler = () => {\n    if (status.push) handlePushClose();\n    else handlePushOpen();\n  };\n\n  const handlePushOpen = () => {\n    lookDispatch({ type: SOCKET_PUSH_START });\n    const pc = new RTCPeerConnection({});\n    pc.addEventListener(\"icecandidate\", (e) => {\n      const peerConnection = e.target;\n      const iceCandidate = e.candidate;\n\n      if (iceCandidate) {\n        const newIceCandidate = new RTCIceCandidate(iceCandidate);\n        // const otherPeer;\n      }\n    });\n  };\n  const handlePushClose = () => {\n    lookDispatch({ type: SOCKET_PUSH_END });\n  };\n\n  const handleLoadedMetadata: ReactEventHandler<HTMLVideoElement> = ({\n    target,\n  }) => {\n    const width = target.videoWidth;\n    const height = target.videoHeight;\n    RefUser.current.width = width;\n    RefUser.current.height = height;\n  };\n\n  const handleFaceDetector = () => {\n    requestAnimationFrame(handleFaceDetector);\n    const { width, height } = RefUser.current;\n    RefFace.current\n      .detect(RefVideo.current)\n      .then((faces) => {\n        RefCtx.current.clearRect(0, 0, width, height);\n        RefCtx.current.beginPath();\n        RefCtx.current.lineWidth = 3;\n        RefCtx.current.strokeStyle = \"lime\";\n        RefCtx.current.setLineDash([5]);\n        for (const { boundingBox: face } of faces) {\n          RefCtx.current.strokeRect(face.x, face.y, face.width, face.height);\n        }\n      })\n      .catch((e) => console.log(e));\n  };\n  useEffect(() => {\n    RefCtx.current = RefUser.current.getContext(\"2d\");\n  }, [RefUser]);\n  return (\n    <div className={`w-full h-full p-8 overflow-auto`}>\n      <div className={`flex`}>\n        <Button onClick={handleDeskTop} status={status.deskTop}>\n          桌面共享开关\n        </Button>\n        <Button onClick={handleUser} status={status.user}>\n          摄像头开关\n        </Button>\n        <Button onClick={handleFaceDetector} status={status.faceDetector}>\n          人脸识别\n        </Button>\n        <Button onClick={handleSend} status={status.push}>\n          推送开关\n        </Button>\n      </div>\n      <div className=\"flex\">\n        <span>音频输入</span>\n        <select className={`border`}>\n          {audioinput.map((item, index) => {\n            return (\n              <option value=\"\" key={index}>\n                {item.label}\n              </option>\n            );\n          })}\n        </select>\n        <span>视频输入</span>\n        <select className={`border`}>\n          {videoinput.map((item, index) => {\n            return (\n              <option value=\"\" key={index}>\n                {item.label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <div className={`flex flex-col`}>\n        <div className={``}>\n          <video className={`w-full`} ref={RefDeskTop} autoPlay playsInline />\n        </div>\n        <hr />\n        <div className={\"relative\"}>\n          <video\n            className={`w-full`}\n            ref={RefVideo}\n            autoPlay\n            playsInline\n            style={{ transform: `scale(-1, 1)` }}\n            onLoadedMetadata={handleLoadedMetadata}\n          />\n          <canvas\n            className={`absolute inset-0 w-full h-full`}\n            style={{ transform: `scale(-1, 1)` }}\n            ref={RefUser}\n          />\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default memo(function Room() {\n  const { id } = useParams();\n  return (\n    <div className={`p-8`}>\n      <video className={`w-full`} autoPlay playsInline />\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Look from \"./Look\";\nimport Home from \"./Home\";\nimport Live from \"./Live\";\nimport Room from \"./Room\";\n\nconst Router = () => {\n  return (\n    <Routes>\n      <Route element={<Look />}>\n        <Route index element={<Home />} />\n        <Route path={`my`} element={<Live />} />\n        <Route path={`:id`} element={<Room />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["socket","io","LIVE_URL","autoConnect","on","data","console","log","SOCKET_DESKTOP_START","SOCKET_DESKTOP_END","SOCKET_USER_START","SOCKET_USER_END","SOCKET_PUSH_START","SOCKET_PUSH_END","LookReducer","draft","action","type","status","connect","deskTop","user","title","push","LookInitialState","faceDetector","LookContent","createContext","memo","useAppDispatch","useImmerReducer","lookReducer","lookDispatch","useEffect","Provider","value","Outlet","list","pathname","useLocation","className","map","key","options","Link","to","loading","src","banner","alt","useState","DomScroll","useRef","DomObserver","useQuery","axios","then","res","isLoading","error","isSuccess","ref","href","Loading","Button","onClick","children","classnames","useContext","audioinput","setAudioinput","videoinput","setVideoinput","navigator","mediaDevices","enumerateDevices","deviceInfos","deviceInfo","kind","RefVideo","RefDeskTop","RefUser","RefCtx","RefFace","FaceDetector","current","getContext","getDisplayMedia","diskTop","srcObject","getTracks","forEach","track","stop","audio","video","mediaStream","getUserMedia","width","ideal","height","handleFaceDetector","requestAnimationFrame","detect","faces","clearRect","beginPath","lineWidth","strokeStyle","setLineDash","face","boundingBox","strokeRect","x","y","catch","e","RTCPeerConnection","addEventListener","target","iceCandidate","candidate","RTCIceCandidate","item","index","label","autoPlay","playsInline","style","transform","onLoadedMetadata","videoWidth","videoHeight","useParams","id","Routes","Route","element","Look","Home","path","Live","Room"],"sourceRoot":""}