{"version":3,"file":"js/Cloud.js?version=f2712b61","mappings":"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","sources":["webpack://wyy/./src/components/HeaderBarSearch.tsx","webpack://wyy/./src/modules/services/user/api.ts","webpack://wyy/./src/features/Cloud/Cloud.tsx","webpack://wyy/./src/features/Cloud/Router.tsx"],"sourcesContent":["import React, { FC, memo } from \"react\";\nimport { IconX, IconSearch } from \"@tabler/icons\";\n\ninterface iProps {\n  search: string;\n  setSearch: (keyword: string) => void;\n  placeholder: string;\n}\n\nconst HeaderBarSearch: FC<iProps> = ({\n  search,\n  setSearch,\n  placeholder = \"\",\n}) => (\n  <div className=\"search\">\n    <input\n      type=\"text\"\n      value={search}\n      placeholder={placeholder}\n      onChange={({ target }) => setSearch(target.value)}\n    />\n    <div className=\"ico\">\n      {search ? (\n        <button type=\"button\" onClick={() => setSearch(\"\")}>\n          <IconX size={16} />\n        </button>\n      ) : (\n        <IconSearch size={16} />\n      )}\n    </div>\n  </div>\n);\n\nexport default memo(HeaderBarSearch);\n","import { Clouds } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getUserCloud: build.query<Clouds, { limit: number }>({\n      query: (body) => ({\n        url: `user/cloud`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetUserCloudQuery } = api;\n","import React, { memo, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"@/components/HeaderBarSearch\";\n\nimport MenuCreate from \"@/components/MenuCreate/MenuCreate\";\nimport Rank from \"@/components/Table/Rank\";\nimport Heart from \"@/components/Table/Heart\";\nimport Download from \"@/components/Table/Download\";\nimport GroupPlay from \"@/components/GroupPlay\";\nimport Name from \"@/components/Table/Name\";\nimport Artists from \"@/components/Table/Artists\";\nimport Album from \"@/components/Table/Album\";\n\nimport {\n  IconCaretUp,\n  IconCaretDown,\n  IconSwitchVertical,\n  IconCloudDownload,\n  IconPlus,\n  IconPlayerPlay,\n} from \"@tabler/icons\";\nimport { useGetUserCloudQuery } from \"@/modules/services/user\";\n\nconst defaultSort = (a, b, sort) =>\n  String(a[sort.code]).localeCompare(String(b[sort.code]), \"zh-CN\") * sort.type;\n\nconst th = [\n  [\"音乐标题\", \"songName\", defaultSort],\n  [\"歌手\", \"artist\", defaultSort],\n  [\"专辑\", \"album\", defaultSort],\n  [\"格式\", \"\", defaultSort],\n  [\n    \"大小\",\n    \"fileSize\",\n    (a, b, sort) =>\n      (Number.parseFloat(a[sort.code]) - Number.parseFloat(b[sort.code])) *\n      sort.type,\n  ],\n  [\n    \"上传时间\",\n    \"addTime\",\n    (a, b, sort) => (a[sort.code] - b[sort.code]) * sort.type,\n  ],\n];\n\nconst BuildSort = (item, sort) => {\n  if (sort.name !== item)\n    return <IconSwitchVertical size={14} color=\"#f00\" stroke={1} />;\n  if (sort.type === -1)\n    return <IconCaretDown size={20} stroke={0} fill=\"#000\" />;\n  if (sort.type === 1) return <IconCaretUp size={12} stroke={0} fill=\"#000\" />;\n  if (sort.type === 0)\n    return <IconSwitchVertical size={14} color=\"#f00\" stroke={1} />;\n};\n\nconst Cloud = () => {\n  const [visibility, setVisibility] = useState(false);\n  const [search, setSearch] = useState(\"\");\n\n  const [sort, setSort] = useState({\n    name: \"上传时间\",\n    type: -1,\n    code: \"addTime\",\n    callback: (a, b, sort) => (a[sort.code] - b[sort.code]) * sort.type,\n  });\n\n  const handleToggleVisibility = () => {\n    setVisibility(!visibility);\n  };\n\n  const { data: useCloud = {}, isLoading } = useGetUserCloudQuery({\n    limit: 100,\n  });\n  const { data = [], count = 0, maxSize = \"\", size = \"\" } = useCloud;\n\n  const handleSort = (obj) => {\n    if (sort.name !== obj.name) {\n      return setSort({\n        ...obj,\n        type: 1,\n      });\n    }\n    switch (sort.type) {\n      case -1:\n        return setSort({\n          name: \"\",\n          code: \"\",\n          callback: (a, b) => 0,\n          type: 0,\n        });\n      case 1:\n        return setSort({\n          ...obj,\n          type: -1,\n        });\n      default:\n        return setSort({\n          ...obj,\n          type: 1,\n        });\n    }\n  };\n\n  // useEffect(() => {\n  //   console.log('qwe');\n  //   setData(\n  //     data.sort((a, b) => sort.callback(a, b, sort)),\n  //   );\n  // }, [data, sort]);\n  if (isLoading) return null;\n  return (\n    <div className=\"domManage overflow-auto h-full\">\n      <div className=\"domManage_header ui_header\">\n        <span className=\"domManage_header_title h1\">我的音乐云盘</span>\n      </div>\n      <div className=\"domCloud_info py-2.5 px-8\">\n        <span>云盘容量</span>\n        &nbsp;\n        <div className=\"w-28 h-2.5 inline-block bg-gray-200 rounded-full overflow-hidden\">\n          <div\n            className=\"h-full bg-blue-600\"\n            style={{ width: (size / maxSize) * 100 || 0 }}\n          />\n        </div>\n        &nbsp;\n        <span className=\"num\">\n          {(size / 1024 / 1024 / 1024).toFixed(2)}\n          G/\n          {maxSize / 1024 / 1024 / 1024}G\n        </span>\n        &nbsp;\n        <span className=\"ml-8\">歌曲永久保存，随时随地多端畅听</span>\n        &nbsp;\n        <a\n          href=\"https://music.163.com/#/store/product/detail?id=34001\"\n          className=\"ui_link\"\n        >\n          扩容\n        </a>\n      </div>\n      <div className=\"ui_headerBar border-b\">\n        <div className=\"left space-x-2\">\n          <GroupPlay />\n          <button\n            type=\"button\"\n            className=\"flex-center ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full\"\n          >\n            <IconPlus size={20} />\n            &nbsp; 上传音乐\n          </button>\n        </div>\n        <div className=\"right\">\n          <Search {...{ search, setSearch, placeholder: \"搜索我的音乐云盘\" }} />\n        </div>\n      </div>\n      <div className=\"overflow-auto max-h-full flex-auto pl-8 pr-5\">\n        <div\n          className=\"domManage_table\"\n          style={{\n            \"--ui_grid_template\": \"36px / 30px 30px 8fr 3fr 3fr 2fr 2fr 4fr\",\n          }}\n        >\n          <div className=\"thead\">\n            <div className=\"tr grid ui_grid_template items-center\">\n              <div />\n              <div />\n              {th.map(([item, code, callback]) => (\n                <div\n                  key={item}\n                  className={classNames(\"cell px-1\", \"th\", {\n                    on: item === sort.name,\n                  })}\n                  onClick={() => handleSort({ item, code, callback })}\n                >\n                  {item}\n                  <span className=\"sort\">{BuildSort(item, sort)}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"tbody\">\n            {data.map((item, index) => (\n              <MenuCreate\n                type=\"song\"\n                item={item}\n                schema={[\n                  [\"播放\", \"下一首播放\"],\n                  [\"收藏到歌单\", \"分享\", \"下载\"],\n                  [\"删除\"],\n                ]}\n                key={item.songId}\n              >\n                <div\n                  className={classNames(\n                    \"tr grid ui_grid_template items-center hover:bg-gray-100 focus:outline-none focus:bg-gray-200\",\n                    index % 2 === 0 && \"bg-gray-50\"\n                  )}\n                  tabIndex={2}\n                >\n                  <div className=\"cell px-1 index text-gray-400\">\n                    <Rank index={index} id={item.songId} />\n                  </div>\n                  <div className=\"cell px-1 download\">\n                    <Download />\n                  </div>\n                  <div\n                    className=\"cell px-1 name truncate\"\n                    title={\n                      item.songName + item.simpleSong?.tns?.length > 0\n                        ? `（${item.simpleSong?.tns}）`\n                        : \"\"\n                    }\n                  >\n                    {item.songName}\n                    {item.simpleSong?.tns?.length > 0 && (\n                      <span className=\"text-gray-500\">\n                        {`（${item.simpleSong.tns}）`}\n                      </span>\n                    )}\n                  </div>\n                  <Artists className=\"px-1\" artists={item.simpleSong.ar} />\n                  <Album\n                    className=\"px-1\"\n                    name={item.album}\n                    id={item.simpleSong?.al?.id}\n                  />\n                  <div className=\"cell px-1 truncate uppercase\">\n                    {/(?<=\\.)(\\w*)$/.exec(item.fileName)[0]}\n                  </div>\n                  <div className=\"cell px-1 truncate\">\n                    {(item.fileSize / 1024 / 1024).toFixed(1)}\n                    MB\n                  </div>\n                  <div className=\"cell px-1 truncate text-gray-400\">\n                    {dayjs(item.addTime).format(\"YYYY-MM-DD\")}\n                  </div>\n                </div>\n              </MenuCreate>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"domManage_dialog\"\n        style={{ display: visibility ? \"\" : \"none\" }}\n      >\n        <button\n          type=\"button\"\n          className=\"close\"\n          onClick={handleToggleVisibility}\n        >\n          ×\n        </button>\n        <div className=\"title\">选择本地音乐文件夹</div>\n        <div className=\"tips\">将自动扫描您勾选的目录，文件增删实时同步。</div>\n        <ul>\n          <li>\n            <span className=\"checkbox\">\n              <input type=\"text\" />\n              <i className=\"material-icons\">checkbox</i>\n            </span>\n            暂时没法做\n          </li>\n        </ul>\n        <div className=\"actions\">\n          <button\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full red\"\n          >\n            确认\n          </button>\n          <button\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full\"\n          >\n            添加文件\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default memo(Cloud);\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Cloud from \"./Cloud\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route index element={<Cloud />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["HeaderBarSearch","search","setSearch","placeholder","div","className","input","type","value","onChange","target","button","onClick","IconX","size","IconSearch","memo","useGetUserCloudQuery","base","endpoints","build","getUserCloud","query","body","url","method","defaultSort","a","b","sort","String","code","localeCompare","th","Number","parseFloat","Cloud","useState","visibility","setVisibility","name","callback","setSort","limit","useCloud","data","isLoading","count","maxSize","span","style","width","toFixed","href","GroupPlay","IconPlus","Search","map","item","key","classNames","on","handleSort","obj","IconSwitchVertical","color","stroke","IconCaretDown","fill","IconCaretUp","BuildSort","index","MenuCreate","schema","songId","tabIndex","Rank","id","Download","title","songName","simpleSong","tns","length","Artists","artists","ar","Album","album","al","exec","fileName","fileSize","dayjs","addTime","format","display","i","Routes","Route","element"],"sourceRoot":""}