{"version":3,"file":"js/Cloud.js?version=639fe596","mappings":"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","sources":["webpack://@wyy/web/./src/features/Cloud/Cloud.tsx","webpack://@wyy/web/./src/features/Cloud/Router.tsx"],"sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"@/components/HeaderBarSearch\";\n\nimport MenuCreate from \"@/components/MenuCreate/MenuCreate\";\nimport Rank from \"@/components/Table/Rank\";\nimport Heart from \"@/components/Table/Heart\";\nimport Download from \"@/components/Table/Download\";\nimport GroupPlay from \"@/components/GroupPlay\";\nimport Name from \"@/components/Table/Name\";\nimport Artists from \"@/components/Table/Artists\";\nimport Album from \"@/components/Table/Album\";\n\nimport {\n  IconCaretUp,\n  IconCaretDown,\n  IconSwitchVertical,\n  IconCloudDownload,\n  IconPlus,\n  IconPlayerPlay,\n} from \"@tabler/icons\";\nimport { useGetUserCloudQuery } from \"@/modules/services/user\";\n\nconst defaultSort = (a, b, sort) =>\n  String(a[sort.code]).localeCompare(String(b[sort.code]), \"zh-CN\") * sort.type;\n\nconst th = [\n  [\"音乐标题\", \"songName\", defaultSort],\n  [\"歌手\", \"artist\", defaultSort],\n  [\"专辑\", \"album\", defaultSort],\n  [\"格式\", \"\", defaultSort],\n  [\n    \"大小\",\n    \"fileSize\",\n    (a, b, sort) =>\n      (Number.parseFloat(a[sort.code]) - Number.parseFloat(b[sort.code])) *\n      sort.type,\n  ],\n  [\n    \"上传时间\",\n    \"addTime\",\n    (a, b, sort) => (a[sort.code] - b[sort.code]) * sort.type,\n  ],\n];\n\nconst BuildSort = (item, sort) => {\n  if (sort.name !== item)\n    return <IconSwitchVertical size={14} color=\"#f00\" stroke={1} />;\n  if (sort.type === -1)\n    return <IconCaretDown size={20} stroke={0} fill=\"#000\" />;\n  if (sort.type === 1) return <IconCaretUp size={12} stroke={0} fill=\"#000\" />;\n  if (sort.type === 0)\n    return <IconSwitchVertical size={14} color=\"#f00\" stroke={1} />;\n};\n\nconst Cloud = () => {\n  const [visibility, setVisibility] = useState(false);\n  const [search, setSearch] = useState(\"\");\n\n  const [sort, setSort] = useState({\n    name: \"上传时间\",\n    type: -1,\n    code: \"addTime\",\n    callback: (a, b, sort) => (a[sort.code] - b[sort.code]) * sort.type,\n  });\n\n  const handleToggleVisibility = () => {\n    setVisibility(!visibility);\n  };\n\n  const { data: useCloud = {}, isLoading } = useGetUserCloudQuery({\n    limit: 100,\n  });\n  const { data = [], count = 0, maxSize = \"\", size = \"\" } = useCloud;\n\n  const handleSort = (obj) => {\n    if (sort.name !== obj.name) {\n      return setSort({\n        ...obj,\n        type: 1,\n      });\n    }\n    switch (sort.type) {\n      case -1:\n        return setSort({\n          name: \"\",\n          code: \"\",\n          callback: (a, b) => 0,\n          type: 0,\n        });\n      case 1:\n        return setSort({\n          ...obj,\n          type: -1,\n        });\n      default:\n        return setSort({\n          ...obj,\n          type: 1,\n        });\n    }\n  };\n\n  // useEffect(() => {\n  //   console.log('qwe');\n  //   setData(\n  //     data.sort((a, b) => sort.callback(a, b, sort)),\n  //   );\n  // }, [data, sort]);\n  if (isLoading) return null;\n  return (\n    <div className=\"domManage overflow-auto h-full\">\n      <div className=\"domManage_header ui_header\">\n        <span className=\"domManage_header_title h1\">我的音乐云盘</span>\n      </div>\n      <div className=\"domCloud_info py-2.5 px-8\">\n        <span>云盘容量</span>\n        &nbsp;\n        <div className=\"w-28 h-2.5 inline-block bg-gray-200 rounded-full overflow-hidden\">\n          <div\n            className=\"h-full bg-blue-600\"\n            style={{ width: (size / maxSize) * 100 || 0 }}\n          />\n        </div>\n        &nbsp;\n        <span className=\"num\">\n          {(size / 1024 / 1024 / 1024).toFixed(2)}\n          G/\n          {maxSize / 1024 / 1024 / 1024}G\n        </span>\n        &nbsp;\n        <span className=\"ml-8\">歌曲永久保存，随时随地多端畅听</span>\n        &nbsp;\n        <a\n          href=\"https://music.163.com/#/store/product/detail?id=34001\"\n          className=\"ui_link\"\n        >\n          扩容\n        </a>\n      </div>\n      <div className=\"ui_headerBar border-b\">\n        <div className=\"left space-x-2\">\n          <GroupPlay />\n          <button\n            type=\"button\"\n            className=\"flex-center ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full\"\n          >\n            <IconPlus size={20} />\n            &nbsp; 上传音乐\n          </button>\n        </div>\n        <div className=\"right\">\n          <Search {...{ search, setSearch, placeholder: \"搜索我的音乐云盘\" }} />\n        </div>\n      </div>\n      <div className=\"overflow-auto max-h-full flex-auto pl-8 pr-5\">\n        <div\n          className=\"domManage_table\"\n          style={{\n            \"--ui_grid_template\": \"36px / 30px 30px 8fr 3fr 3fr 2fr 2fr 4fr\",\n          }}\n        >\n          <div className=\"thead\">\n            <div className=\"tr grid ui_grid_template items-center\">\n              <div />\n              <div />\n              {th.map(([item, code, callback]) => (\n                <div\n                  key={item}\n                  className={classNames(\"cell px-1\", \"th\", {\n                    on: item === sort.name,\n                  })}\n                  onClick={() => handleSort({ item, code, callback })}\n                >\n                  {item}\n                  <span className=\"sort\">{BuildSort(item, sort)}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"tbody\">\n            {data.map((item, index) => (\n              <MenuCreate\n                type=\"song\"\n                item={item}\n                schema={[\n                  [\"播放\", \"下一首播放\"],\n                  [\"收藏到歌单\", \"分享\", \"下载\"],\n                  [\"删除\"],\n                ]}\n                key={item.songId}\n              >\n                <div\n                  className={classNames(\n                    \"tr grid ui_grid_template items-center hover:bg-gray-100 focus:outline-none focus:bg-gray-200\",\n                    index % 2 === 0 && \"bg-gray-50\"\n                  )}\n                  tabIndex={2}\n                >\n                  <div className=\"cell px-1 index text-gray-400\">\n                    <Rank index={index} id={item.songId} />\n                  </div>\n                  <div className=\"cell px-1 download\">\n                    <Download />\n                  </div>\n                  <div\n                    className=\"cell px-1 name truncate\"\n                    title={\n                      item.songName + item.simpleSong?.tns?.length > 0\n                        ? `（${item.simpleSong?.tns}）`\n                        : \"\"\n                    }\n                  >\n                    {item.songName}\n                    {item.simpleSong?.tns?.length > 0 && (\n                      <span className=\"text-gray-500\">\n                        {`（${item.simpleSong.tns}）`}\n                      </span>\n                    )}\n                  </div>\n                  <Artists className=\"px-1\" artists={item.simpleSong.ar} />\n                  <Album\n                    className=\"px-1\"\n                    name={item.album}\n                    id={item.simpleSong?.al?.id}\n                  />\n                  <div className=\"cell px-1 truncate uppercase\">\n                    {/(?<=\\.)(\\w*)$/.exec(item.fileName)[0]}\n                  </div>\n                  <div className=\"cell px-1 truncate\">\n                    {(item.fileSize / 1024 / 1024).toFixed(1)}\n                    MB\n                  </div>\n                  <div className=\"cell px-1 truncate text-gray-400\">\n                    {dayjs(item.addTime).format(\"YYYY-MM-DD\")}\n                  </div>\n                </div>\n              </MenuCreate>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"domManage_dialog\"\n        style={{ display: visibility ? \"\" : \"none\" }}\n      >\n        <button\n          type=\"button\"\n          className=\"close\"\n          onClick={handleToggleVisibility}\n        >\n          ×\n        </button>\n        <div className=\"title\">选择本地音乐文件夹</div>\n        <div className=\"tips\">将自动扫描您勾选的目录，文件增删实时同步。</div>\n        <ul>\n          <li>\n            <span className=\"checkbox\">\n              <input type=\"text\" />\n              <i className=\"material-icons\">checkbox</i>\n            </span>\n            暂时没法做\n          </li>\n        </ul>\n        <div className=\"actions\">\n          <button\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full red\"\n          >\n            确认\n          </button>\n          <button\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full\"\n          >\n            添加文件\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default memo(Cloud);\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Cloud from \"./Cloud\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route index element={<Cloud />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["defaultSort","a","b","sort","String","code","localeCompare","type","th","Number","parseFloat","Cloud","useState","visibility","setVisibility","search","setSearch","name","callback","setSort","useGetUserCloudQuery","limit","useCloud","data","isLoading","count","maxSize","size","div","className","span","style","width","toFixed","href","GroupPlay","button","IconPlus","Search","placeholder","map","item","key","classNames","on","onClick","obj","handleSort","IconSwitchVertical","color","stroke","IconCaretDown","fill","IconCaretUp","BuildSort","index","MenuCreate","schema","songId","tabIndex","Rank","id","Download","title","songName","simpleSong","tns","length","Artists","artists","ar","Album","album","al","exec","fileName","fileSize","dayjs","addTime","format","display","ul","li","input","i","memo","Routes","Route","element"],"sourceRoot":""}