{"version":3,"file":"js/Cloud.js?version=8a8a2a71","mappings":"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","sources":["webpack://wyy/./src/modules/services/user/api.ts","webpack://wyy/./src/features/Cloud/Cloud.tsx","webpack://wyy/./src/features/Cloud/Router.tsx"],"sourcesContent":["import { Clouds } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getUserCloud: build.query<Clouds, { limit: number }>({\n      query: (body) => ({\n        url: `user/cloud`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetUserCloudQuery } = api;\n","import React, { memo, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"@/components/HeaderBarSearch\";\n\nimport MenuCreate from \"@/components/MenuCreate/MenuCreate\";\nimport Rank from \"@/components/Table/Rank\";\nimport Heart from \"@/components/Table/Heart\";\nimport Download from \"@/components/Table/Download\";\nimport GroupPlay from \"@/components/GroupPlay\";\nimport Name from \"@/components/Table/Name\";\nimport Artists from \"@/components/Table/Artists\";\nimport Album from \"@/components/Table/Album\";\n\nimport {\n  IconCaretUp,\n  IconCaretDown,\n  IconSwitchVertical,\n  IconCloudDownload,\n  IconPlus,\n  IconPlayerPlay,\n} from \"@tabler/icons\";\nimport { useGetUserCloudQuery } from \"@/modules/services/user\";\n\nconst defaultSort = (a, b, sort) =>\n  String(a[sort.code]).localeCompare(String(b[sort.code]), \"zh-CN\") * sort.type;\n\nconst th = [\n  [\"音乐标题\", \"songName\", defaultSort],\n  [\"歌手\", \"artist\", defaultSort],\n  [\"专辑\", \"album\", defaultSort],\n  [\"格式\", \"\", defaultSort],\n  [\n    \"大小\",\n    \"fileSize\",\n    (a, b, sort) =>\n      (Number.parseFloat(a[sort.code]) - Number.parseFloat(b[sort.code])) *\n      sort.type,\n  ],\n  [\n    \"上传时间\",\n    \"addTime\",\n    (a, b, sort) => (a[sort.code] - b[sort.code]) * sort.type,\n  ],\n];\n\nconst BuildSort = (item, sort) => {\n  if (sort.name !== item)\n    return <IconSwitchVertical size={14} color=\"#f00\" stroke={1} />;\n  if (sort.type === -1)\n    return <IconCaretDown size={20} stroke={0} fill=\"#000\" />;\n  if (sort.type === 1) return <IconCaretUp size={12} stroke={0} fill=\"#000\" />;\n  if (sort.type === 0)\n    return <IconSwitchVertical size={14} color=\"#f00\" stroke={1} />;\n};\n\nconst Cloud = () => {\n  const [visibility, setVisibility] = useState(false);\n  const [search, setSearch] = useState(\"\");\n\n  const [sort, setSort] = useState({\n    name: \"上传时间\",\n    type: -1,\n    code: \"addTime\",\n    callback: (a, b, sort) => (a[sort.code] - b[sort.code]) * sort.type,\n  });\n\n  const handleToggleVisibility = () => {\n    setVisibility(!visibility);\n  };\n\n  const { data: useCloud = {}, isLoading } = useGetUserCloudQuery({\n    limit: 100,\n  });\n  const { data = [], count = 0, maxSize = \"\", size = \"\" } = useCloud;\n\n  const handleSort = (obj) => {\n    if (sort.name !== obj.name) {\n      return setSort({\n        ...obj,\n        type: 1,\n      });\n    }\n    switch (sort.type) {\n      case -1:\n        return setSort({\n          name: \"\",\n          code: \"\",\n          callback: (a, b) => 0,\n          type: 0,\n        });\n      case 1:\n        return setSort({\n          ...obj,\n          type: -1,\n        });\n      default:\n        return setSort({\n          ...obj,\n          type: 1,\n        });\n    }\n  };\n\n  // useEffect(() => {\n  //   console.log('qwe');\n  //   setData(\n  //     data.sort((a, b) => sort.callback(a, b, sort)),\n  //   );\n  // }, [data, sort]);\n  if (isLoading) return null;\n  return (\n    <div className=\"domManage overflow-auto h-full\">\n      <div className=\"domManage_header ui_header\">\n        <span className=\"domManage_header_title h1\">我的音乐云盘</span>\n      </div>\n      <div className=\"domCloud_info py-2.5 px-8\">\n        <span>云盘容量</span>\n        &nbsp;\n        <div className=\"w-28 h-2.5 inline-block bg-gray-200 rounded-full overflow-hidden\">\n          <div\n            className=\"h-full bg-blue-600\"\n            style={{ width: (size / maxSize) * 100 || 0 }}\n          />\n        </div>\n        &nbsp;\n        <span className=\"num\">\n          {(size / 1024 / 1024 / 1024).toFixed(2)}\n          G/\n          {maxSize / 1024 / 1024 / 1024}G\n        </span>\n        &nbsp;\n        <span className=\"ml-8\">歌曲永久保存，随时随地多端畅听</span>\n        &nbsp;\n        <a\n          href=\"https://music.163.com/#/store/product/detail?id=34001\"\n          className=\"ui_link\"\n        >\n          扩容\n        </a>\n      </div>\n      <div className=\"ui_headerBar border-b\">\n        <div className=\"left space-x-2\">\n          <GroupPlay />\n          <button\n            type=\"button\"\n            className=\"flex-center ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full\"\n          >\n            <IconPlus size={20} />\n            &nbsp; 上传音乐\n          </button>\n        </div>\n        <div className=\"right\">\n          <Search {...{ search, setSearch, placeholder: \"搜索我的音乐云盘\" }} />\n        </div>\n      </div>\n      <div className=\"overflow-auto max-h-full flex-auto pl-8 pr-5\">\n        <div\n          className=\"domManage_table\"\n          style={{\n            \"--ui_grid_template\": \"36px / 30px 30px 8fr 3fr 3fr 2fr 2fr 4fr\",\n          }}\n        >\n          <div className=\"thead\">\n            <div className=\"tr grid ui_grid_template items-center\">\n              <div />\n              <div />\n              {th.map(([item, code, callback]) => (\n                <div\n                  key={item}\n                  className={classNames(\"cell px-1\", \"th\", {\n                    on: item === sort.name,\n                  })}\n                  onClick={() => handleSort({ item, code, callback })}\n                >\n                  {item}\n                  <span className=\"sort\">{BuildSort(item, sort)}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"tbody\">\n            {data.map((item, index) => (\n              <MenuCreate\n                type=\"song\"\n                item={item}\n                schema={[\n                  [\"播放\", \"下一首播放\"],\n                  [\"收藏到歌单\", \"分享\", \"下载\"],\n                  [\"删除\"],\n                ]}\n                key={item.songId}\n              >\n                <div\n                  className={classNames(\n                    \"tr grid ui_grid_template items-center hover:bg-gray-100 focus:outline-none focus:bg-gray-200\",\n                    index % 2 === 0 && \"bg-gray-50\"\n                  )}\n                  tabIndex={2}\n                >\n                  <div className=\"cell px-1 index text-gray-400\">\n                    <Rank index={index} id={item.songId} />\n                  </div>\n                  <div className=\"cell px-1 download\">\n                    <Download />\n                  </div>\n                  <div\n                    className=\"cell px-1 name truncate\"\n                    title={\n                      item.songName + item.simpleSong?.tns?.length > 0\n                        ? `（${item.simpleSong?.tns}）`\n                        : \"\"\n                    }\n                  >\n                    {item.songName}\n                    {item.simpleSong?.tns?.length > 0 && (\n                      <span className=\"text-gray-500\">\n                        {`（${item.simpleSong.tns}）`}\n                      </span>\n                    )}\n                  </div>\n                  <Artists className=\"px-1\" artists={item.simpleSong.ar} />\n                  <Album\n                    className=\"px-1\"\n                    name={item.album}\n                    id={item.simpleSong?.al?.id}\n                  />\n                  <div className=\"cell px-1 truncate uppercase\">\n                    {/(?<=\\.)(\\w*)$/.exec(item.fileName)[0]}\n                  </div>\n                  <div className=\"cell px-1 truncate\">\n                    {(item.fileSize / 1024 / 1024).toFixed(1)}\n                    MB\n                  </div>\n                  <div className=\"cell px-1 truncate text-gray-400\">\n                    {dayjs(item.addTime).format(\"YYYY-MM-DD\")}\n                  </div>\n                </div>\n              </MenuCreate>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"domManage_dialog\"\n        style={{ display: visibility ? \"\" : \"none\" }}\n      >\n        <button\n          type=\"button\"\n          className=\"close\"\n          onClick={handleToggleVisibility}\n        >\n          ×\n        </button>\n        <div className=\"title\">选择本地音乐文件夹</div>\n        <div className=\"tips\">将自动扫描您勾选的目录，文件增删实时同步。</div>\n        <ul>\n          <li>\n            <span className=\"checkbox\">\n              <input type=\"text\" />\n              <i className=\"material-icons\">checkbox</i>\n            </span>\n            暂时没法做\n          </li>\n        </ul>\n        <div className=\"actions\">\n          <button\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full red\"\n          >\n            确认\n          </button>\n          <button\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full\"\n          >\n            添加文件\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default memo(Cloud);\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Cloud from \"./Cloud\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route index element={<Cloud />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["useGetUserCloudQuery","base","endpoints","build","getUserCloud","query","body","url","method","defaultSort","a","b","sort","String","code","localeCompare","type","th","Number","parseFloat","Cloud","useState","visibility","setVisibility","search","setSearch","name","callback","setSort","limit","data","useCloud","isLoading","count","maxSize","size","className","style","width","toFixed","href","GroupPlay","IconPlus","placeholder","map","item","key","classNames","on","onClick","obj","handleSort","IconSwitchVertical","color","stroke","IconCaretDown","fill","IconCaretUp","BuildSort","index","MenuCreate","schema","songId","tabIndex","Rank","id","Download","title","songName","simpleSong","tns","length","Artists","artists","ar","Album","album","al","exec","fileName","fileSize","dayjs","addTime","format","display","memo","Routes","Route","element"],"sourceRoot":""}