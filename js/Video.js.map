{"version":3,"file":"js/Video.js?version=94b5a3bc","mappings":"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","sources":["webpack://wyy/./src/features/Video/Video.tsx","webpack://wyy/./src/features/Video/VideoList/components/Select/Select.tsx","webpack://wyy/./src/features/Video/VideoList/index.tsx","webpack://wyy/./src/features/Video/MVList/index.tsx","webpack://wyy/./src/features/Video/Router.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport { NavLink, Routes, Navigate, Route, Outlet } from \"react-router-dom\";\nimport VideoList from \"./VideoList\";\nimport MVList from \"./MVList\";\n\nconst navs = [\n  [\"视频\", \"/video/videolist\"],\n  [\"MV\", \"/video/mvlist\"],\n];\n\nexport default memo(() => (\n  <div className=\"domVideoList flex flex-col h-full\">\n    <div className=\"domVideoList_header ui_header text-base space-x-4\">\n      {navs.map(([name, path]) => (\n        <NavLink\n          key={name}\n          className={({ isActive }) =>\n            isActive ? \"text-xl ui_underline font-bold\" : \"\"\n          }\n          to={path}\n        >\n          {name}\n        </NavLink>\n      ))}\n    </div>\n    <Outlet />\n  </div>\n));\n","import classNames from \"classnames\";\nimport {\n  setVideoListId,\n  VideoListSelector,\n} from \"@/modules/reducers/videolist/slice\";\nimport React, { memo, FC } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"@/modules/hooks\";\nimport \"./style.scss\";\n\ninterface iProps {\n  id: number;\n}\n\nconst Select: FC<iProps> = ({ id }) => {\n  const dispatch = useAppDispatch();\n  const { groupList } = useAppSelector(VideoListSelector);\n  return (\n    <div className=\"group_select_box absolute top-100 p-5 bg-white overflow-auto shadow\">\n      <div className=\"border-b pb-2\">\n        <button\n          type=\"button\"\n          className={classNames(\n            \"group_select_check text-center rounded-full h-8 flex-center hover:ui_themeColor\",\n            id === 0 ? \"text-red-500 bg-red-50\" : \"\"\n          )}\n          onClick={() => dispatch(setVideoListId({ id: 0 }))}\n        >\n          全部视频\n        </button>\n      </div>\n      <div className=\"group_select_list grid grid-cols-6 gap-y-5 p-4\">\n        {groupList.map((item) => (\n          <button\n            type=\"button\"\n            className={classNames(\n              \"group_select_check text-center rounded-full h-8 flex-center hover:ui_themeColor\",\n              item.id === id ? \"text-red-500 bg-red-50\" : \"\"\n            )}\n            key={item.id}\n            onClick={() => dispatch(setVideoListId({ id: item.id }))}\n          >\n            {item.name}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Select);\n","import React, { memo, useEffect, useState, useRef, useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport DomGridVideo from \"@/components/GridVideo\";\nimport {\n  handleAddList,\n  handlePrevInit,\n  setVideoListId,\n  setVideoListInit,\n  Category,\n  VideoListSelector,\n} from \"@/modules/reducers/videolist/slice\";\nimport { useAppSelector, useAppDispatch } from \"@/modules/hooks\";\nimport DomLoading from \"@/components/Loading\";\nimport Select from \"./components/Select\";\n\nconst VideoList = () => {\n  const dispatch = useAppDispatch();\n  const { id, initStatus, groupList, categoryList, videoList } =\n    useAppSelector(VideoListSelector);\n  const [groupListVisibility, setGroupListVisibility] = useState(false);\n  const currentNav = useMemo(\n    () =>\n      groupList.find((group) => group.id === Number(id))?.name || \"全部视频\",\n    [id]\n  );\n\n  const domScroll = useRef<HTMLDivElement>(null);\n  const domObserver = useRef<HTMLDivElement>(null);\n\n  useInfinite(() => dispatch(handleAddList(id)), domScroll, domObserver);\n\n  useEffect(() => {\n    dispatch(handlePrevInit());\n    return () => {\n      dispatch(setVideoListInit());\n    };\n  }, []);\n\n  useEffect(() => {\n    dispatch(setVideoListInit());\n  }, [id]);\n\n  return (\n    <div\n      className=\"domVideoList_content px-8 overflow-auto flex-auto\"\n      ref={domScroll}\n    >\n      <div className=\"video_sort_filter_bar flex items-center justify-between\">\n        <div className=\"group_select_wrap relative z-10\">\n          <button\n            type=\"button\"\n            className=\"group_select_button border rounded-full hover:bg-gray-100 text-sm\"\n            onClick={() => setGroupListVisibility(!groupListVisibility)}\n          >\n            {currentNav}\n            &gt;\n          </button>\n          {groupListVisibility && <Select id={id} />}\n        </div>\n        <div className=\"recommend_nav divide-x flex\">\n          {categoryList.map((item: Category) => (\n            <div key={item.id}>\n              <button\n                type=\"button\"\n                className={classNames(\n                  \"recommend_nav_link rounded-full px-2 mx-1\",\n                  id === item.id\n                    ? \"bg-red-50 text-red-500\"\n                    : \"ui_text_black_hover\"\n                )}\n                onClick={() => dispatch(setVideoListId({ id: item.id }))}\n              >\n                {item.name}\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"my-4\">\n        <DomGridVideo list={videoList} />\n        <div ref={domObserver} className=\"flex-center\">\n          <DomLoading />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(VideoList);\n","import React, { useEffect, memo, useMemo } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"@/modules/hooks\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { IconChevronRight } from \"@tabler/icons\";\nimport DomGridVideo from \"@/components/GridVideo\";\nimport DomGridMVToplist from \"@/components/GridMVToplist\";\nimport DomLoading from \"@/components/Loading\";\nimport {\n  handleInit,\n  handleChangeFirstArea,\n  handleChangeTopArea,\n  MVListSelector,\n} from \"@/modules/reducers/mvlist/slice\";\n\nconst category = [\"内地\", \"港台\", \"欧美\", \"日本\", \"韩国\"];\n\nexport default memo(function MVList() {\n  const dispatch = useAppDispatch();\n  const { firstArea, topArea, first, hot, wy, top, timestamp } =\n    useAppSelector(MVListSelector);\n  const memoLoading = useMemo(\n    () => Date.now() - timestamp > 3600000,\n    [timestamp]\n  );\n\n  useEffect(() => {\n    if (memoLoading) {\n      dispatch(\n        handleInit({\n          firstArea,\n          topArea,\n        })\n      );\n    }\n  }, [memoLoading]);\n\n  if (memoLoading)\n    return (\n      <div className=\"w-full h-full flex-center\">\n        <DomLoading />\n      </div>\n    );\n  return (\n    <div className=\"domVideoList_content px-8 overflow-auto max-h-full flex-auto\">\n      <div className=\"domMVList_sublist\">\n        <div className=\"domMVList_header mb-5 flex justify-between items-center\">\n          <Link\n            to={`/mv-all?order=最新&area=${firstArea}`}\n            className=\"domMVList_subLink font-bold text-base flex items-center\"\n          >\n            最新MV\n            <IconChevronRight size={20} />\n          </Link>\n          <div className=\"recommend_nav flex divide-x space-x-1\">\n            {category.map((item) => (\n              <div className=\"item\" key={item}>\n                <button\n                  onClick={() => dispatch(handleChangeFirstArea(item))}\n                  type=\"button\"\n                  className={classNames(\n                    \"link rounded-full px-2.5\",\n                    firstArea === item\n                      ? \"text-red-500 bg-red-50\"\n                      : \"ui_text_black_hover\"\n                  )}\n                >\n                  {item}\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n        <DomGridVideo list={first} />\n      </div>\n      <div className=\"domMVList_sublist\">\n        <div className=\"domMVList_header mt-8 mb-5 flex justify-between items-center\">\n          <Link\n            to=\"/mv-all?order=最热\"\n            className=\"domMVList_subLink font-bold text-base flex items-center\"\n          >\n            热播MV\n            <IconChevronRight size={20} />\n          </Link>\n        </div>\n        <DomGridVideo list={hot} />\n      </div>\n      <div className=\"domMVList_sublist\">\n        <div className=\"domMVList_header mt-8 mb-5 flex justify-between items-center\">\n          <Link\n            to=\"/mv-all?type=网易出品&order=最新\"\n            className=\"domMVList_subLink font-bold text-base flex items-center\"\n          >\n            网易出品\n            <IconChevronRight size={20} />\n          </Link>\n        </div>\n        <DomGridVideo list={wy} />\n      </div>\n      <div className=\"domMVList_header mt-8 mb-5 flex justify-between items-center\">\n        <Link\n          to=\"/toplist-mv/\"\n          className=\"domMVList_subLink font-bold text-base flex items-center\"\n        >\n          MV排行榜\n          <IconChevronRight size={20} />\n        </Link>\n        <div className=\"recommend_nav flex divide-x space-x-1\">\n          {category.map((item) => (\n            <div className=\"item\" key={item}>\n              <button\n                onClick={() => dispatch(handleChangeTopArea(item))}\n                type=\"button\"\n                className={classNames(\n                  \"link rounded-full px-2.5\",\n                  topArea === item\n                    ? \"text-red-500 bg-red-50\"\n                    : \"ui_text_black_hover\"\n                )}\n              >\n                {item}\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n      <DomGridMVToplist\n        list={top}\n        schema={[\n          [\"评论\", \"播放\"],\n          [\"收藏\", \"分享\", \"下载MV\", \"复制链接\"],\n        ]}\n      />\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport Video from \"./Video\";\nimport VideoList from \"./VideoList\";\nimport MVList from \"./MVList\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route element={<Video />}>\n        <Route path=\"videolist\" element={<VideoList />} />\n        <Route path=\"mvlist\" element={<MVList />} />\n        <Route path=\"*\" element={<Navigate to=\"videolist\" replace={true} />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["navs","memo","div","className","map","path","name","NavLink","key","isActive","to","Outlet","Select","id","dispatch","useAppDispatch","groupList","useAppSelector","VideoListSelector","button","type","classNames","onClick","setVideoListId","item","VideoList","initStatus","categoryList","videoList","useState","groupListVisibility","setGroupListVisibility","currentNav","useMemo","find","group","Number","domScroll","useRef","domObserver","useInfinite","handleAddList","useEffect","handlePrevInit","setVideoListInit","ref","DomGridVideo","list","DomLoading","category","MVListSelector","firstArea","topArea","first","hot","wy","top","timestamp","memoLoading","Date","now","handleInit","Link","IconChevronRight","size","handleChangeFirstArea","handleChangeTopArea","DomGridMVToplist","schema","Routes","Route","element","Video","MVList","Navigate","replace"],"sourceRoot":""}