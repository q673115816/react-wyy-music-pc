{"version":3,"file":"js/Playlist.js?version=57524fa1","mappings":"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","sources":["webpack://wyy/./src/features/Playlist/components/Tags.tsx","webpack://wyy/./src/features/Playlist/components/Description.tsx","webpack://wyy/./src/features/Playlist/components/Header.tsx","webpack://wyy/./src/features/Playlist/components/Comments.tsx","webpack://wyy/./src/features/Playlist/components/Subscribers/Subscribers.tsx","webpack://wyy/./src/features/Playlist/Music.tsx","webpack://wyy/./src/features/Playlist/components/Playlist.tsx","webpack://wyy/./src/features/Playlist/DJ.tsx","webpack://wyy/./src/features/Playlist/Album.tsx","webpack://wyy/./src/features/Playlist/Router.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport React, { FC, memo } from \"react\";\n\ninterface iTags {\n  tags: [];\n}\n\nconst Tags: FC<iTags> = ({ tags = [] }) => {\n  if (tags.length === 0) return null;\n  return (\n    <div className=\"tags\">\n      <span>标签：</span>\n      {tags.map((tag, index) => (\n        <span key={tag}>\n          {index > 0 && \" / \"}\n          <Link to={`/home/playlist/${tag}`} className=\"tag ui_link\">\n            {tag}\n          </Link>\n        </span>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Tags);\n","import classNames from \"classnames\";\nimport { IconCaretDown, IconCaretUp } from \"@tabler/icons\";\nimport React, { FC, memo, useState } from \"react\";\n\ninterface iDescription {\n  description: string;\n}\n\nconst Description: FC<iDescription> = ({ description = \"\" }) => {\n  if (!description) return null;\n  const [open, setOpen] = useState(false);\n  const descriptionList = description.match(/^.*$/gm);\n  return (\n    <div className=\"relative pr-5\">\n      <div className=\"whitespace-pre-line leading-6\">\n        简介：\n        <span\n          className={classNames(\n            \"text-gray-500 select-text\",\n            !open && \"truncate inline-block max-w-xs align-bottom\"\n          )}\n        >\n          {open ? description : descriptionList[0]}\n        </span>\n        <button\n          type=\"button\"\n          onClick={() => setOpen(!open)}\n          className=\"absolute top-0 right-0 text-gray-500\"\n        >\n          {open ? (\n            <IconCaretUp size={16} className=\"fill-current\" />\n          ) : (\n            <IconCaretDown size={16} className=\"fill-current\" />\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Description);\n","import React, { useState, memo, FC } from \"react\";\nimport classNames from \"classnames\";\nimport DomGroupPlay from \"@/components/GroupPlay\";\nimport { transPlayCount, transSubscribeCount } from \"@/common/utils\";\nimport {\n  IconFolderPlus,\n  IconScreenShare,\n  IconCloudDownload,\n  IconCheckbox,\n  IconCaretUp,\n  IconCaretDown,\n} from \"@tabler/icons\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\n\nimport Tags from \"./Tags\";\nimport Description from \"./Description\";\n\ninterface iHeader {\n  data: {};\n  handleSub: () => void;\n  songs: [];\n}\n\nconst Header: FC<iHeader> = ({ data = {}, handleSub, songs }) => (\n  // console.log('playlist_music_header');\n  <div className=\"domPlaylistDetail_header p-8 flex\">\n    <div className=\"cover border rounded overflow-hidden flex-none w-92 h-92\">\n      <img\n        className=\"w-full h-full\"\n        src={`${data.playlist.coverImgUrl}?param=200y200`}\n        alt=\"\"\n      />\n    </div>\n    <div className=\"info flex-auto w-0 ml-5\">\n      <div className=\"name flex items-center\">\n        <span className=\"type text-red-500 border border-current px-1 py-0.5 rounded mr-2 leading-none\">\n          歌单\n        </span>\n        <span className=\"h1 select-text\">\n          {data.playlist.name || \"我喜欢的音乐\"}\n        </span>\n      </div>\n      <div className=\"creator flex items-center mt-2\">\n        <Link\n          to={`/user/${data.playlist.creator?.userId}`}\n          className=\"avator w-6 h-6 rounded-full overflow-hidden mr-2\"\n        >\n          <img\n            className=\"\"\n            src={`${data.playlist.creator?.avatarUrl}?param=50y50`}\n            alt=\"\"\n          />\n        </Link>\n\n        <Link\n          to={`/user/${data.playlist.creator?.userId}`}\n          className=\"nickname ui_link mr-2\"\n        >\n          {data.playlist.creator?.nickname}\n        </Link>\n\n        <span className=\"text-gray-500\">\n          {dayjs(data.playlist.createTime || Date.now()).format(\"YYYY-MM-DD\")}\n          创建\n        </span>\n      </div>\n      <div className=\"actions flex space-x-2 mt-2\">\n        <DomGroupPlay playlist={songs} />\n        <button\n          onClick={() => handleSub(data.playlist.subscribed)}\n          type=\"button\"\n          className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\"\n        >\n          {data.playlist.subscribed ? (\n            <IconCheckbox size={20} stroke={1} />\n          ) : (\n            <IconFolderPlus size={20} stroke={1} />\n          )}\n          &nbsp;\n          {data.playlist.subscribed ? \"已收藏\" : \"收藏\"}\n          {`(${transSubscribeCount(data.playlist.subscribedCount)})`}\n        </button>\n        <button\n          type=\"button\"\n          className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\"\n        >\n          <IconScreenShare size={20} stroke={1} />\n          &nbsp; 分享\n          {`(${transSubscribeCount(data.playlist.shareCount)})`}\n        </button>\n        <button\n          type=\"button\"\n          className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\"\n        >\n          <IconCloudDownload size={20} stroke={1} />\n          &nbsp; 下载全部\n        </button>\n      </div>\n      <div className=\"space-y-1 mt-2\">\n        <Tags tags={data.playlist.tags} />\n        <div>\n          <span className=\"mr-3\">\n            歌曲：\n            <span className=\"text-gray-500\">{data.playlist.trackCount}</span>\n          </span>\n          <span>\n            播放：\n            <span className=\"text-gray-500\">\n              {transPlayCount(data.playlist.playCount)}\n            </span>\n          </span>\n        </div>\n        <Description description={data.playlist.description} />\n      </div>\n    </div>\n  </div>\n);\n\nexport default memo(Header);\n","import React, { memo, useCallback, useEffect, useState } from \"react\";\nimport CommentsList from \"@/components/CommentsList\";\nimport Write from \"@/components/Write\";\nimport { apiCommentPlaylist } from \"@/api\";\nimport { useQuery } from \"react-query\";\nimport Loading from \"@/components/Loading\";\nimport { useParams } from \"react-router-dom\";\n\nexport default memo(function Comments() {\n  const { id } = useParams();\n  const { data, status } = useQuery(\"comments\", async () => {\n    return await apiCommentPlaylist({\n      id,\n    });\n  });\n\n  const handleChange = useCallback(() => {}, []);\n\n  return (\n    <div className=\"px-8\">\n      {/* TODO */}\n      <div className=\"pt-10 pb-10\">\n        <Write max={140} placeholder={\"\"} onChange={handleChange} />\n      </div>\n      {status === \"loading\" && <Loading />}\n      {status === \"success\" && (\n        <CommentsList comments={data} type={0} more={id} />\n      )}\n    </div>\n  );\n});\n","import React, { memo, useEffect, useState } from \"react\";\nimport { apiPlaylistSubscribers } from \"@/api\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./style.scss\";\nimport Gender from \"@/components/Gender\";\nimport Page from \"@/components/Page\";\nimport { useQuery } from \"react-query\";\nimport Loading from \"@/components/Loading\";\n\ninterface iSubscribers {\n  avatarUrl: string;\n  userId: number;\n  nickname: string;\n  gender: number;\n  signature: string;\n}\n\nconst limit = 60;\n\nexport default memo(function Subscribers() {\n  const { id } = useParams();\n  const [page, setPage] = useState(1);\n\n  const query = useQuery([\"subscribers\", page], async () => {\n    const { subscribers, total } = await apiPlaylistSubscribers({\n      id,\n      limit,\n      offset: (page - 1) * limit,\n    });\n    return {\n      subscribers,\n      total,\n    };\n  });\n  const { data, isLoading } = query;\n\n  if (isLoading)\n    return (\n      <div className={`flex-center pt-32`}>\n        <Loading />\n      </div>\n    );\n  return (\n    <div className=\"px-8\">\n      <div className=\"domPlaylistDetail_subscribers flex justify-between flex-wrap\">\n        {data?.subscribers.map((item: iSubscribers) => (\n          <div key={item.userId} className=\"item flex mt-6\">\n            <Link\n              to={`/user/${item.userId}`}\n              className=\"avatar border rounded-full overflow-hidden\"\n            >\n              <img src={`${item.avatarUrl}?param=100y100`} alt=\"\" />\n            </Link>\n            <div className=\"ml-2 flex-auto w-0 flex flex-col justify-center\">\n              <div className=\"text-sm flex items-center\">\n                <Link to={`/user/${item.userId}`}>{item.nickname}</Link>\n                &nbsp;\n                <Gender gender={item.gender} size={16} />\n              </div>\n              <div className=\"mt-2 truncate\">{item.signature}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <Page total={Math.ceil(data?.total / limit)} page={page} func={setPage} />\n    </div>\n  );\n});\n","import React, { useEffect, useState, memo, useCallback } from \"react\";\n\nimport { apiPlaylistDetail, apiPlaylistSubscribe, apiSongDetail } from \"@/api\";\n\nimport { setToast } from \"@/reducers/mask/slice\";\nimport classNames from \"classnames\";\nimport Loading from \"@/components/Loading\";\n\nimport produce from \"immer\";\nimport Header from \"./components/Header\";\nimport Playlist from \"./components/Playlist\";\nimport Comments from \"./components/Comments\";\nimport Subscribers from \"./components/Subscribers\";\nimport { useAppDispatch } from \"@/reducers/hooks\";\nimport { useParams } from \"react-router-dom\";\n\nconst navs = [\n  [\"歌曲列表\", \"playlist\"],\n  [\"评论\", \"comments\"],\n  [\"收藏者\", \"subscribers\"],\n];\n\nconst subpages = {\n  playlist: Playlist,\n  comments: Comments,\n  subscribers: Subscribers,\n};\n\nexport default memo(function Playlist() {\n  const { id } = useParams();\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(true);\n  const [songs, setSongs] = useState([]);\n  const [data, setData] = useState({});\n  // const [privileges, setPrivileges] = useState([]);\n  const [status, setStatus] = useState(\"playlist\");\n  const handleInit = async () => {\n    try {\n      const data = await apiPlaylistDetail({\n        id,\n      });\n      setData(\n        produce((draft) => {\n          for (const key in data) {\n            draft[key] = data[key];\n          }\n        })\n      );\n      if (data.playlist.trackCount > 0) {\n        const { songs } = await apiSongDetail({\n          ids: data.playlist.trackIds.map(({ id }) => id).join(\",\"),\n        });\n        setSongs(songs);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // TODO\n  const handleSub = useCallback(\n    async (isSub) => {\n      try {\n        const { code } = await apiPlaylistSubscribe({\n          t: isSub ? 2 : 1,\n          id,\n        });\n        if (code === 200) {\n          dispatch(setToast(isSub ? \"取消收藏成功！\" : \"收藏成功！\"));\n          setData(\n            produce((draft) => {\n              draft.playlist.subscribed = !isSub;\n            })\n          );\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    [id]\n  );\n\n  useEffect(() => {\n    handleInit();\n  }, [id]);\n\n  if (loading)\n    return (\n      <div className=\"w-full h-full flex-center\">\n        <Loading />\n      </div>\n    );\n  return (\n    <div className=\"overflow-auto h-full\">\n      <Header {...{ data, handleSub, songs }} />\n      <div className=\"mt-4\">\n        <div className=\"space-x-4 flex items-baseline px-8\">\n          {navs.map(([nav, code]) => (\n            <button\n              type=\"button\"\n              className={classNames(\n                \"text-sm\",\n                status === code && \"font-bold ui_underline\"\n              )}\n              key={nav}\n              onClick={() => setStatus(code)}\n            >\n              {nav}\n              {nav === \"评论\" && `(${data.playlist.commentCount})`}\n            </button>\n          ))}\n        </div>\n        <div>\n          {((SubPage, params) => (\n            <SubPage {...params} />\n          ))(subpages[status], { id, songs })}\n          {/* <DomMain id={id} status={status} songs={songs} /> */}\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { CSSProperties } from \"react\";\nimport classNames from \"classnames\";\nimport dayjs from \"dayjs\";\n\nimport DomMenuCreate from \"@/components/MenuCreate\";\nimport DomRank from \"@/components/Table/Rank\";\nimport DomHeart from \"@/components/Table/Heart\";\nimport DomDownload from \"@/components/Table/Download\";\nimport DomName from \"@/components/Table/Name\";\nimport DomArtists from \"@/components/Table/Artists\";\nimport DomAlbum from \"@/components/Table/Album\";\n\nexport default ({ songs = [] }) => {\n  // console.log('playlist_music_playlist');\n  if (songs.length === 0) {\n    return (\n      <div className=\"pt-16 text-center text-sm text-gray-400\">暂无音乐</div>\n    );\n  }\n  return (\n    <div\n      style={\n        {\n          \"--ui_grid_template\": \"36px / 30px 30px 30px 36% 4fr 6fr 2fr\",\n        } as CSSProperties\n      }\n      className=\"mt-4\"\n    >\n      <div className=\"grid ui_grid_template pl-8\">\n        <div />\n        <div />\n        <div />\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">\n          音乐标题\n        </div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">\n          歌手\n        </div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">\n          专辑\n        </div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">\n          时长\n        </div>\n      </div>\n      {songs.map((item, index) => (\n        <DomMenuCreate\n          schema={[\n            [\"评论\", \"播放\", \"下一首播放\"],\n            [\"收藏到歌单\", \"分享\", \"复制链接\", \"不感兴趣\", \"下载\"],\n          ]}\n          type=\"song\"\n          item={item}\n          key={item.id}\n        >\n          <div\n            tabIndex=\"2\"\n            className={classNames(\n              \"grid items-center focus:outline-none focus:bg-gray-200 hover:bg-gray-100 ui_grid_template pl-8\",\n              index % 2 === 0 && \"bg-gray-50\"\n            )}\n          >\n            <div className=\"px-1\">\n              <DomRank index={index} id={item.id} />\n            </div>\n            <div className=\"px-1\">\n              <DomHeart id={item.id} />\n            </div>\n            <div className=\"px-1\">\n              <DomDownload />\n            </div>\n            <DomName className=\"px-1\" item={item} />\n            <DomArtists className=\"px-1\" artists={item.ar} />\n            <DomAlbum className=\"px-1\" name={item.al.name} id={item.al.id} />\n            <div className=\"text-gray-500 px-1\">\n              {dayjs(item.dt).format(\"mm:ss\")}\n            </div>\n          </div>\n        </DomMenuCreate>\n      ))}\n    </div>\n  );\n};\n","import React, { memo, useEffect } from \"react\";\nimport { apiDjDetail } from \"@/api\";\n\nexport default memo(({ id }) => {\n  const handleInit = async () => {\n    try {\n      const {} = await apiDjDetail({\n        rid: id,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"domPlaylistDetail\">\n      <div className=\"domPlaylistDetail_header\">{}</div>\n      <div className=\"domPlaylistDetail_main\">TODO</div>\n    </div>\n  );\n});\n","import React, { useState } from \"react\";\n\nexport default () => {\n  const [data] = useState(0);\n  return <div>TOTO</div>;\n};\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Music from \"./Music\";\nimport DJ from \"./DJ\";\nimport Album from \"./Album\";\n\nconst Router = () => {\n  return (\n    <Routes>\n      <Route path=\"music/:id\" element={<Music />} />\n      <Route path=\"dj/:id\" element={<DJ />} />\n      <Route path=\"album/:id\" element={<Album />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["Tags","tags","length","className","map","tag","index","key","Link","to","memo","Description","description","useState","open","setOpen","descriptionList","match","classNames","type","onClick","IconCaretUp","size","IconCaretDown","Header","data","handleSub","songs","src","playlist","coverImgUrl","alt","name","creator","userId","avatarUrl","nickname","dayjs","createTime","Date","now","format","subscribed","IconCheckbox","stroke","IconFolderPlus","transSubscribeCount","subscribedCount","IconScreenShare","shareCount","IconCloudDownload","trackCount","transPlayCount","playCount","id","useParams","useQuery","apiCommentPlaylist","status","handleChange","useCallback","Write","max","placeholder","onChange","Loading","CommentsList","comments","more","page","setPage","query","apiPlaylistSubscribers","limit","offset","subscribers","total","isLoading","item","Gender","gender","signature","Page","Math","ceil","func","navs","subpages","style","schema","tabIndex","artists","ar","al","dt","Comments","Subscribers","SubPage","params","dispatch","useAppDispatch","loading","setLoading","setSongs","setData","setStatus","handleInit","apiPlaylistDetail","produce","draft","apiSongDetail","ids","trackIds","join","console","log","isSub","apiPlaylistSubscribe","t","code","setToast","useEffect","nav","commentCount","apiDjDetail","rid","Routes","Route","path","element","Music","DJ"],"sourceRoot":""}