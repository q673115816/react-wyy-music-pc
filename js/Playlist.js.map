{"version":3,"file":"js/Playlist.js?version=294a60c2","mappings":"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","sources":["webpack://wyy/./src/features/Playlist/components/Tags.tsx","webpack://wyy/./src/features/Playlist/components/Description.tsx","webpack://wyy/./src/features/Playlist/components/Header.tsx","webpack://wyy/./src/features/Playlist/components/Playlist.tsx","webpack://wyy/./src/features/Playlist/components/Comments.tsx","webpack://wyy/./src/features/Playlist/components/Subscribers.tsx","webpack://wyy/./src/features/Playlist/Music.tsx","webpack://wyy/./src/features/Playlist/DJ.tsx","webpack://wyy/./src/features/Playlist/Album.tsx","webpack://wyy/./src/features/Playlist/Router.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport React, { FC, memo } from \"react\";\n\ninterface iTags {\n  tags: [];\n}\n\nconst Tags: FC<iTags> = ({ tags = [] }) => {\n  if (tags.length === 0) return null;\n  return (\n    <div className=\"tags\">\n      <span>标签：</span>\n      {tags.map((tag, index) => (\n        <span key={tag}>\n          {index > 0 && \" / \"}\n          <Link to={`/home/playlist/${tag}`} className=\"tag ui_link\">\n            {tag}\n          </Link>\n        </span>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Tags);\n","import classNames from \"classnames\";\nimport { IconCaretDown, IconCaretUp } from \"@tabler/icons\";\nimport React, { FC, memo, useState } from \"react\";\n\ninterface iDescription {\n  description: string;\n}\n\nconst Description: FC<iDescription> = ({ description = \"\" }) => {\n  if (!description) return null;\n  const [open, setOpen] = useState(false);\n  const descriptionList = description.match(/^.*$/gm);\n  return (\n    <div className=\"relative pr-5\">\n      <div className=\"whitespace-pre-line leading-6\">\n        简介：\n        <span\n          className={classNames(\n            \"text-gray-500 select-text\",\n            !open && \"truncate inline-block max-w-xs align-bottom\"\n          )}\n        >\n          {open ? description : descriptionList?.[0]}\n        </span>\n        <button\n          type=\"button\"\n          onClick={() => setOpen(!open)}\n          className=\"absolute top-0 right-0 text-gray-500\"\n        >\n          {open ? (\n            <IconCaretUp size={16} className=\"fill-current\" />\n          ) : (\n            <IconCaretDown size={16} className=\"fill-current\" />\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Description);\n","import React, { useState, memo, FC } from \"react\";\nimport classNames from \"classnames\";\nimport DomGroupPlay from \"@/components/GroupPlay\";\nimport { transPlayCount, transSubscribeCount } from \"@/common/utils\";\nimport {\n  IconFolderPlus,\n  IconScreenShare,\n  IconCloudDownload,\n  IconCheckbox,\n  IconCaretUp,\n  IconCaretDown,\n} from \"@tabler/icons\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\n\nimport Tags from \"./Tags\";\nimport Description from \"./Description\";\n\ninterface iHeader {\n  data: {};\n  handleSub: (isSub: boolean) => void;\n  songs: [];\n}\n\nconst Header: FC<iHeader> = ({ data = {}, handleSub, songs }) => (\n  // console.log('playlist_music_header');\n  <div className=\"p-8 flex items-start\">\n    <div className=\"border rounded overflow-hidden flex-none w-92 h-92\">\n      <img\n        loading={`lazy`}\n        className=\"w-full h-full\"\n        src={`${data.playlist.coverImgUrl}?param=200y200`}\n        alt=\"\"\n      />\n    </div>\n    <div className=\"info flex-auto w-0 ml-5\">\n      <div className=\"name leading-tight\">\n        <span className=\"whitespace-nowrap text-red-500 border border-current p-0.5 rounded mr-2 align-bottom inline-block\">\n          歌单\n        </span>\n        <span className=\"h1 select-text\">\n          {data.playlist.name || \"我喜欢的音乐\"}\n        </span>\n      </div>\n      <div className=\"creator flex items-center mt-2\">\n        <Link\n          to={`/user/${data.playlist.creator?.userId}`}\n          className=\"w-6 h-6 rounded-full overflow-hidden mr-2\"\n        >\n          <img\n            className=\"\"\n            src={`${data.playlist.creator?.avatarUrl}?param=50y50`}\n            alt=\"\"\n          />\n        </Link>\n\n        <Link\n          to={`/user/${data.playlist.creator?.userId}`}\n          className=\"nickname ui_link mr-2\"\n        >\n          {data.playlist.creator?.nickname}\n        </Link>\n\n        <span className=\"text-gray-500\">\n          {dayjs(data.playlist.createTime || Date.now()).format(\"YYYY-MM-DD\")}\n          创建\n        </span>\n      </div>\n      <div className=\"actions flex space-x-2 mt-2\">\n        <DomGroupPlay playlist={songs} />\n        <button\n          onClick={() => handleSub(data.playlist.subscribed)}\n          type=\"button\"\n          className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\"\n        >\n          {data.playlist.subscribed ? (\n            <IconCheckbox size={20} stroke={1} />\n          ) : (\n            <IconFolderPlus size={20} stroke={1} />\n          )}\n          &nbsp;\n          {data.playlist.subscribed ? \"已收藏\" : \"收藏\"}\n          {`(${transSubscribeCount(data.playlist.subscribedCount)})`}\n        </button>\n        <button\n          type=\"button\"\n          className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\"\n        >\n          <IconScreenShare size={20} stroke={1} />\n          &nbsp; 分享\n          {`(${transSubscribeCount(data.playlist.shareCount)})`}\n        </button>\n        <button\n          type=\"button\"\n          className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\"\n        >\n          <IconCloudDownload size={20} stroke={1} />\n          &nbsp; 下载全部\n        </button>\n      </div>\n      <div className=\"space-y-1 mt-2\">\n        <Tags tags={data.playlist.tags} />\n        <div>\n          <span className=\"mr-3\">\n            歌曲：\n            <span className=\"text-gray-500\">{data.playlist.trackCount}</span>\n          </span>\n          <span>\n            播放：\n            <span className=\"text-gray-500\">\n              {transPlayCount(data.playlist.playCount)}\n            </span>\n          </span>\n        </div>\n        <Description description={data.playlist.description} />\n      </div>\n    </div>\n  </div>\n);\n\nexport default memo(Header);\n","import React, { CSSProperties, memo } from \"react\";\nimport classNames from \"classnames\";\nimport dayjs from \"dayjs\";\n\nimport MenuCreate from \"@/components/MenuCreate\";\nimport Rank from \"@/components/Table/Rank\";\nimport Heart from \"@/components/Table/Heart\";\nimport Download from \"@/components/Table/Download\";\nimport Name from \"@/components/Table/Name\";\nimport Artists from \"@/components/Table/Artists\";\nimport Album from \"@/components/Table/Album\";\n\nconst Playlist = ({ songs = [] }) => {\n  if (!songs.length) {\n    return (\n      <div className=\"pt-16 text-center text-sm text-gray-400\">暂无音乐</div>\n    );\n  }\n  return (\n    <div\n      style={\n        {\n          \"--ui_grid_template\": \"36px / 30px 30px 30px 36% 4fr 6fr 2fr\",\n        } as CSSProperties\n      }\n      className=\"mt-4\"\n    >\n      <div className=\"grid ui_grid_template pl-8\">\n        <div />\n        <div />\n        <div />\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">\n          音乐标题\n        </div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">\n          歌手\n        </div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">\n          专辑\n        </div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">\n          时长\n        </div>\n      </div>\n      {songs.map((item, index) => (\n        <MenuCreate\n          schema={[\n            [\"评论\", \"播放\", \"下一首播放\"],\n            [\"收藏到歌单\", \"分享\", \"复制链接\", \"不感兴趣\", \"下载\"],\n          ]}\n          type=\"song\"\n          item={item}\n          key={item.id}\n        >\n          <div\n            tabIndex={2}\n            className={classNames(\n              \"grid items-center focus:outline-none focus:bg-gray-200 hover:bg-gray-100 ui_grid_template pl-8\",\n              index % 2 === 0 && \"bg-gray-50\"\n            )}\n          >\n            <div className=\"px-1\">\n              <Rank index={index} id={item.id} />\n            </div>\n            <div className=\"px-1\">\n              <Heart id={item.id} />\n            </div>\n            <div className=\"px-1\">\n              <Download />\n            </div>\n            <Name className=\"px-1\" item={item} />\n            <Artists className=\"px-1\" artists={item.ar} />\n            <Album className=\"px-1\" name={item.al.name} id={item.al.id} />\n            <div className=\"text-gray-500 px-1\">\n              {dayjs(item.dt).format(\"mm:ss\")}\n            </div>\n          </div>\n        </MenuCreate>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Playlist);\n","import React, { memo, useCallback, useEffect, useState } from \"react\";\nimport CommentsList from \"@/components/Comments/CommentsList\";\nimport Write from \"@/components/Write\";\nimport { apiCommentPlaylist } from \"@/api\";\nimport Loading from \"@/components/Loading\";\nimport { useParams } from \"react-router-dom\";\n\nexport default memo(function Comments() {\n  const { id } = useParams();\n  if (!id) return null;\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  const handleInit = async () => {\n    const data = await apiCommentPlaylist({\n      id,\n    });\n    setData(data);\n    setLoading(false);\n  };\n\n  const handleChange = useCallback(() => {}, []);\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"px-8\">\n      {/* TODO */}\n      <div className=\"pt-10 pb-10\">\n        <Write max={140} placeholder={\"\"} onChange={handleChange} />\n      </div>\n      {loading ? (\n        <Loading />\n      ) : (\n        <CommentsList comments={data} type={0} more={id} />\n      )}\n    </div>\n  );\n});\n","import React, { memo, useEffect, useState } from \"react\";\nimport { apiPlaylistSubscribers } from \"@/api\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Gender from \"@/components/Gender\";\nimport Page from \"@/components/Page\";\nimport Loading from \"@/components/Loading\";\n\ninterface iSubscribers {\n  avatarUrl: string;\n  userId: number;\n  nickname: string;\n  gender: number;\n  signature: string;\n}\n\nconst limit = 60;\n\nexport default memo(function Subscribers() {\n  const { id } = useParams();\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const handleInit = async () => {\n    const { subscribers, total } = await apiPlaylistSubscribers({\n      id,\n      limit,\n      offset: (page - 1) * limit,\n    });\n    setData({\n      subscribers,\n      total,\n    });\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    handleInit();\n  }, []);\n\n  if (loading)\n    return (\n      <div className={`flex-center pt-32`}>\n        <Loading />\n      </div>\n    );\n  return (\n    <div className=\"px-8\">\n      <div className=\"domPlaylistDetail_subscribers flex justify-between flex-wrap\">\n        {data?.subscribers.map((item: iSubscribers) => (\n          <div key={item.userId} className=\"item flex mt-6 w-80 \">\n            <Link\n              to={`/user/${item.userId}`}\n              className=\"avatar w-24 h-24 border rounded-full overflow-hidden\"\n            >\n              <img\n                loading={`lazy`}\n                src={`${item.avatarUrl}?param=100y100`}\n                alt=\"\"\n              />\n            </Link>\n            <div className=\"ml-2 flex-auto w-0 flex flex-col justify-center\">\n              <div className=\"text-sm flex items-center\">\n                <Link to={`/user/${item.userId}`}>{item.nickname}</Link>\n                &nbsp;\n                <Gender gender={item.gender} size={16} />\n              </div>\n              <div className=\"mt-2 truncate\">{item.signature}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <Page total={Math.ceil(data?.total / limit)} page={page} func={setPage} />\n    </div>\n  );\n});\n","import React, {\n  useEffect,\n  useState,\n  memo,\n  useCallback,\n  useMemo,\n  ReactNode,\n  createElement,\n} from \"react\";\n\nimport { apiPlaylistDetail, apiPlaylistSubscribe, apiSongDetail } from \"@/api\";\n\nimport { setToast } from \"@/modules/reducers/mask/slice\";\nimport classNames from \"classnames\";\nimport Loading from \"@/components/Loading\";\n\nimport Header from \"./components/Header\";\nimport Playlist from \"./components/Playlist\";\nimport Comments from \"./components/Comments\";\nimport Subscribers from \"./components/Subscribers\";\nimport { useAppDispatch } from \"@/modules/hooks\";\nimport { useParams } from \"react-router-dom\";\nimport { useImmer } from \"use-immer\";\n\ntype Paths = \"Playlist\" | \"Comments\" | \"Subscribers\";\n\nconst navs: [string, Paths][] = [\n  [\"歌曲列表\", \"Playlist\"],\n  [\"评论\", \"Comments\"],\n  [\"收藏者\", \"Subscribers\"],\n];\n\nconst Contents: { [key in Paths]: ReactNode } = {\n  Playlist,\n  Comments,\n  Subscribers,\n};\n\nexport default memo(function Playlist() {\n  const { id } = useParams();\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(true);\n  const [songs, setSongs] = useState([]);\n  const [data, setData] = useImmer({});\n  // const [privileges, setPrivileges] = useState([]);\n  const [status, setStatus] = useState<Paths>(navs[0][1]);\n  const handleInit = async () => {\n    try {\n      const data = await apiPlaylistDetail({\n        id,\n      });\n      setData(data);\n      if (data.playlist.trackCount > 0) {\n        const { songs } = await apiSongDetail({\n          ids: data.playlist.trackIds.map(({ id }) => id).join(\",\"),\n        });\n        setSongs(songs);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // TODO\n  const handleSub = useCallback(\n    async (isSub) => {\n      try {\n        const { code } = await apiPlaylistSubscribe({\n          t: isSub ? 2 : 1,\n          id,\n        });\n        if (code === 200) {\n          dispatch(setToast(isSub ? \"取消收藏成功！\" : \"收藏成功！\"));\n          setData((draft) => {\n            draft.playlist.subscribed = !isSub;\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    [id]\n  );\n\n  useEffect(() => {\n    handleInit();\n  }, [id]);\n\n  if (loading)\n    return (\n      <div className=\"w-full h-full flex-center\">\n        <Loading />\n      </div>\n    );\n  return (\n    <div className=\"overflow-auto h-full\">\n      <Header data={data} handleSub={handleSub} songs={songs} />\n      <div className=\"mt-4\">\n        <div className=\"space-x-4 flex items-baseline px-8\">\n          {navs.map(([nav, code]) => (\n            <button\n              type=\"button\"\n              className={classNames(\n                \"text-sm\",\n                status === code && \"font-bold ui_underline\"\n              )}\n              key={nav}\n              onClick={() => setStatus(code)}\n            >\n              {nav}\n              {nav === \"评论\" && `(${data.playlist.commentCount})`}\n            </button>\n          ))}\n        </div>\n        <div>{createElement(Contents[status], { songs })}</div>\n      </div>\n    </div>\n  );\n});\n","import React, { memo, useEffect } from \"react\";\nimport { apiDjDetail } from \"@/api\";\n\nexport default memo(({ id }) => {\n  const handleInit = async () => {\n    try {\n      const {} = await apiDjDetail({\n        rid: id,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"domPlaylistDetail\">\n      <div className=\"domPlaylistDetail_header\">{}</div>\n      <div className=\"domPlaylistDetail_main\">TODO</div>\n    </div>\n  );\n});\n","import React, { useState } from \"react\";\n\nexport default () => {\n  const [data] = useState(0);\n  return <div>TOTO</div>;\n};\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Music from \"./Music\";\nimport DJ from \"./DJ\";\nimport Album from \"./Album\";\n\nconst Router = () => {\n  return (\n    <Routes>\n      <Route path=\"music/:id\" element={<Music />} />\n      <Route path=\"dj/:id\" element={<DJ />} />\n      <Route path=\"album/:id\" element={<Album />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["Tags","tags","length","className","map","tag","index","key","Link","to","memo","Description","description","useState","open","setOpen","descriptionList","match","classNames","type","onClick","IconCaretUp","size","IconCaretDown","Header","data","handleSub","songs","loading","src","playlist","coverImgUrl","alt","name","creator","userId","avatarUrl","nickname","dayjs","createTime","Date","now","format","subscribed","IconCheckbox","stroke","IconFolderPlus","transSubscribeCount","subscribedCount","IconScreenShare","shareCount","IconCloudDownload","trackCount","transPlayCount","playCount","Playlist","style","item","MenuCreate","schema","id","tabIndex","Rank","Heart","Download","Name","Artists","artists","ar","Album","al","dt","useParams","setLoading","setData","handleInit","apiCommentPlaylist","handleChange","useCallback","useEffect","Write","max","placeholder","onChange","Loading","CommentsList","comments","more","page","setPage","apiPlaylistSubscribers","limit","offset","subscribers","total","Gender","gender","signature","Page","Math","ceil","func","navs","Contents","Comments","Subscribers","dispatch","useAppDispatch","setSongs","useImmer","status","setStatus","apiPlaylistDetail","apiSongDetail","ids","trackIds","join","console","log","isSub","apiPlaylistSubscribe","t","code","setToast","draft","nav","commentCount","createElement","apiDjDetail","rid","Routes","Route","path","element","Music","DJ"],"sourceRoot":""}