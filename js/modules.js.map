{"version":3,"file":"js/modules.js?version=f2617f62","mappings":"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","sources":["webpack://@wyy/web/./src/modules/hooks.ts","webpack://@wyy/web/./src/modules/reducers/account/slice.ts","webpack://@wyy/web/./src/modules/reducers/audio/slice.ts","webpack://@wyy/web/./src/modules/reducers/common/slice.ts","webpack://@wyy/web/./src/modules/reducers/exclusive/slice.ts","webpack://@wyy/web/./src/modules/reducers/inset/slice.ts","webpack://@wyy/web/./src/modules/reducers/letter/slice.ts","webpack://@wyy/web/./src/modules/reducers/local/slice.ts","webpack://@wyy/web/./src/modules/reducers/lrc/format.ts","webpack://@wyy/web/./src/modules/reducers/lrc/slice.ts","webpack://@wyy/web/./src/modules/reducers/mask/slice.ts","webpack://@wyy/web/./src/modules/reducers/mvlist/slice.ts","webpack://@wyy/web/./src/modules/reducers/search/slice.ts","webpack://@wyy/web/./src/modules/reducers/settings/slice.ts","webpack://@wyy/web/./src/modules/reducers/videolist/slice.ts","webpack://@wyy/web/./src/modules/reducers/volume/slice.ts","webpack://@wyy/web/./src/modules/services/account/api.ts","webpack://@wyy/web/./src/modules/services/artist/api.ts","webpack://@wyy/web/./src/modules/services/base.ts","webpack://@wyy/web/./src/modules/services/comment/api.ts","webpack://@wyy/web/./src/modules/services/daily/api.ts","webpack://@wyy/web/./src/modules/services/discover/toplist/api.ts","webpack://@wyy/web/./src/modules/services/discover/newest.ts","webpack://@wyy/web/./src/modules/services/discover/api.ts","webpack://@wyy/web/./src/modules/services/dj/api.ts","webpack://@wyy/web/./src/modules/services/friend/api.ts","webpack://@wyy/web/./src/modules/services/lrc/api.ts","webpack://@wyy/web/./src/modules/services/player/api.ts","webpack://@wyy/web/./src/modules/services/playlist/api.ts","webpack://@wyy/web/./src/modules/services/search/api.ts","webpack://@wyy/web/./src/modules/services/song/api.ts","webpack://@wyy/web/./src/modules/services/sublist/api.ts","webpack://@wyy/web/./src/modules/services/user/api.ts","webpack://@wyy/web/./src/modules/rootReducer.ts","webpack://@wyy/web/./src/modules/store.ts","webpack://@wyy/web/./src/modules/utils.ts"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport interface AccountState {\n  profile: {};\n  playlist: playlistState[];\n  bindings: [];\n  likelist: number[];\n  artistSublist: [];\n  topicSublist: [];\n  albumSublist: [];\n  mvSublist: [];\n}\n\nexport interface playlistState {\n  id: number;\n  privacy: number;\n  name: string;\n  subscribed: boolean;\n}\n\nconst initialState: AccountState = {\n  profile: {},\n  playlist: [],\n  bindings: [],\n  likelist: [],\n  artistSublist: [],\n  topicSublist: [],\n  albumSublist: [],\n  mvSublist: [],\n};\n\nconst slice = createSlice({\n  name: \"account\",\n  initialState,\n  reducers: {\n    setLoginInfo(state, { payload }) {\n      // state.profile = action.payload.profile;\n      // state.playlist = action.payload.playlist;\n      // state.likelist = action.payload.likelist;\n      // state.artistSublist = action.payload.artistSublist;\n      // state.topicSublist = action.payload.topicSublist;\n      // state.albumSublist = action.payload.albumSublist;\n      // state.mvSublist = action.payload.mvSublist;\n      Object.assign(state, payload);\n    },\n    setLoginInfoUpdate(state, action) {\n      state.profile = action.payload.profile;\n    },\n    setLikelist(state, action) {\n      state.likelist = action.payload.likelist;\n    },\n    setPlaylist(state, action) {\n      state.playlist = action.payload.playlist;\n    },\n    setLikelistAdd(state, action) {\n      state.likelist.push(action.payload.id);\n    },\n    setLikelistDel(state, action) {\n      const n = state.likelist.length;\n      if (!n) return;\n      // state.likelist.delete(action.payload.id);\n      const index = state.likelist.findIndex(\n        (item) => item === action.payload.id\n      );\n      state.likelist[index] = state.likelist[n - 1];\n      state.likelist.length -= 1;\n    },\n    setArtistSublist(state, action) {\n      state.artistSublist = action.payload.artistSublist;\n    },\n    setArtistSublistAdd(state, action) {},\n    setTopicSublist(state, action) {\n      state.topicSublist = action.payload.topicSublist;\n    },\n    setAlbumSublist(state, action) {\n      state.albumSublist = action.payload.albumSublist;\n    },\n    setMVSublist(state, action) {\n      state.mvSublist = action.payload.mvSublist;\n    },\n  },\n});\n\nexport default slice.reducer;\n\nexport const {\n  setAlbumSublist,\n  setArtistSublist,\n  setArtistSublistAdd,\n  setLikelist,\n  setLikelistAdd,\n  setLikelistDel,\n  setLoginInfo,\n  setLoginInfoUpdate,\n  setMVSublist,\n  setPlaylist,\n  setTopicSublist,\n} = slice.actions;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { audioPattern } from \"@/common/config\";\n\ninterface State {\n  errorCount: number;\n  running: boolean;\n  dropping: boolean;\n  currentSong: {};\n  playlist: [];\n  history: [];\n  currentTime: number;\n  jumpTime: null;\n  buffered: [];\n  lyric: {};\n  lrcList: [];\n  pattern: number;\n}\n\nconst initialState: State = {\n  errorCount: 0,\n  running: false,\n  dropping: false,\n  currentSong: {},\n  playlist: [],\n  history: [],\n  currentTime: 0,\n  jumpTime: null,\n  buffered: [],\n  lyric: {},\n  lrcList: [],\n  pattern: 0,\n};\n\nconst FnChange = (state: State) => {\n  state.jumpTime = null;\n  state.currentTime = 0;\n  state.buffered = [];\n  state.running = true;\n};\n\nconst FnAddNext = (state: State, currentSong: {}) => {\n  if (state.playlist.some((song) => song.id === currentSong.id)) return;\n  // 未在歌单中的新歌\n  const beforeIndex = state.playlist.findIndex(\n    (item) => item.id === state.currentSong.id\n  );\n  state.playlist.splice(beforeIndex + 1, 0, currentSong);\n};\n\nconst FnAddHistory = (state: State, currentSong: {}) => {\n  if (state.history.some((song) => song.id === currentSong.id)) {\n    const historyIndex = state.history.findIndex(\n      (song) => song.id === currentSong.id\n    );\n    state.history.splice(historyIndex, 1);\n    // state.history = state.history.filter((history) => history.id !== currentSong.id)\n  }\n  state.history.unshift({ ...currentSong, lastTime: Date.now() });\n};\n\nfunction FnImmediate(state: State, currentSong: {}) {\n  FnChange(state);\n  FnAddNext(state, currentSong);\n  FnAddHistory(state, currentSong);\n  // state.history = [currentSong, ...state.history.filter((history) => history.id !== currentSong.id)];\n  state.currentSong = currentSong;\n  // state.currentTime = 0;\n}\n\nconst slice = createSlice({\n  name: \"audio\",\n  initialState,\n  reducers: {\n    setAudioSrc(state, { payload }) {\n      state.src = payload.src;\n    },\n    setAudioImmediate(state, { payload }) {\n      const { currentSong } = payload;\n      FnImmediate(state, currentSong);\n    },\n    setAudioImmediateNext(state, { payload }) {\n      const { currentSong } = payload;\n      FnAddNext(state, currentSong);\n    },\n    setAudioPlaylist(state, action) {\n      FnChange(state);\n      const { playlist } = action.payload;\n      const currentSong = playlist[0];\n      state.playlist = playlist;\n      state.currentSong = currentSong;\n      FnAddHistory(state, currentSong);\n      // state.history = [currentSong, ...state.history.filter((history) => history.id !== currentSong.id)];\n    },\n    setAudioPlaylistAdd(state, action) {},\n    setAudioPrev(state) {\n      if (state.playlist.length === 0) return;\n      FnChange(state);\n      const len = state.playlist.length;\n      const currentIndex = state.playlist.findIndex(\n        (item) => item.id === state.currentSong.id\n      );\n      const currentSong = state.playlist[(currentIndex + len - 1) % len];\n      state.currentSong = currentSong;\n      FnAddHistory(state, currentSong);\n    },\n    setAudioNext(state) {\n      if (state.playlist.length === 0) return;\n      FnChange(state);\n      const len = state.playlist.length;\n      // state.currentSong = currentSong;\n      const currentIndex = state.playlist.findIndex(\n        (item) => item.id === state.currentSong.id\n      );\n      const currentSong = state.playlist[(currentIndex + 1) % len];\n      state.currentSong = currentSong;\n      FnAddHistory(state, currentSong);\n      // if (currentIndex === state.playlist.length - 1) {\n      //   state.running = false;\n      //   state.currentSong = {};\n      // } else {\n      //   state.currentSong = state.playlist[currentIndex + 1];\n      // }\n      // switch (state.pattern) {\n      //   case '0':\n      //     if (currentIndex === state.playlist.length - 1) {\n      //       state.running = false;\n      //       state.currentSong = {};\n      //     } else {\n      //       state.currentSong = state.playlist[currentIndex + 1];\n      //     }\n      //     break;\n      //   default:\n      //     break;\n      // }\n    },\n    setAudioCurrent(state, action) {},\n    setAudioRunning(state, { payload }) {\n      if (state?.currentSong?.id) {\n        state.running = payload.running;\n      } else if (state.playlist.length > 0) {\n        const currentSong = state.playlist[0];\n        FnImmediate(state, currentSong);\n      } else {\n        state.running = false;\n      }\n    },\n    setAudioRunningPlay(state) {\n      state.running = true;\n    },\n    setAudioRunningPause(state) {\n      state.running = false;\n    },\n    setAudioRunningToggle(state) {\n      state.running = !state.running;\n    },\n    setAudioDropping(state, action) {\n      state.dropping = action.payload.dropping;\n    },\n    setAudioCurrentTime(state, { payload }) {\n      state.currentTime = payload.currentTime;\n    },\n    setJumpToAudioCurrentTime(state, action) {\n      state.jumpTime = action.payload;\n    },\n    setAudioBuffered(state, action) {\n      state.buffered = action.payload;\n    },\n    setAudioPlaylistClear(state) {\n      state.running = false;\n      state.currentTime = 0;\n      state.currentSong = {};\n      state.playlist = [];\n    },\n    setAudioHistoryClear(state) {\n      state.history = [];\n    },\n    setAudioPattern(state) {\n      const pattern = (state.pattern + 1) % audioPattern.length;\n      state.pattern = pattern;\n    },\n    setRunErrorAdd(state) {\n      state.errorCount += 1;\n    },\n    setRunErrorDesc(state) {\n      state.errorCount -= 1;\n    },\n  },\n});\n\nexport const audioSelector = ({ audio }) => audio;\n\nexport default slice.reducer;\n\nexport const {\n  setAudioSrc,\n  setAudioBuffered,\n  setAudioCurrent,\n  setAudioCurrentTime,\n  setAudioDropping,\n  setAudioHistoryClear,\n  setAudioImmediate,\n  setAudioImmediateNext,\n  setAudioNext,\n  setAudioPattern,\n  setAudioPlaylist,\n  setAudioPlaylistAdd,\n  setAudioPlaylistClear,\n  setAudioPrev,\n  setAudioRunning,\n  setAudioRunningPause,\n  setAudioRunningPlay,\n  setAudioRunningToggle,\n  setJumpToAudioCurrentTime,\n  setRunErrorAdd,\n  setRunErrorDesc,\n} = slice.actions;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\ninterface CommonState {\n  [key: string]: any;\n}\n\nconst initialState: CommonState = {\n  history: [],\n  newMsgCount: 0,\n  loginVisibility: false,\n  isLogin: false,\n  msgs: [],\n  comments: [],\n  forwards: [],\n  notices: [],\n  baseUrl: \"https://music.163.com\",\n  gitUrl: \"https://neteasecloudmusic.fun\",\n};\n\nconst slice = createSlice({\n  name: \"common\",\n  initialState,\n  reducers: {\n    setIsLogin(state) {\n      state.isLogin = true;\n    },\n    setNotLogin(state) {\n      state.isLogin = false;\n    },\n    setMsgPrivate(state, action) {\n      Object.assign(state, action.payload);\n    },\n    setLoginVisibilty(state) {\n      state.loginVisibility = !state.loginVisibility;\n    },\n  },\n});\n\nexport const commonSelector = ({ common }) => common;\n\nexport default slice.reducer;\n\nexport const { setIsLogin, setLoginVisibilty, setMsgPrivate, setNotLogin } =\n  slice.actions;\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { apiPersonalizedPrivatecontentList } from \"@/api\";\n\nexport interface ResultProps {\n  picUrl: string;\n  videoId: number;\n  id: number;\n  name: string;\n}\nexport interface ExclusiveState {\n  result: ResultProps[];\n  scrollTop: number;\n}\n\nconst initialState: ExclusiveState = {\n  result: [],\n  scrollTop: 0,\n};\n\nexport const handleGetData = createAsyncThunk(\n  \"exclusive/init\",\n  async (params: any) => await apiPersonalizedPrivatecontentList(params)\n  // .catch(() => initialState);\n);\n\nconst slice = createSlice({\n  name: \"exclusive\",\n  initialState,\n  reducers: {\n    setExclusiveResultAdd(\n      state,\n      { payload }: PayloadAction<{ result: ResultProps[] }>\n    ) {\n      state.result.push(...payload.result);\n    },\n    setExclusiveResultEmpty(state) {\n      state.result.length = 0;\n    },\n    setExclusiveScrollTop(state, action: PayloadAction<{ scrollTop: number }>) {\n      state.scrollTop = action.payload?.scrollTop;\n    },\n  },\n  extraReducers: {\n    [handleGetData.fulfilled.type]: (\n      state,\n      { payload }: PayloadAction<{ result: [] }>\n    ) => {\n      const { result } = payload;\n      state.result.push(...result);\n    },\n  },\n});\n\nexport default slice.reducer;\n\nexport const {\n  setExclusiveResultAdd,\n  setExclusiveResultEmpty,\n  setExclusiveScrollTop,\n} = slice.actions;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\ninterface InsetState {\n  POSITION: boolean;\n  globalVisibility: boolean;\n  globalDragger: boolean;\n  globalResizer: boolean;\n  globalStartX: number;\n  globalStartY: number;\n  globalBeforeX: number;\n  globalBeforeY: number;\n  globalX: number;\n  globalY: number;\n\n  GlobalRectLock: boolean;\n  globalStartRectX: number;\n  globalStartRectY: number;\n  globalBeforeWidth: number;\n  globalBeforeHeight: number;\n  globalWidth: number;\n  globalHeight: number;\n\n  globalStartLrcX: number;\n  globalStartLrcY: number;\n  globalBeforeLrcX: number;\n  globalBeforeLrcY: number;\n  globalLrcX: number;\n  globalLrcY: number;\n  globalLrcWidth: number;\n  globalLrcHeight: number;\n}\n\nconst globalX = 0;\nconst globalY = 0;\nconst globalWidth = 1022;\nconst globalHeight = 670;\nconst globalLrcWidth = 550;\nconst globalLrcHeight = 100;\nconst globalLrcX = globalX + (globalWidth - globalLrcWidth) / 2;\nconst globalLrcY = globalY + globalHeight;\n\nconst initialState: InsetState = {\n  POSITION: true,\n  globalVisibility: false,\n  globalDragger: false,\n  globalResizer: false,\n  globalStartX: 0,\n  globalStartY: 0,\n  globalBeforeX: globalX,\n  globalBeforeY: globalY,\n  globalX,\n  globalY,\n\n  GlobalRectLock: false,\n  globalStartRectX: 0,\n  globalStartRectY: 0,\n  globalBeforeWidth: globalWidth,\n  globalBeforeHeight: globalHeight,\n  globalWidth,\n  globalHeight,\n\n  globalStartLrcX: globalLrcX,\n  globalStartLrcY: globalLrcY,\n  globalBeforeLrcX: globalLrcX,\n  globalBeforeLrcY: globalLrcY,\n  globalLrcX,\n  globalLrcY,\n  globalLrcWidth,\n  globalLrcHeight,\n};\n\nconst MIN_WIDTH = 1022;\nconst MIN_HEIGHT = 670;\n\nconst slice = createSlice({\n  name: \"inset\",\n  initialState,\n  reducers: {\n    setGlobalInset(state, action) {\n      const x = action.payload.x - state.globalStartX + state.globalBeforeX;\n      const y = action.payload.y - state.globalStartY + state.globalBeforeY;\n      state.globalX = x;\n      state.globalY = y;\n    },\n    setGlobalStartInset(state, action) {\n      state.globalStartX = action.payload.x;\n      state.globalStartY = action.payload.y;\n      state.globalBeforeX = state.globalX;\n      state.globalBeforeY = state.globalY;\n    },\n    setGlobalDragger(state, action) {\n      state.globalDragger = action.payload;\n    },\n    setGlobalResizer(state, action) {\n      state.globalResizer = action.payload;\n    },\n    setGlobalStartRectLock(state, action) {\n      state.GlobalRectLock = true;\n    },\n    setGlobalStartRect(state, action) {\n      state.globalStartRectX = action.payload.x;\n      state.globalStartRectY = action.payload.y;\n      state.globalBeforeWidth = state.globalWidth;\n      state.globalBeforeHeight = state.globalHeight;\n    },\n    setGlobalRect(state, action) {\n      const width =\n        action.payload.x - state.globalStartRectX + state.globalBeforeWidth;\n      const height =\n        action.payload.y - state.globalStartRectY + state.globalBeforeHeight;\n\n      const nextwidth = width > MIN_WIDTH ? width : MIN_WIDTH;\n      const nextheight = height > MIN_HEIGHT ? height : MIN_HEIGHT;\n      state.globalWidth = nextwidth;\n      state.globalHeight = nextheight;\n      state.GlobalRectLock = false;\n    },\n    togglePosition(state) {\n      state.POSITION = !state.POSITION;\n    },\n    setPositionTrue(state) {\n      state.POSITION = true;\n    },\n    setPositionFalse(state) {\n      state.POSITION = false;\n    },\n    setGlobalLrcInset(state, action) {\n      const lrcX =\n        action.payload.x - state.globalStartLrcX + state.globalBeforeLrcX;\n      const lrcY =\n        action.payload.y - state.globalStartLrcY + state.globalBeforeLrcY;\n      state.globalLrcX = lrcX;\n      state.globalLrcY = lrcY;\n    },\n    setGlobalLrcStartInset(state, action) {\n      state.globalStartLrcX = action.payload.x;\n      state.globalStartLrcY = action.payload.y;\n      state.globalBeforeLrcX = state.globalLrcX;\n      state.globalBeforeLrcY = state.globalLrcY;\n    },\n  },\n});\n\nexport default slice.reducer;\n\nexport const insetSelector = ({ inset }) => inset;\n\nexport const {\n  setGlobalDragger,\n  setGlobalInset,\n  setGlobalLrcInset,\n  setGlobalLrcStartInset,\n  setGlobalRect,\n  setGlobalResizer,\n  setGlobalStartInset,\n  setGlobalStartRect,\n  setGlobalStartRectLock,\n  setPositionFalse,\n  setPositionTrue,\n} = slice.actions;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\ninterface LetterState {\n  nickname: string;\n  hint: string;\n  uid: string;\n  showMsgPrivateHistory: boolean;\n  privatMsgs: [];\n}\n\nconst initialState: LetterState = {\n  nickname: \"\",\n  hint: \"\",\n  uid: \"\",\n  showMsgPrivateHistory: false,\n  privatMsgs: [],\n};\n\nconst slice = createSlice({\n  name: \"letter\",\n  initialState,\n  reducers: {\n    setMsgPrivateHistory(state, action) {\n      Object.assign(state, action.payload);\n    },\n  },\n});\n\nexport default slice.reducer;\n\nexport const { setMsgPrivateHistory } = slice.actions;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport interface LocalState {\n  current: string;\n}\n\nconst initialState: LocalState = {\n  current: \"歌曲\",\n};\n\nconst slice = createSlice({\n  name: \"local\",\n  initialState,\n  reducers: {\n    setLocalCurrent(state, action) {\n      state.current = action.payload.current;\n    },\n  },\n});\n\nexport default slice.reducer;\n\nexport const { setLocalCurrent } = slice.actions;\n","export default function formatLrc(\n  lrc: string = \"\",\n  callback: (onetime: string, word: string) => void\n) {\n  const lines = lrc.match(/^\\[\\d*:\\d*.\\d*\\].*/gm);\n  if (!lines) return;\n  lines.forEach((line: string) => {\n    const match = line.match(/(?<time>\\[.*\\])(?<word>.*)/);\n    if (!match) return;\n    const { groups } = match;\n    if (!groups) return;\n    const { time, word } = groups;\n    if (!time) return;\n    time.match(/\\[(\\d*:\\d*\\.?\\d*)\\]/g).forEach((onetime: string) => {\n      callback(onetime, word);\n      // const { groups: { min, sec } } = onetime.match(/(?<min>\\d{2,}):(?<sec>\\d{2,}\\.\\d{2,})/);\n    });\n  });\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport formatLrc from \"./format\";\nimport { Draft } from \"immer\";\ninterface LrcState {\n  lyricVisibility: boolean;\n  lyric: {};\n  lrcList: { time: number; word: string }[];\n}\n\nconst initialState: LrcState = {\n  lyricVisibility: false,\n  lyric: {},\n  lrcList: [],\n};\n\nconst slice = createSlice({\n  name: \"lrc\",\n  initialState,\n  reducers: {\n    setLyricText(state, { payload }) {\n      const { lyric } = payload;\n      state.lyric = lyric;\n      const {\n        tlyric: { lyric: tlyric } = { lyric: \"\" },\n        lrc: { lyric: lrc } = { lyric: \"\" },\n      } = lyric;\n      if (!lrc) {\n        state.lrcList = [];\n        return;\n      }\n\n      const arr: { time: number; word: string }[] = [];\n      const temp: { [key in string]: string } = {};\n\n      formatLrc(lrc, (onetime, word) => {\n        temp[onetime] = word;\n      });\n\n      if (tlyric) {\n        formatLrc(tlyric, (onetime, word) => {\n          temp[onetime] += `\n              ${word}`;\n        });\n      }\n      Object.entries(temp).forEach(([key, word]) => {\n        const {\n          groups: { min, sec },\n        } = key.match(/\\[(?<min>\\d*):(?<sec>\\d*\\.?\\d*)\\]/);\n        const time = min * 60 + sec * 1;\n        arr.push({ time, word });\n      });\n      arr.sort(({ time: time1 }, { time: time2 }) => time1 - time2);\n      state.lrcList = arr;\n    },\n    setLyricShow(state) {\n      state.lyricVisibility = true;\n    },\n    setLyricHide(state) {\n      state.lyricVisibility = false;\n    },\n    setLyricToggle(state) {\n      state.lyricVisibility = !state.lyricVisibility;\n    },\n  },\n});\n\nexport const LrcSelector = <T = Draft<LrcState>>({ lrc }: { lrc: T }): T => lrc;\n\nexport default slice.reducer;\n\nexport const { setLyricHide, setLyricShow, setLyricText, setLyricToggle } =\n  slice.actions;\n","import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nconst visibilityState = {\n  lyricVisibility: false,\n  maskVisibility: false,\n  searchVisibility: false,\n  contextMenuVisibility: false,\n  dialogDownloadVideoVisibility: false,\n  dialogHomeOrderVisibility: false,\n  dialogShareVisibility: false,\n  dialogShareWXVisibility: false,\n  dialogUploadAvatarVisibility: false,\n  dialogCreatePlaylistVisibility: false,\n  dialogUnSubscriptionVisibility: false,\n  artistId: 0,\n  popupStatus: \"false\",\n  avatar: \"\",\n};\n\nconst maskState = {\n  contextMenuX: 0,\n  contextMenuY: 0,\n  contextMenuTotal: 0,\n  contextMenuType: \"\",\n  contextMenuItemId: 0,\n  contextMenuItem: {},\n  contextMenuSechma: [],\n  contextMenuShareLink: \"\",\n};\n\nconst shareState = {};\n\nconst initialState = {\n  ...visibilityState,\n  ...maskState,\n  ...shareState,\n};\n\nconst slice = createSlice({\n  name: \"mask\",\n  initialState,\n  reducers: {\n    setContextMenuShow(state, action) {\n      Object.assign(state, action.payload);\n      state.contextMenuVisibility = true;\n    },\n    setContextMenuShareLink(state, action) {\n      Object.assign(state, action.payload);\n    },\n    setSearchShow(state) {\n      // Object.assign(state, visibilityState, maskState, action.payload);\n      state.searchVisibility = true;\n    },\n    setDialogShareShow(state) {\n      state.dialogShareVisibility = true;\n    },\n    setDialogShareWXShow(state) {\n      // Object.assign(state, visibilityState, action.payload);\n      state.dialogShareWXVisibility = true;\n    },\n    setDialogUploadAvatarShow(state, action) {\n      Object.assign(state, visibilityState, action.payload);\n      state.dialogUploadAvatarVisibility = true;\n    },\n    setDialogDownloadVideoShow(state, action) {\n      Object.assign(state, visibilityState, action.payload);\n      state.dialogDownloadVideoVisibility = true;\n    },\n    setDialogCreatePlaylistShow(state) {\n      state.dialogHomeOrderVisibility = true;\n    },\n    setDialogUnSubscriptionShow(state, action) {\n      Object.assign(state, visibilityState, action.payload);\n      state.dialogUnSubscriptionVisibility = true;\n    },\n    setDialogHomeOrderShow(state) {\n      state.dialogHomeOrderVisibility = true;\n    },\n    setDialogReset(state) {\n      Object.assign(state, visibilityState, maskState);\n    },\n    setPopupLetterToggle(state) {\n      state.popupStatus = state.popupStatus === \"letter\" ? \"false\" : \"letter\";\n    },\n    setPopupPlaylistToggle(state) {\n      state.popupStatus =\n        state.popupStatus === \"playlist\" ? \"false\" : \"playlist\";\n    },\n  },\n});\n\nexport default slice.reducer;\n\nexport const maskSelector = ({ mask }) => mask;\n\nexport const {\n  setContextMenuShareLink,\n  setContextMenuShow,\n  setDialogCreatePlaylistShow,\n  setDialogDownloadVideoShow,\n  setDialogHomeOrderShow,\n  setDialogReset,\n  setDialogShareShow,\n  setDialogShareWXShow,\n  setDialogUnSubscriptionShow,\n  setDialogUploadAvatarShow,\n  setPopupLetterToggle,\n  setPopupPlaylistToggle,\n  setSearchShow,\n} = slice.actions;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiMVAll, apiMVExclusiveRcmd, apiMVFirst, apiTopMV } from \"@/api\";\nimport { Draft } from \"immer\";\n\nexport interface MVListState {\n  firstArea: string;\n  topArea: string;\n  first: [];\n  hot: [];\n  wy: [];\n  top: [];\n  timestamp: number;\n}\n\nconst initialState: MVListState = {\n  firstArea: \"内地\",\n  topArea: \"内地\",\n  first: [],\n  hot: [],\n  wy: [],\n  top: [],\n  timestamp: 0,\n};\n\nconst listFilter = (arr = []) =>\n  arr.map(({ id, playCount, cover, name, artists, briefDesc }) => ({\n    type: 0,\n    id,\n    cover,\n    briefDesc,\n    playCount,\n    title: name,\n    creator: artists.map(({ id: userId, name: userName }) => ({\n      userId,\n      userName,\n    })),\n  }));\n\ninterface iInit {\n  firstArea: string;\n  topArea: string;\n}\n\nexport const handleInit = createAsyncThunk(\n  \"mvlist/init/all\",\n  async ({ firstArea, topArea }: iInit) => {\n    try {\n      const [{ data: hot }, { data: wy }, { data: first }, { data: top }] =\n        await Promise.all([\n          apiMVAll({\n            order: \"最热\",\n            limit: 6,\n          }),\n          apiMVExclusiveRcmd({\n            limit: 6,\n          }),\n          apiMVFirst({\n            area: firstArea,\n            limit: 6,\n          }),\n          apiTopMV({\n            area: topArea,\n            limit: 10,\n          }),\n        ]);\n      return {\n        first: listFilter(first),\n        hot: listFilter(hot),\n        wy: listFilter(wy),\n        top,\n        timestamp: Date.now(),\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nexport const handleChangeFirstArea = createAsyncThunk(\n  \"mvlist/init/first\",\n  async (firstArea: string) => {\n    try {\n      const { data: first } = await apiMVFirst({\n        area: firstArea,\n        limit: 6,\n      });\n      return {\n        firstArea,\n        first: listFilter(first),\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nexport const handleChangeTopArea = createAsyncThunk(\n  \"mvlist/init/top\",\n  async (topArea: string) => {\n    try {\n      const { data: top } = await apiTopMV({\n        area: topArea,\n        limit: 10,\n      });\n      return {\n        topArea,\n        top,\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nconst slice = createSlice({\n  name: \"mvlist\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [handleInit.fulfilled.type]: (state, action) => {\n      const { timestamp, first, hot, wy, top } = action.payload;\n      state.timestamp = timestamp;\n      state.first = first;\n      state.hot = hot;\n      state.wy = wy;\n      state.top = top;\n    },\n    [handleChangeFirstArea.fulfilled.type]: (state, action) => {\n      const { topArea, top } = action.payload;\n      state.topArea = topArea;\n      state.top = top;\n    },\n    [handleChangeFirstArea.fulfilled.type]: (state, action) => {\n      const { firstArea, first } = action.payload;\n      state.firstArea = firstArea;\n      state.first = first;\n    },\n  },\n});\n\nexport const MVListSelector = <T = Draft<MVListState>>({\n  mvlist,\n}: {\n  mvlist: T;\n}): T => mvlist;\n\nexport default slice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { Draft } from \"immer\";\nimport { remove } from \"lodash\";\ninterface State {\n  keywords: string;\n  count: number;\n  history: string[];\n}\n\nconst initialState: State = {\n  keywords: \"\",\n  count: 0,\n  history: [],\n};\n\nconst slice = createSlice({\n  name: \"search\",\n  initialState,\n  reducers: {\n    setKeywords(state, { payload }) {\n      Object.assign(state, payload);\n    },\n    setSearchCount(state, { payload }) {\n      state.count = payload.count;\n    },\n    setHistory(state, { payload }) {\n      const { keywords } = payload;\n      remove(state.history, (history) => history === keywords);\n\n      state.history.unshift(keywords);\n    },\n    delHistory(state, { payload }) {\n      const { keywords } = payload;\n      remove(state.history, (history) => history === keywords);\n    },\n    clearHistory(state) {\n      state.history.length = 0;\n    },\n  },\n});\n\nexport const searchSelector = <T = Draft<State>>({ search }: { search: T }) =>\n  search;\n\nexport default slice.reducer;\n\nexport const {\n  setKeywords,\n  setSearchCount,\n  setHistory,\n  clearHistory,\n  delHistory,\n} = slice.actions;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { Draft } from \"immer\";\n\nexport interface State {\n  theme: string;\n  custom: boolean;\n  font: string;\n  order: string[];\n  globalLrcVisibility: boolean;\n}\n\nexport type Order =\n  | \"推荐歌单\"\n  | \"独家放送\"\n  | \"最新音乐\"\n  | \"推荐MV\"\n  | \"主播电台\"\n  | \"看看\";\nexport type Orders = Order[];\nexport const defaultOrder: Orders = [\n  \"推荐歌单\",\n  \"独家放送\",\n  \"最新音乐\",\n  \"推荐MV\",\n  \"主播电台\",\n  \"看看\",\n];\n\nconst initialState: State = {\n  theme: \"#EC4141\",\n  custom: false,\n  font: \"inherit\",\n  order: defaultOrder,\n  globalLrcVisibility: false,\n};\n\nconst slice = createSlice({\n  name: \"settings\",\n  initialState,\n  reducers: {\n    setTheme(state, action) {\n      state.theme = action.payload;\n    },\n    setFont(state, action) {\n      state.custom = action.payload;\n    },\n    setCustom(state, action) {\n      state.font = action.payload;\n    },\n    setHomeOrder(state, action) {\n      state.order = action.payload;\n    },\n    setGlobalLrcToggle(state) {\n      state.globalLrcVisibility = !state.globalLrcVisibility;\n    },\n    setGlobalLrcShow(state) {\n      state.globalLrcVisibility = true;\n    },\n    setGlobalLrcHide(state) {\n      state.globalLrcVisibility = false;\n    },\n  },\n});\n\nexport const settingSelector = <T = Draft<State>>({\n  settings,\n}: {\n  settings: T;\n}): T => settings;\n\nexport default slice.reducer;\n\nexport const {\n  setTheme,\n  setFont,\n  setCustom,\n  setHomeOrder,\n  setGlobalLrcHide,\n  setGlobalLrcShow,\n  setGlobalLrcToggle,\n} = slice.actions;\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  apiVideoCategoryList,\n  apiVideoGroup,\n  apiVideoGroupList,\n  apiVideoTimelineRecommend,\n} from \"@/api\";\nimport { Draft } from \"immer\";\n\ninterface ItemProps {\n  id: number;\n  name: string;\n}\n\nexport type Category = ItemProps;\n\nexport type Group = ItemProps;\n\nexport interface VideoListState {\n  id: number;\n  initStatus: boolean;\n  categoryList: Category[];\n  groupList: Group[];\n  videoList: [];\n}\n\nconst initialState: VideoListState = {\n  id: 0,\n  initStatus: false,\n  categoryList: [],\n  groupList: [],\n  videoList: [],\n};\n\nexport const handlePrevInit = createAsyncThunk(\"videolist/init\", async () => {\n  try {\n    const [{ data: groupList }, { data: categoryList = [] }] =\n      await Promise.all([apiVideoGroupList(), apiVideoCategoryList()]);\n    return {\n      groupList,\n      categoryList,\n    };\n  } catch (e) {\n    console.log(e);\n  }\n});\n\nexport const handleAddList = createAsyncThunk(\n  \"videolist/add\",\n  async (id?: number) => {\n    try {\n      const { datas = [] } = await (id\n        ? apiVideoGroup({\n            id,\n          })\n        : apiVideoTimelineRecommend());\n      const videoList = datas.map(\n        ({\n          data: {\n            vid,\n            coverUrl,\n            durationms,\n            title,\n            playTime,\n            creator: { nickname: userName, userId },\n          },\n        }) => ({\n          id: vid,\n          cover: coverUrl,\n          duration: durationms,\n          playCount: playTime,\n          title,\n          creator: [{ userName, userId }],\n        })\n      );\n      return {\n        videoList,\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nconst slice = createSlice({\n  name: \"videolist\",\n  initialState,\n  reducers: {\n    setVideoListInit(state) {\n      state.videoList.length = 0;\n    },\n    setVideoListId(state, action) {\n      state.id = action.payload.id;\n    },\n  },\n  extraReducers: {\n    [handlePrevInit.fulfilled.type]: (state, { payload }) => {\n      state.groupList = payload.groupList;\n      state.categoryList = payload.categoryList;\n    },\n    [handleAddList.fulfilled.type]: (state, { payload }) => {\n      state.videoList.push(...payload.videoList);\n    },\n  },\n});\n\nexport const VideoListSelector = <T = Draft<VideoListState>>({\n  videolist,\n}: {\n  videolist: T;\n}): T => videolist;\n\nexport default slice.reducer;\n\nexport const { setVideoListId, setVideoListInit } = slice.actions;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\ninterface VolumeState {\n  volume: number;\n  beforeMuted: number;\n}\n\nconst initialState: VolumeState = {\n  volume: 100,\n  beforeMuted: 10,\n};\n\nconst slice = createSlice({\n  name: \"volume\",\n  initialState,\n  reducers: {\n    setVolume(state, action) {\n      let volume = action.payload;\n      if (volume > 100) volume = 100;\n      if (volume < 0) volume = 0;\n      state.volume = volume;\n    },\n    setVolumePlusTen(state) {\n      const newVolume = state.volume >= 90 ? 100 : state.volume + 10;\n      state.volume = newVolume;\n    },\n    setVolumeSubTen(state) {\n      const newVolume = state.volume <= 10 ? 0 : state.volume - 10;\n      state.volume = newVolume;\n    },\n    setBeforeMuted(state, action) {\n      state.beforeMuted = action.payload;\n    },\n  },\n});\n\nexport const volumeSelector = ({ volume }) => volume;\n\nexport default slice.reducer;\n\nexport const { setVolume, setVolumePlusTen, setVolumeSubTen, setBeforeMuted } =\n  slice.actions;\n","import { Countries } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getCountriesCodeList: build.query<Countries, void>({\n      query: () => `countries/code/list`,\n    }),\n    getLogout: build.mutation<{ code: number }, void>({\n      query: () => `logout`,\n    }),\n    getLoginQRKey: build.mutation<{ code: number }, void>({\n      query: () => `login/qr/key`,\n    }),\n    getLoginQRCheck: build.mutation<{ code: number }, { key: number }>({\n      query: (body) => ({\n        url: `login/qr/check`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetCountriesCodeListQuery,\n  useGetLogoutMutation,\n  useGetLoginQRCheckMutation,\n} = api;\n","import {\n  Artists,\n  Detail,\n  Albums,\n  TopSongs,\n  Desc,\n  Req,\n  ArtistMV,\n  Sub,\n} from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getArtistDetail: build.query<Detail, Req>({\n      query: (body) => ({\n        url: `artist/detail`,\n        method: \"POST\",\n        body,\n      }),\n      providesTags: (result, error, { id }) => [{ type: \"artist/detail\", id }],\n    }),\n    getSimiArtist: build.query<Artists, Req>({\n      query: (body) => ({\n        url: `simi/artist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistAlbum: build.query<Albums, Req>({\n      query: (body) => ({\n        url: `artist/album`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistTopSong: build.query<TopSongs, Req>({\n      query: (body) => ({\n        url: `artist/top/song`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistDesc: build.query<Desc, Req>({\n      query: (body) => ({\n        url: `artist/desc`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistMV: build.mutation<\n      ArtistMV,\n      Req & { limit: number; offset: number }\n    >({\n      query: (body) => ({\n        url: `artist/mv`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    postArtistSub: build.mutation<Sub, Req & { t?: number }>({\n      query: (body) => ({\n        url: `artist/sub`,\n        method: \"POST\",\n        body,\n      }),\n      invalidatesTags: (result, error, { id }) => [\n        { type: \"artist/detail\", id },\n      ],\n    }),\n  }),\n});\n\nexport const {\n  useGetArtistDetailQuery,\n  useGetSimiArtistQuery,\n  useGetArtistAlbumQuery,\n  useGetArtistTopSongQuery,\n  useGetArtistDescQuery,\n  useGetArtistMVMutation,\n  usePostArtistSubMutation,\n} = api;\n","import {\n  BaseQueryFn,\n  createApi,\n  FetchArgs,\n  fetchBaseQuery,\n  FetchBaseQueryError,\n  FetchBaseQueryMeta,\n  retry,\n} from \"@reduxjs/toolkit/query/react\";\nimport { QueryReturnValue } from \"@reduxjs/toolkit/dist/query/baseQueryTypes\";\nimport { Get } from \"@/modules/utils\";\n\n// Create our baseQuery instance\nconst baseQuery = fetchBaseQuery({\n  baseUrl: API_URL,\n  // prepareHeaders: (headers, { getState }) => {\n  //   // By default, if we have a token in the store, let's use that for authenticated requests\n  //   const token = (getState() as RootState).auth.token;\n  //   if (token) {\n  //     headers.set(\"authentication\", `Bearer ${token}`);\n  //   }\n  //   return headers;\n  // },\n});\n\nconst _baseQueryWithIntercept: BaseQueryFn<\n  string | FetchArgs,\n  unknown,\n  FetchBaseQueryError\n> = async (args, api, extraOptions) => {\n  const result: QueryReturnValue<any, FetchBaseQueryError, FetchBaseQueryMeta> =\n    await baseQuery(args, api, extraOptions);\n  console.log(result, \"拦截器\");\n  const { data, error, meta } = result;\n  // 如果遇到错误的时候\n  if (error) {\n    const { status } = error as FetchBaseQueryError;\n    const { request } = meta as FetchBaseQueryMeta;\n    const url: string = request.url;\n    // 根据状态来处理错误\n    printHttpError(Number(status), url);\n    // TODO 自己处理错误信息提示给前端\n  }\n  if (Object.is(data?.code, 0)) {\n    return result;\n  }\n  throw new Error(data.message);\n};\n\nexport const printHttpError = (httpStatus: number, path: string): void => {\n  switch (httpStatus) {\n    case 400:\n      console.log(`错误的请求:${path}`);\n      break;\n    // 401: 未登录\n    // 未登录则跳转登录页面，并携带当前页面的路径\n    case 401:\n      console.log(\"你没有登录,请先登录\");\n      window.location.reload();\n      break;\n    // 跳转登录页面\n    case 403:\n      console.log(\"登录过期，请重新登录\");\n      // 清除全部的缓存数据\n      window.localStorage.clear();\n      window.location.reload();\n      break;\n    // 404请求不存在\n    case 404:\n      console.log(\"网络请求不存在\");\n      break;\n    // 其他错误，直接抛出错误提示\n    default:\n      console.log(\"我也不知道是什么错误\");\n      break;\n  }\n};\n\nconst baseQueryWithIntercept: BaseQueryFn<\n  string | FetchArgs,\n  unknown,\n  FetchBaseQueryError\n> = async (args, api, extraOptions) => {\n  if (typeof args !== \"string\") {\n    args.body ??= {};\n    // args.body.cookie ??= Get({ key: \"cookie\" });\n    args.body = { ...args.body, cookie: Get({ key: \"cookie\" }) };\n    args.url += `?timestamp=${Date.now()}`;\n  }\n  console.log(\"baseQueryWithIntercept\", args, api, extraOptions);\n  const result: QueryReturnValue<any, FetchBaseQueryError, FetchBaseQueryMeta> =\n    await baseQuery(args, api, extraOptions);\n  const { data, meta, error } = result;\n  console.log(\"data\", data, \"meta\", meta, \"error\", error);\n  if (error) {\n    const { status, data } = error;\n    if (status === 301) {\n      console.log(\"弹出登录窗口\");\n    }\n    if (status === 400) {\n      if (data.code === -462) {\n        console.log(data.data.blockText);\n      }\n    }\n  }\n  return result;\n};\n\nconst baseQueryWithRetry = retry(baseQueryWithIntercept, { maxRetries: 2 });\n\nexport const base = createApi({\n  reducerPath: \"daily\",\n  baseQuery: baseQueryWithRetry,\n  tagTypes: [\"dailySignIn\", \"artist/detail\", \"user/followeds\", \"user/account\"],\n  endpoints: (build) => ({}),\n});\n","import { ResCommentVideo, ResCommentMV, Events } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getCommentVideo: build.query<ResCommentVideo, { id: string }>({\n      query: (body) => ({\n        url: `comment/video`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getCommentMusic: build.query<\n      ResCommentVideo,\n      { id: number; limit: number; offset: number }\n    >({\n      query: (body) => ({\n        url: `comment/music`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getCommentMV: build.query<ResCommentMV, { id: string }>({\n      query: (body) => ({\n        url: `comment/mv`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getCommentEvent: build.query<Events, { threadId: number }>({\n      query: (body) => ({\n        url: `comment/event`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetCommentVideoQuery,\n  useGetCommentMusicQuery,\n  useGetCommentMVQuery,\n  useGetCommentEventQuery,\n} = api;\n","import { Daily } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getRecommendSongs: build.query<Daily, void>({\n      query: (body) => ({\n        url: `recommend/songs`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetRecommendSongsQuery } = api;\n","import { base } from \"../../base\";\nimport { Artists, Details } from \"./types\";\n\ninterface ReqArtists {\n  type: number;\n  area: number;\n  initial: number;\n  limit: number;\n  offset: number;\n}\n\nconst api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getArtistList: build.mutation<Artists, ReqArtists>({\n      query: (body) => ({\n        url: `artist/list`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getTopListDetail: build.query<Details, void>({\n      query: () => `topList/detail`,\n    }),\n    getTopListArtist: build.query<Artists, { type: number }>({\n      query: (body) => ({\n        url: `topList/artist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetArtistListMutation, useGetTopListDetailQuery } = api;\n","import { base } from \"../base\";\nimport { Songs } from \"./types\";\nimport { limit } from \"@/common/config\";\n\ninterface ReqArtists {\n  type: number;\n}\n\ninterface ResAlbums {\n  area: number;\n  type: string;\n  limit: number;\n  offset: number;\n}\n\nconst api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getTopSong: build.query<Songs, ReqArtists>({\n      query: (body) => ({\n        url: `top/song`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getTopAlbum: build.query<Songs, ResAlbums>({\n      query: (body) => ({\n        url: `top/album`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getAlbumNew: build.query<Songs, ResAlbums>({\n      query: (body) => ({\n        url: `album/new`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetTopSongQuery, useGetTopAlbumQuery, useGetAlbumNewQuery } =\n  api;\n","import {\n  Banners,\n  Privatecontents,\n  Newsongs,\n  MVs,\n  DJPrograms,\n  Resources,\n  Tags,\n  Highqualitys,\n  Playlists,\n} from \"./types\";\nimport { base } from \"../base\";\n\ninterface ReqHighquality {}\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getRecommendResource: build.query<Resources, void>({\n      query: () => ({\n        url: `recommend/resource`,\n        method: \"POST\",\n      }),\n    }),\n    getBanner: build.query<Banners, void>({\n      query: () => `banner`,\n    }),\n    getPersonalizedPrivatecontent: build.query<Privatecontents, void>({\n      query: () => `personalized/privatecontent`,\n    }),\n    getPersonalizedNewsong: build.query<Newsongs, { limit: number }>({\n      query: (body) => ({\n        url: `personalized/newsong`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getPersonalizedMV: build.query<MVs, void>({\n      query: () => `personalized/mv`,\n    }),\n    getPersonalizedDJProgram: build.query<DJPrograms, void>({\n      query: () => `personalized/djprogram`,\n    }),\n\n    getPlaylistHighqualityTags: build.query<Tags, void>({\n      query: () => `playlist/highquality/tags`,\n    }),\n    getPlaylistHot: build.query<Tags, void>({\n      query: () => `playlist/hot`,\n    }),\n    getPlaylistCatList: build.query<Tags, void>({\n      query: () => `playlist/catlist`,\n    }),\n\n    getTopPlaylistHighquality: build.mutation<\n      Highqualitys,\n      { cat: string; limit?: number; before?: number }\n    >({\n      query: (body) => ({\n        url: `top/playlist/highquality`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getTopPlaylist: build.query<\n      Playlists,\n      { order: string; cat: string; limit: number; offset: number }\n    >({\n      query: (body) => ({\n        url: `top/playlist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetBannerQuery,\n  useGetRecommendResourceQuery,\n  useGetPersonalizedPrivatecontentQuery,\n  useGetPersonalizedNewsongQuery,\n  useGetPersonalizedMVQuery,\n  useGetPersonalizedDJProgramQuery,\n\n  useGetPlaylistHotQuery,\n  useGetPlaylistCatListQuery,\n  useGetTopPlaylistQuery,\n  useGetPlaylistHighqualityTagsQuery,\n  useGetTopPlaylistHighqualityMutation,\n} = api;\n\nexport * from \"./toplist\";\nexport * from \"./newest\";\n","import { Banners, DJs } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getDJBanner: build.query<Banners, void>({\n      query: () => `dj/banner`,\n    }),\n    getDJCategoryRecommend: build.query<Banners, void>({\n      query: () => `dj/category/recommend`,\n    }),\n    getDJCateList: build.query<Banners, void>({\n      query: () => `dj/cateList`,\n    }),\n    getDJPersonalizeRecommend: build.query<Banners, void>({\n      query: () => `dj/personalize/recommend`,\n    }),\n    getDJRadioHot: build.query<\n      DJs,\n      { cateId: number; limit: number; offset?: number }\n    >({\n      query: (body) => ({\n        url: `dj/radio/hot`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getRecommendSongs: build.query<DJs, void>({\n      query: (body) => ({\n        url: `recommend/songs`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetDJBannerQuery,\n  useGetDJCategoryRecommendQuery,\n  useGetDJCateListQuery,\n  useGetDJRadioHotQuery,\n  useGetDJPersonalizeRecommendQuery,\n} = api;\n","import { Tops, Topics, TopicDetails, Events } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getHotTopic: build.query<Topics, { limit: number }>({\n      query: (body) => ({\n        url: `hot/topic`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getTopicDetail: build.query<TopicDetails, { actid: string }>({\n      query: (body) => ({\n        url: `topic/detail`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getEvent: build.mutation<Events, { lasttime: number }>({\n      query: (body) => ({\n        url: `event`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getTopicDetailEventHot: build.query<Events, { actid: number }>({\n      query: (body) => ({\n        url: `topic/detail/event/hot`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetHotTopicQuery,\n  useGetTopicDetailQuery,\n  useGetEventMutation,\n  useGetTopicDetailEventHotQuery,\n} = api;\n","import { SimiSongs } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getSimiSong: build.query<SimiSongs, { id: number }>({\n      query: (body) => ({\n        url: `simi/song`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetSimiSongQuery } = api;\n","import { ResRelated } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getRelatedAllVideo: build.query<ResRelated, { id: string }>({\n      query: (body) => ({\n        url: `related/allvideo`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getVideoUrl: build.query<ResRelated, { id: string }>({\n      query: (body) => ({\n        url: `video/url`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getVideoDetail: build.query<ResRelated, { id: string }>({\n      query: (body) => ({\n        url: `video/detail`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getVideoDetailInfo: build.query<ResRelated, { vid: string }>({\n      query: (body) => ({\n        url: `video/detail/info`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetRelatedAllVideoQuery,\n  useGetVideoUrlQuery,\n  useGetVideoDetailQuery,\n  useGetVideoDetailInfoQuery,\n} = api;\n","import { Details, Comments } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getPlaylistDetail: build.query<Details, { id: number; limit?: number }>({\n      query: (body) => ({\n        url: `playlist/detail`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getCommentPlaylist: build.query<Comments, { id: number }>({\n      query: (body) => ({\n        url: `comment/playlist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetPlaylistDetailQuery, useGetCommentPlaylistQuery } = api;\n","import { Searchs, SearchHotDetails, Suggests, Multimatchs } from \"./types\";\nimport { base } from \"../base\";\n\ninterface ReqSearch {\n  keywords: string;\n  limit: number;\n  type: number;\n  offset: number;\n}\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getCloudSearch: build.mutation<Searchs, ReqSearch>({\n      query: (body) => ({\n        url: `cloudSearch`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getSearchMultimatch: build.query<Multimatchs, { keywords: string }>({\n      query: (body) => ({\n        url: `search/multimatch`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getSearchSuggest: build.query<Suggests, { keywords: string }>({\n      query: (body) => ({\n        url: `search/suggest`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getSearchHotDetail: build.query<SearchHotDetails, void>({\n      query: (body) => `search/hot/detail`,\n    }),\n  }),\n});\n\nexport const {\n  useGetCloudSearchMutation,\n  useGetSearchMultimatchQuery,\n  useGetSearchSuggestQuery,\n  useGetSearchHotDetailQuery,\n} = api;\n","import { Songs, Lyrics } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getSongUrl: build.mutation<Songs, { id: number }>({\n      query: (body) => ({\n        url: `song/url`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getSongDetail: build.mutation<Songs, { ids: string }>({\n      query: (body) => ({\n        url: `song/detail`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getLyric: build.mutation<Lyrics, { id: number }>({\n      query: (body) => ({\n        url: `lyric`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getPersonalFM: build.mutation<Lyrics, void>({\n      query: () => `personal_fm`,\n    }),\n  }),\n});\n\nexport const {\n  useGetSongUrlMutation,\n  useGetLyricMutation,\n  useGetSongDetailMutation,\n  useGetPersonalFMMutation,\n} = api;\n","import { MVs, Albums, Topics, Artists, DJs } from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getMVSubList: build.query<MVs, void>({\n      query: (body) => ({\n        url: `mv/sublist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getTopicSubList: build.query<Topics, void>({\n      query: (body) => ({\n        url: `topic/sublist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getArtistSubList: build.query<Artists, void>({\n      query: (body) => ({\n        url: `artist/sublist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getAlbumSubList: build.query<Albums, void>({\n      query: (body) => ({\n        url: `album/sublist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getDJSublist: build.query<DJs, void>({\n      query: (body) => ({\n        url: `dj/sublist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetAlbumSubListQuery,\n  useGetArtistSubListQuery,\n  useGetMVSubListQuery,\n  useGetTopicSubListQuery,\n  useGetDJSublistQuery,\n} = api;\n","import {\n  Clouds,\n  Bindings,\n  Followeds,\n  Details,\n  ReqUpdate,\n  Accounts,\n  SignInProgress,\n  Records,\n  Evnets,\n} from \"./types\";\nimport { base } from \"../base\";\n\nexport const api = base.injectEndpoints({\n  endpoints: (build) => ({\n    getUserCloud: build.query<Clouds, { limit: number }>({\n      query: (body) => ({\n        url: `user/cloud`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getDailySignIn: build.mutation<{ code: number; point: number }, void>({\n      query: () => ({\n        url: `daily_signin`,\n        method: \"POST\",\n      }),\n      invalidatesTags: [{ type: \"dailySignIn\" }],\n    }),\n    getSignInProgress: build.query<SignInProgress, { moduleId?: string }>({\n      query: (body) => ({\n        url: `signin/progress`,\n        method: \"POST\",\n        body,\n      }),\n      providesTags: [{ type: \"dailySignIn\" }],\n    }),\n    getUserDetail: build.query<Details, { uid: string }>({\n      query: (body) => ({\n        url: `user/detail`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getUserAccount: build.query<Accounts, void>({\n      query: () => ({\n        url: `user/account`,\n        method: \"POST\",\n      }),\n      providesTags: (result, error) => [{ type: \"user/account\" }],\n    }),\n    postUserUpdate: build.mutation<{ code: number }, ReqUpdate>({\n      query: (body) => ({\n        url: `user/update`,\n        method: \"POST\",\n        body,\n      }),\n      invalidatesTags: (result, error, {}) => [{ type: \"user/account\" }],\n    }),\n    getUserEvent: build.mutation<Evnets, { uid: string; lasttime: number }>({\n      query: (body) => ({\n        url: `user/event`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getUserSubCount: build.query<Clouds, void>({\n      query: (body) => ({\n        url: `user/subcount`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getUserPlaylist: build.query<Clouds, { uid: string }>({\n      query: (body) => ({\n        url: `user/playlist`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getUserBinding: build.query<Bindings, { uid: string }>({\n      query: (body) => ({\n        url: `user/binding`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getUserRecord: build.query<Records, { uid: number; type: number }>({\n      query: (body) => ({\n        url: `user/record`,\n        method: \"POST\",\n        body,\n      }),\n    }),\n    getUserFolloweds: build.query<Followeds, { uid: string }>({\n      query: (body) => ({\n        url: `user/followeds`,\n        method: \"POST\",\n        body,\n      }),\n      providesTags: (result, error, { uid }) => [\n        { type: \"user/followeds\", id: uid },\n      ],\n    }),\n    postFollow: build.mutation<Followeds, { id: string; t: number }>({\n      query: (body) => ({\n        url: `follow`,\n        method: \"POST\",\n        body,\n      }),\n      invalidatesTags: (result, error, { id }) => [\n        { type: \"user/followeds\", id },\n      ],\n    }),\n  }),\n});\n\nexport const {\n  useGetDailySignInMutation,\n  useGetUserCloudQuery,\n  useGetUserDetailQuery,\n  useGetUserAccountQuery,\n  usePostUserUpdateMutation,\n  useGetUserEventMutation,\n  useGetSignInProgressQuery,\n  useGetUserSubCountQuery,\n  useGetUserBindingQuery,\n  useGetUserRecordQuery,\n  useGetUserPlaylistQuery,\n  useGetUserFollowedsQuery,\n\n  usePostFollowMutation,\n} = api;\n","import { combineReducers, ReducersMapObject } from \"@reduxjs/toolkit\";\n\nconst root: ReducersMapObject = {};\n\nconst requireContext = require.context(\n  \"./reducers\",\n  true,\n  /^\\.\\/.*\\/slice\\.ts$/\n);\n\nrequireContext.keys().forEach((key) => {\n  const mod = requireContext(key);\n  root[key.slice(2, -9)] = mod.__esModule && mod.default ? mod.default : mod;\n});\n\n// const modules = import.meta.globEager(\"./*/slice.ts\");\n//\n// for (const path in modules) {\n//   root[path.slice(2, -9)] = modules[path].default;\n// }\n\nexport default root;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./rootReducer\";\nimport { base } from \"./services/base\";\n// We'll use redux-logger just as an example of adding another middleware\nimport logger from \"redux-logger\";\nimport { combineReducers } from \"redux\";\n// And use redux-batch as an example of adding enhancers\n// import { reduxBatch } from \"@manaflair/redux-batch\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport hardSet from \"redux-persist/lib/stateReconciler/hardSet\";\n\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n  timeout: 2000, // 缓解卡顿\n  whitelist: [\"setting\", \"inset\", \"audio\", \"search\", \"volume\"],\n  // blackList: [\"mask\", base.reducerPath],\n  // stateReconciler: hardSet,\n};\n\nconst preloadedState = {};\n\nif (window && window.__STATE__) {\n  // Read the state sent with markup\n  // const preloadedState = window.__STATE__;\n  Object.assign(preloadedState, window.__STATE__);\n\n  // delete the state from global window object\n  delete window.__STATE__;\n}\n\nconst persistedReducer = persistReducer(\n  persistConfig,\n  combineReducers({\n    [base.reducerPath]: base.reducer,\n    ...rootReducer,\n  })\n);\n\nconst store = configureStore({\n  // reducer: combineReducers({\n  //   [base.reducerPath]: base.reducer,\n  //   ...rootReducer,\n  // }),\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(base.middleware),\n  devTools: NODE_ENV !== \"production\",\n  preloadedState,\n  // enhancers: [reduxBatch],\n});\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\nexport default store;\n","import store from \"store2\";\ninterface iProps<T> {\n  key: string;\n  value?: T;\n  base?: T;\n  callback?: Function;\n}\n\nexport const Set = <T>({ key, value, callback }: iProps<T>) => {\n  store(key, value);\n  callback && callback();\n};\n\nexport const Get = <T>({ key, callback, base }: iProps<T>): T => {\n  const value = store(key) || base;\n  callback && callback();\n  return value;\n};\n\nexport const Remove = <T>({ key }: iProps<T>): T => {\n  return store.remove(key);\n};\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","slice","createSlice","name","initialState","profile","playlist","bindings","likelist","artistSublist","topicSublist","albumSublist","mvSublist","reducers","setLoginInfo","state","payload","Object","assign","setLoginInfoUpdate","action","setLikelist","setPlaylist","setLikelistAdd","push","id","setLikelistDel","n","length","index","findIndex","item","setArtistSublist","setArtistSublistAdd","setTopicSublist","setAlbumSublist","setMVSublist","actions","FnChange","jumpTime","currentTime","buffered","running","FnAddNext","currentSong","some","song","beforeIndex","splice","FnAddHistory","history","historyIndex","unshift","lastTime","Date","now","FnImmediate","errorCount","dropping","lyric","lrcList","pattern","setAudioSrc","src","setAudioImmediate","setAudioImmediateNext","setAudioPlaylist","setAudioPlaylistAdd","setAudioPrev","len","currentIndex","setAudioNext","setAudioCurrent","setAudioRunning","setAudioRunningPlay","setAudioRunningPause","setAudioRunningToggle","setAudioDropping","setAudioCurrentTime","setJumpToAudioCurrentTime","setAudioBuffered","setAudioPlaylistClear","setAudioHistoryClear","setAudioPattern","audioPattern","setRunErrorAdd","setRunErrorDesc","audioSelector","audio","newMsgCount","loginVisibility","isLogin","msgs","comments","forwards","notices","baseUrl","gitUrl","setIsLogin","setNotLogin","setMsgPrivate","setLoginVisibilty","commonSelector","common","handleGetData","createAsyncThunk","params","apiPersonalizedPrivatecontentList","result","scrollTop","setExclusiveResultAdd","setExclusiveResultEmpty","setExclusiveScrollTop","extraReducers","fulfilled","type","POSITION","globalVisibility","globalDragger","globalResizer","globalStartX","globalStartY","globalBeforeX","globalBeforeY","globalX","globalY","GlobalRectLock","globalStartRectX","globalStartRectY","globalBeforeWidth","globalBeforeHeight","globalWidth","globalHeight","globalStartLrcX","globalStartLrcY","globalBeforeLrcX","globalBeforeLrcY","globalLrcX","globalLrcY","globalLrcWidth","globalLrcHeight","setGlobalInset","x","y","setGlobalStartInset","setGlobalDragger","setGlobalResizer","setGlobalStartRectLock","setGlobalStartRect","setGlobalRect","width","height","nextwidth","nextheight","togglePosition","setPositionTrue","setPositionFalse","setGlobalLrcInset","lrcX","lrcY","setGlobalLrcStartInset","insetSelector","inset","nickname","hint","uid","showMsgPrivateHistory","privatMsgs","setMsgPrivateHistory","current","setLocalCurrent","formatLrc","lrc","callback","lines","match","forEach","line","groups","time","word","onetime","lyricVisibility","setLyricText","tlyric","arr","temp","entries","key","min","sec","sort","setLyricShow","setLyricHide","setLyricToggle","LrcSelector","visibilityState","maskVisibility","searchVisibility","contextMenuVisibility","dialogDownloadVideoVisibility","dialogHomeOrderVisibility","dialogShareVisibility","dialogShareWXVisibility","dialogUploadAvatarVisibility","dialogCreatePlaylistVisibility","dialogUnSubscriptionVisibility","artistId","popupStatus","avatar","maskState","contextMenuX","contextMenuY","contextMenuTotal","contextMenuType","contextMenuItemId","contextMenuItem","contextMenuSechma","contextMenuShareLink","setContextMenuShow","setContextMenuShareLink","setSearchShow","setDialogShareShow","setDialogShareWXShow","setDialogUploadAvatarShow","setDialogDownloadVideoShow","setDialogCreatePlaylistShow","setDialogUnSubscriptionShow","setDialogHomeOrderShow","setDialogReset","setPopupLetterToggle","setPopupPlaylistToggle","maskSelector","mask","listFilter","map","playCount","cover","artists","briefDesc","title","creator","userId","userName","handleInit","firstArea","topArea","hot","wy","first","top","Promise","all","apiMVAll","order","limit","apiMVExclusiveRcmd","apiMVFirst","area","apiTopMV","data","timestamp","console","log","handleChangeFirstArea","handleChangeTopArea","MVListSelector","mvlist","keywords","count","setKeywords","setSearchCount","setHistory","remove","delHistory","clearHistory","searchSelector","search","defaultOrder","theme","custom","font","globalLrcVisibility","setTheme","setFont","setCustom","setHomeOrder","setGlobalLrcToggle","setGlobalLrcShow","setGlobalLrcHide","settingSelector","settings","handlePrevInit","groupList","categoryList","apiVideoGroupList","apiVideoCategoryList","handleAddList","videoList","apiVideoGroup","apiVideoTimelineRecommend","datas","vid","coverUrl","durationms","playTime","duration","initStatus","setVideoListInit","setVideoListId","VideoListSelector","videolist","volume","beforeMuted","setVolume","setVolumePlusTen","newVolume","setVolumeSubTen","setBeforeMuted","volumeSelector","api","base","endpoints","build","getCountriesCodeList","query","getLogout","mutation","getLoginQRKey","getLoginQRCheck","body","url","method","useGetCountriesCodeListQuery","useGetLogoutMutation","useGetLoginQRCheckMutation","getArtistDetail","providesTags","error","getSimiArtist","getArtistAlbum","getArtistTopSong","getArtistDesc","getArtistMV","postArtistSub","invalidatesTags","useGetArtistDetailQuery","useGetSimiArtistQuery","useGetArtistAlbumQuery","useGetArtistTopSongQuery","useGetArtistDescQuery","useGetArtistMVMutation","usePostArtistSubMutation","args","baseQuery","fetchBaseQuery","API_URL","printHttpError","extraOptions","meta","status","request","Number","is","code","Error","message","httpStatus","path","window","location","reload","localStorage","clear","baseQueryWithIntercept","cookie","Get","blockText","baseQueryWithRetry","retry","maxRetries","createApi","reducerPath","tagTypes","getCommentVideo","getCommentMusic","getCommentMV","getCommentEvent","useGetCommentVideoQuery","useGetCommentMusicQuery","useGetCommentMVQuery","useGetCommentEventQuery","getRecommendSongs","useGetRecommendSongsQuery","getArtistList","getTopListDetail","getTopListArtist","useGetArtistListMutation","useGetTopListDetailQuery","getTopSong","getTopAlbum","getAlbumNew","useGetTopSongQuery","useGetTopAlbumQuery","useGetAlbumNewQuery","getRecommendResource","getBanner","getPersonalizedPrivatecontent","getPersonalizedNewsong","getPersonalizedMV","getPersonalizedDJProgram","getPlaylistHighqualityTags","getPlaylistHot","getPlaylistCatList","getTopPlaylistHighquality","getTopPlaylist","useGetBannerQuery","useGetRecommendResourceQuery","useGetPersonalizedPrivatecontentQuery","useGetPersonalizedNewsongQuery","useGetPersonalizedMVQuery","useGetPersonalizedDJProgramQuery","useGetPlaylistHotQuery","useGetPlaylistCatListQuery","useGetTopPlaylistQuery","useGetPlaylistHighqualityTagsQuery","useGetTopPlaylistHighqualityMutation","getDJBanner","getDJCategoryRecommend","getDJCateList","getDJPersonalizeRecommend","getDJRadioHot","useGetDJBannerQuery","useGetDJCategoryRecommendQuery","useGetDJCateListQuery","useGetDJRadioHotQuery","useGetDJPersonalizeRecommendQuery","getHotTopic","getTopicDetail","getEvent","getTopicDetailEventHot","useGetHotTopicQuery","useGetTopicDetailQuery","useGetEventMutation","useGetTopicDetailEventHotQuery","getSimiSong","useGetSimiSongQuery","getRelatedAllVideo","getVideoUrl","getVideoDetail","getVideoDetailInfo","useGetRelatedAllVideoQuery","useGetVideoUrlQuery","useGetVideoDetailQuery","useGetVideoDetailInfoQuery","getPlaylistDetail","getCommentPlaylist","useGetPlaylistDetailQuery","useGetCommentPlaylistQuery","getCloudSearch","getSearchMultimatch","getSearchSuggest","getSearchHotDetail","useGetCloudSearchMutation","useGetSearchMultimatchQuery","useGetSearchSuggestQuery","useGetSearchHotDetailQuery","getSongUrl","getSongDetail","getLyric","getPersonalFM","useGetSongUrlMutation","useGetLyricMutation","useGetSongDetailMutation","useGetPersonalFMMutation","getMVSubList","getTopicSubList","getArtistSubList","getAlbumSubList","getDJSublist","useGetAlbumSubListQuery","useGetArtistSubListQuery","useGetMVSubListQuery","useGetTopicSubListQuery","useGetDJSublistQuery","getUserCloud","getDailySignIn","getSignInProgress","getUserDetail","getUserAccount","postUserUpdate","getUserEvent","getUserSubCount","getUserPlaylist","getUserBinding","getUserRecord","getUserFolloweds","postFollow","useGetDailySignInMutation","useGetUserCloudQuery","useGetUserDetailQuery","useGetUserAccountQuery","usePostUserUpdateMutation","useGetUserEventMutation","useGetSignInProgressQuery","useGetUserBindingQuery","useGetUserSubCountQuery","useGetUserRecordQuery","useGetUserPlaylistQuery","useGetUserFollowedsQuery","usePostFollowMutation","root","requireContext","require","keys","mod","__esModule","default","persistConfig","version","storage","timeout","whitelist","preloadedState","__STATE__","persistedReducer","persistReducer","combineReducers","rootReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","devTools","NODE_ENV","persistor","persistStore","Set","value","Remove"],"sourceRoot":""}