{"version":3,"file":"Exclusive.01c2f979.js","mappings":"2NAkBA,mBACE,IAAQA,GAAWC,EAAAA,EAAAA,cAAXD,OACFE,GAAWC,EAAAA,EAAAA,KACjB,GAA8BC,EAAAA,EAAAA,IAAe,qBAAGC,aAAxCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAEVC,GAASC,EAAAA,EAAAA,QAAO,GAKhBC,GAAWD,EAAAA,EAAAA,QAAuB,MAClCE,GAAcF,EAAAA,EAAAA,QAAuB,MAc3C,OAbAG,EAAAA,EAAAA,IANmB,YACjBC,EAAAA,EAAAA,eAAc,CAACC,MAHH,GAGUN,OAAAA,IACtBA,EAAOO,SAJK,KAQUL,EAAWC,IACnCK,EAAAA,EAAAA,YAAU,WACO,SAAXhB,EACFE,GAASe,EAAAA,EAAAA,4BACDP,EAAUK,UAClBL,EAAUK,QAAQR,UAAYA,KAE/B,KACHW,EAAAA,EAAAA,kBAAgB,kBAAM,WAAM,MAC1BhB,GAASiB,EAAAA,EAAAA,uBAAsB,CAC7BZ,WAAW,UAAAG,EAAUK,eAAV,eAAmBR,YAAa,QAE5C,IAED,yBAAKa,UAAU,2BAA2BC,IAAKX,GAC7C,yBAAKU,UAAU,YACb,yBAAKA,UAAU,WAAf,QACA,kBAAC,IAAD,CAAQA,UAAU,aAAaE,MAAM,cAAcC,IAAI,eAEjDjB,EAAOkB,KAAI,SAACC,GAAD,OACT,yBAAKC,IAAKD,EAAKE,QACb,kBAAC,EAAAC,KAAD,CACEC,GAAIJ,EAAKK,QAAL,wBAAgCL,EAAKK,SAArC,qBAA+DL,EAAKM,IACxEX,UAAU,gDAEV,yBAAKY,QAAS,OAAQC,IAAKR,EAAKE,OAAQP,UAAU,kDAAkDc,IAAI,KACxG,0BAAMd,UAAU,uHACd,kBAAC,EAAAe,eAAD,CAAgBC,KAAM,GAAIhB,UAAU,mBAGxC,yBAAKA,UAAU,QACb,kBAAC,EAAAQ,KAAD,CAAMC,GAAE,qBAAgBJ,EAAKM,IAAMX,UAAU,+BAC1CK,EAAKY,YAOpB,yBAAKhB,IAAKV","sources":["webpack://wyy/./src/pages/Exclusive/Exclusive.tsx"],"sourcesContent":["import React, {\n  RefObject,\n  useEffect, useLayoutEffect, useRef, useState,\n} from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { IconPlayerPlay } from '@tabler/icons';\nimport { apiPersonalizedPrivatecontentList } from '@/api';\nimport useInfinite from '@/hooks/useInfinite';\nimport {useAppDispatch, useAppSelector} from '@/reducers/hooks'\nimport {\n  ResultProps,\n  setExclusiveResultAdd,\n  setExclusiveResultEmpty,\n  setExclusiveScrollTop,\n  handleGetData,\n} from '@/reducers/exclusive/slice'\nimport Resize from '@/components/ResizeObserver';\n\nexport default () => {\n  const { action } = useHistory();\n  const dispatch = useAppDispatch();\n  const { result, scrollTop } = useAppSelector(({ exclusive }) => exclusive);\n  const limit = 60;\n  const offset = useRef(0);\n  const handleInit = () => {\n    handleGetData({limit, offset})\n    offset.current += limit\n  };\n  const DomScroll= useRef<HTMLDivElement>(null);\n  const DomObserver = useRef<HTMLDivElement>(null);\n  useInfinite(handleInit, DomScroll, DomObserver);\n  useEffect(() => {\n    if (action === 'PUSH') {\n      dispatch(setExclusiveResultEmpty());\n    } else if(DomScroll.current) {\n      DomScroll.current.scrollTop = scrollTop;\n    }\n  }, []);\n  useLayoutEffect(() => () => {\n    dispatch(setExclusiveScrollTop({\n      scrollTop: DomScroll.current?.scrollTop || 0,\n    }));\n  }, []);\n  return (\n    <div className=\"overflow-auto p-8 h-full\" ref={DomScroll}>\n      <div className=\"ui_w1100\">\n        <div className=\"h1 pb-4\">独家放送</div>\n        <Resize className=\"grid gap-5\" small=\"grid-cols-2\" big=\"grid-cols-3\">\n          {\n              result.map((item: ResultProps) => (\n                <div key={item.picUrl}>\n                  <Link\n                    to={item.videoId ? `/player/video/${item.videoId}` : `/player/mv/${item.id}`}\n                    className=\"flex relative rounded border overflow-hidden\"\n                  >\n                    <img loading={'lazy'} src={item.picUrl} className=\"w-full h-full object-cover ui_aspect-ratio-24/9\" alt=\"\" />\n                    <span className=\"ico absolute top-2 left-2 rounded-full text-white w-6 h-6 bg-black bg-opacity-40 flex-center border border-gray-200\">\n                      <IconPlayerPlay size={14} className=\"fill-current\" />\n                    </span>\n                  </Link>\n                  <div className=\"mt-2\">\n                    <Link to={`/player/mv/${item.id}`} className=\"text-sm ui_text_black_hover\">\n                      {item.name}\n                    </Link>\n                  </div>\n                </div>\n              ))\n            }\n        </Resize>\n        <div ref={DomObserver} />\n      </div>\n    </div>\n  );\n};\n"],"names":["action","useHistory","dispatch","useAppDispatch","useAppSelector","exclusive","result","scrollTop","offset","useRef","DomScroll","DomObserver","useInfinite","handleGetData","limit","current","useEffect","setExclusiveResultEmpty","useLayoutEffect","setExclusiveScrollTop","className","ref","small","big","map","item","key","picUrl","Link","to","videoId","id","loading","src","alt","IconPlayerPlay","size","name"],"sourceRoot":""}