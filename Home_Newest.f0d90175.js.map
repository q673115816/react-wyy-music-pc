{"version":3,"file":"Home_Newest.f0d90175.js","mappings":"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","sources":["webpack://wyy/./src/pages/Home/Newest/Song.tsx","webpack://wyy/./src/pages/Home/Newest/Album.tsx","webpack://wyy/./src/pages/Home/Newest/index.tsx"],"sourcesContent":["import React, {\n  useEffect, memo, useState, useMemo,\n} from 'react';\nimport dayjs from 'dayjs';\nimport {\n  NavLink, Link,\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { apiTopSong, apiSongUrl } from '@/api';\nimport { setTopSong } from '@/reducers/home/slice';\nimport { IconPlayerPlay, IconFolderPlus } from '@tabler/icons';\nimport classNames from 'classnames';\nimport DomTags from '@/components/Tags';\n\nconst navs = {\n  全部: 0,\n  华语: 7,\n  欧美: 96,\n  韩国: 16,\n  日本: 8,\n};\n\nconst DomItem = memo(({ item, index }) => (\n  <div\n    className={classNames('item h-20 py-2.5 flex items-center px-8 text-sm', { 'bg-gray-50': index % 2 === 0 })}\n  >\n    <span className=\"ranking text-gray-300 w-8\">\n      {String(index + 1).padStart(2, '0')}\n    </span>\n    <button\n      type=\"button\"\n      className=\"cover w-16 relative rounded overflow-hidden\"\n    >\n      <img\n        loading={`lazy`}\n        className=\"ui_aspect-ratio-1/1\"\n        src={`${item.album.blurPicUrl}?param=100y100`}\n        alt=\"\"\n      />\n      <i className=\"ico absolute w-6 h-6 m-auto flex-center inset-0 ui_themeColor bg-white bg-opacity-90 rounded-full\">\n        <IconPlayerPlay size={14} className=\"fill-current\" />\n      </i>\n    </button>\n    <span className=\"name px-2.5 w-0 flex items-center flex-auto\">\n      <div className=\"truncate\">{item.name}</div>\n      {/* <div className=\"TAG\">SQ</div> */}\n      <DomTags item={item} mv={item.mvid} />\n    </span>\n    <span className=\"artists truncate\">\n      {\n        item.artists.map((artist, index) => (\n          <span key={artist.id}>\n            {index > 0 && ' / '}\n            <Link to={`/artist/${artist.id}`} className=\"ui_text_gray_hover\">\n              {artist.name}\n            </Link>\n          </span>\n        ))\n      }\n    </span>\n    <span className=\"album truncate\">\n      <Link to={`/playlist/album/${item.album.id}`} className=\"ui_text_gray_hover\">\n        {item.album.name}\n      </Link>\n\n    </span>\n    <span className=\"duration text-gray-500 text-right\">\n      {dayjs(item.duration).format('mm:ss')}\n    </span>\n  </div>\n));\n\nconst DomMain = memo(({ type }) => {\n  const [data, setData] = useState([]);\n  const handleInit = async () => {\n    try {\n      const { data } = await apiTopSong({ type: navs[type] });\n      setData(data);\n      // dispatch(setTopSong(data));\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n\n  useEffect(() => {\n    handleInit();\n  }, [type]);\n  return (\n    <div className=\"domHome_newest_song_list\">\n      {data.map((item, index) => (\n        <DomItem key={item.id} item={item} index={index} />\n      ))}\n    </div>\n  );\n});\n\nexport default memo(({ type }) => (\n  <>\n    <div className=\"domHome_newest_sub_nav\">\n      {Object.keys(navs).map((item) => (\n        <NavLink\n          key={item}\n          className=\"domHome_newest_sub_nav_link\"\n          activeClassName=\"on\"\n          to={`/home/newest/song/${item}`}\n        >\n          {item}\n        </NavLink>\n      ))}\n      <div className=\"domHome_newest_sub_control_center space-x-2\">\n        <button type=\"button\" className=\"playAll flex-center ui_theme_bg_color text-white rounded-full px-2 py-0.5\">\n          <IconPlayerPlay size={16} stroke={1} className=\"fill-current\" />\n          播放全部\n        </button>\n        <button type=\"button\" className=\"subAll flex-center rounded-full border px-2 py-0.5\">\n          <IconFolderPlus size={16} stroke={1} />\n          收藏全部\n        </button>\n      </div>\n    </div>\n    <DomMain type={type} />\n  </>\n));\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { apiTopAlbum, apiAlbumNew } from '@/api';\nimport { setTopAlbum } from '@/reducers/home/slice';\nimport classNames from 'classnames';\n\nimport { limit } from '@/common/config';\n\nconst arealist = [\n  {\n    name: '全部',\n    code: 'ALL',\n  },\n  {\n    name: '华语',\n    code: 'ZH',\n  },\n  {\n    name: '欧美',\n    code: 'EA',\n  },\n  {\n    name: '韩国',\n    code: 'KR',\n  },\n  {\n    name: '日本',\n    code: 'JP',\n  },\n];\n\nconst AlbumItem = ({ item }) => (\n  <div className=\"item\">\n    <div className=\"cover shadow rounded overflow-hidden\">\n      <Link to={`/playlist/album/${item.id}`}>\n        <img loading={'lazy'} className=\"ui_containimg\" src={`${item.blurPicUrl}?param=200y200`} alt=\"\" />\n      </Link>\n    </div>\n    <div className=\"name text-sm ui_ellipse mt-2\">\n      <Link to={`/playlist/album/${item.id}`}>\n        <span className=\"ui_text_black_hover\">\n          {item.name}\n        </span>\n        &nbsp;\n        {item.alias.length > 0\n          && (\n          <span className=\"text-gray-400\">\n            (\n              {item.alias}\n            )\n          </span>\n          )}\n        {\n          item.transNames\n          && (\n          <span>\n              {item.transNames}\n          </span>\n          )\n          }\n      </Link>\n    </div>\n    <div className=\"artist mt-2\">\n      <Link to={`/artist/${item.artist.id}`} key={item.artist.id} className=\"ui_text_gray_hover\">\n        {item.artist.name}\n      </Link>\n    </div>\n  </div>\n);\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { monthData = [], weekData = [] } = useSelector(({ home }) => home.newest);\n  // console.log(monthData, weekData);\n  const [area, setArea] = useState('ALL');\n  const [type, setType] = useState('new');\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [month, setMonth] = useState(new Date().getMonth());\n  const [offset, setOffset] = useState(0);\n\n  const [showtype, setShowtype] = useState('RECOMMEND');\n  const handleGetData = async () => {\n    try {\n      if (showtype === 'RECOMMEND') {\n        const { monthData, weekData } = await apiTopAlbum({\n          area,\n          type,\n          limit,\n          offset,\n        });\n        dispatch(setTopAlbum({ monthData: monthData.slice(0, 564), weekData }));\n      } else {\n        const { albums: monthData, weekData } = await apiAlbumNew({\n          area,\n          type,\n          limit,\n          offset,\n        });\n        dispatch(setTopAlbum({ monthData, weekData }));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    handleGetData();\n  }, [area, type, showtype]);\n  return (\n    <>\n      <div className=\"domHome_newest_sub_nav\">\n        {\n          arealist.map((item) => (\n            <button\n              type=\"button\"\n              key={item.name}\n              className={classNames('domHome_newest_sub_nav_link', { on: area === item.code })}\n              onClick={() => setArea(item.code)}\n            >\n              {item.name}\n            </button>\n          ))\n        }\n        <div className=\"domHome_newest_sub_control_center\">\n          <button\n            type=\"button\"\n            className={classNames('showtype', { on: showtype === 'RECOMMEND' })}\n            onClick={() => setShowtype('RECOMMEND')}\n          >\n            推荐\n          </button>\n          <button\n            type=\"button\"\n            className={classNames('showtype', { on: showtype === 'ALL' })}\n            onClick={() => setShowtype('ALL')}\n          >\n            全部\n          </button>\n        </div>\n      </div>\n      <div className=\"domHome_newest_album_list\">\n        {\n          area === 'ALL' && showtype !== 'ALL' && weekData.length > 0\n          && (\n            <div className=\"domHome_newest_album_sublist\">\n              <div className=\"sign\">\n                本周\n                <br />\n                新碟\n              </div>\n              <div className=\"list grid grid-cols-4 gap-5\">\n                {weekData.map((item) => (\n                  <AlbumItem item={item} key={item.id} />\n                ))}\n              </div>\n            </div>\n          )\n        }\n        {\n          monthData.length > 0\n          && (\n            <div className=\"domHome_newest_album_sublist\">\n              <div className=\"sign\">\n                本月\n                <br />\n                新碟\n              </div>\n              <div className=\"list grid grid-cols-4 gap-5\">\n                {\n                  monthData.map((item) => (\n                    <AlbumItem item={item} key={item.id} />\n                  ))\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    </>\n  );\n};\n","import React, { memo } from 'react';\nimport {\n  NavLink, Switch, Redirect, Route,\n} from 'react-router-dom';\nimport './style.scss';\n\nimport useMemoParams from '@/hooks/useMemoParams';\nimport DomSong from './Song';\nimport DomAlbum from './Album';\n\nexport default memo(() => (\n  <div className=\"domHome_content overflow-auto max-h-full flex-auto\">\n    <div className=\"domHome_newest\">\n      <div className=\"domHome_newest_nav\">\n        <NavLink\n          className=\"domHome_newest_nav_link\"\n          activeClassName=\"on\"\n          to=\"/home/newest/song\"\n        >\n          新歌速递\n        </NavLink>\n        <NavLink\n          className=\"domHome_newest_nav_link\"\n          activeClassName=\"on\"\n          to=\"/home/newest/album\"\n        >\n          新碟上架\n        </NavLink>\n      </div>\n      <Switch>\n        <Route path=\"/home/newest/song/:type\">\n          {useMemoParams(DomSong)}\n        </Route>\n        <Route path=\"/home/newest/album\">\n          <DomAlbum />\n        </Route>\n        <Redirect to=\"/home/newest/song/全部\" />\n      </Switch>\n    </div>\n  </div>\n));\n"],"names":["navs","全部","华语","欧美","韩国","日本","DomItem","memo","item","index","className","classNames","String","padStart","type","loading","src","album","blurPicUrl","alt","IconPlayerPlay","size","name","mv","mvid","artists","map","artist","key","id","Link","to","dayjs","duration","format","DomMain","useState","data","setData","handleInit","apiTopSong","console","warn","useEffect","Object","keys","NavLink","activeClassName","stroke","IconFolderPlus","arealist","code","AlbumItem","alias","length","transNames","dispatch","useDispatch","useSelector","home","newest","monthData","weekData","area","setArea","Date","getFullYear","getMonth","offset","showtype","setShowtype","handleGetData","apiTopAlbum","limit","setTopAlbum","slice","apiAlbumNew","albums","log","on","onClick","Switch","Route","path","useMemoParams","DomSong","Redirect"],"sourceRoot":""}