{"version":3,"file":"Artist.86dd34c4.js","mappings":"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","sources":["webpack://wyy/./src/pages/Artist/layouts/Grid.tsx","webpack://wyy/./src/pages/Artist/layouts/List.tsx","webpack://wyy/./src/pages/Artist/layouts/Column.tsx","webpack://wyy/./src/pages/Artist/Album.tsx","webpack://wyy/./src/pages/Artist/MV.tsx","webpack://wyy/./src/pages/Artist/Detail.tsx","webpack://wyy/./src/pages/Artist/Similarity.tsx","webpack://wyy/./src/pages/Artist/components/Header.tsx","webpack://wyy/./src/pages/Artist/index.tsx"],"sourcesContent":["import React, { memo } from 'react';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport { IconPlayerPlay } from '@tabler/icons';\n\nexport default memo(({ hotAlbums = [] }) => (\n  <div className=\"grid grid-cols-4 p-8 gap-x-20 gap-y-5\">\n    {hotAlbums.map((item) => (\n      <div className=\"item\" key={item.id}>\n        <div className=\"cover rounded overflow-hidden relative group\">\n          <Link to={`/playlist/album/${item.id}`}>\n            <img className=\"\" src={`${item.picUrl}?param=200y200`} alt=\"\" />\n          </Link>\n          <button type=\"button\" className=\"absolute inset-0 ui_themeColor flex-center m-auto w-10 h-10 rounded-full bg-white bg-opacity-90 opacity-0 group-hover:opacity-100 transition-opacity duration-500\">\n            <IconPlayerPlay size={20} className=\"fill-current\" />\n          </button>\n        </div>\n        <div className=\"name text-sm mt-2\">\n          <Link to={`/playlist/album/${item.id}`} className=\"ui_ellipse\">\n            <span className=\"ui_text_black_hover\">\n              {item.name}\n            </span>\n            {\n              item.alias.map((alia) => (\n                <span className=\"text-gray-500\" key={alia}>\n                  {`（${alia}）`}\n                </span>\n              ))\n            }\n          </Link>\n        </div>\n        <div className=\"text-gray-400 mt-2\">\n          {dayjs(item.publishTime).format('YYYY-MM-DD')}\n        </div>\n      </div>\n    ))}\n  </div>\n));\n","import React, { memo } from 'react';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport default memo(({ hotAlbums = [] }) => (\n  <div className=\"list pt-4\">\n    {\n      hotAlbums.map((item, index) => (\n        <div className={classNames('list_item hover:bg-gray-100', { 'bg-gray-50': index % 2 === 0 })} key={item.id}>\n          <Link className=\"cover\" to={`/playlist/album/${item.id}`}>\n            <img className=\"ui_containimg\" src={`${item.picUrl}?param=100y100`} alt=\"\" />\n          </Link>\n          <Link\n            className=\"name truncate\"\n            to={`/playlist/album/${item.id}`}\n          >\n            {item.name}\n                      &nbsp;\n            {\n              item.alias?.length > 0\n            && (\n            <span className=\"text-gray-400\">\n              (\n              {item.alias.map((alia) => alia)}\n              )\n            </span>\n            )\n            }\n          </Link>\n          <span className=\"size text-gray-400\">\n            {item.size}\n            首\n          </span>\n          <span className=\"publishTime text-gray-400\">\n            发行时间：\n            {dayjs(item.publishTime).format('YYYY-MM-DD')}\n          </span>\n        </div>\n      ))\n    }\n  </div>\n));\n","import React, { memo, useEffect, useState } from 'react';\nimport {\n\n  IconPlayerPlay,\n  IconFolderPlus,\n  IconDownload,\n} from '@tabler/icons';\n\nimport dayjs from 'dayjs';\nimport classNames from 'classnames';\nimport DomTags from '@/components/Tags';\nimport DomHeart from '@/components/Table/Heart';\nimport { apiArtistTopSong } from '@/api';\n\nexport default memo(({ hotAlbums = [], id }) => {\n  console.log('artist_column');\n  const [top50, setTop50] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const handleInit = async () => {\n    try {\n      const { songs } = await apiArtistTopSong({\n        id,\n      });\n      setTop50(songs);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"column p-8\">\n      <div className=\"column_item\">\n        <div className=\"cover\">\n          <div className=\"Top50 flex-none bg-black bg-opacity-50 flex-center flex-col font-bold rounded w-full h-full text-white\">\n            <div className=\"text-4xl\">\n              TOP\n            </div>\n            <div className=\"text-6xl\">50</div>\n          </div>\n        </div>\n        <div className=\"aside flex-auto ml-20 w-0\">\n          <div className=\"flex\">\n            <span className=\"font-bold text-base\">\n              热门50首\n            </span>\n            <div className=\"flex items-center\">\n              <button type=\"button\" className=\"flex-none border rounded-full flex-center mx-3 p-1\">\n                <IconPlayerPlay size={10} className=\"fill-current\" />\n              </button>\n              <span className=\"text-gray-300\">\n                |\n              </span>\n              <button type=\"button\" className=\"mx-3\">\n                <IconFolderPlus size={20} stroke={1} />\n              </button>\n            </div>\n          </div>\n          <div className=\"list mt-2\">\n            {\n            top50.slice(0, limit).map((item, index) => (\n              <div\n                className={classNames('item hover:bg-gray-100 focus:outline-none focus:bg-gray-200', { 'bg-gray-50': index % 2 === 0 })}\n                tabIndex=\"2\"\n                key={item.id}\n              >\n                <div className=\"index flex-none text-right text-gray-400\">\n                  {\n                    String(index + 1).padStart(2, 0)\n                  }\n                </div>\n                <div className=\"heart flex-none text-center\">\n                  <DomHeart id={item.id} />\n                </div>\n                <div className=\"download flex-none text-center\">\n                  <button type=\"button\" className=\"text-gray-500 hover:text-black\">\n                    <IconDownload size={16} stroke={1} />\n                  </button>\n                </div>\n                <div className=\"name flex-auto flex flex-auto min-w-0 px-2.5\">\n                  <span\n                    className=\"truncate\"\n                    title={`${item.name}(${item.alia.map((alia) => alia)})`}\n                  >\n                    {item.name}\n                              &nbsp;\n                    <span className=\"text-gray-400\">\n                      {item.alia.map((alia) => alia)}\n                    </span>\n                  </span>\n                  <DomTags item={item} className=\"flex-none\" />\n                </div>\n                <div className=\"duration text-gray-400 flex-none\">\n                  {dayjs(item.dt).format('mm:ss')}\n                </div>\n              </div>\n            ))\n          }\n            {\n            limit === 10 && top50.length > 10\n            && (\n              <button\n                type=\"button\"\n                className=\"seeMore\"\n                onClick={() => setLimit(50)}\n              >\n                查看全部\n                {top50.length}\n                首 &gt;\n              </button>\n            )\n          }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { useState, useEffect, memo } from 'react';\nimport {\n  IconLayoutGrid,\n  IconList,\n  IconLayout,\n} from '@tabler/icons';\nimport classNames from 'classnames';\nimport { apiArtistAlbum } from '@/api';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setArtistLayout } from '@/reducers/artist/slice';\nimport DomGrid from './layouts/Grid';\nimport DomList from './layouts/List';\nimport DomColumn from './layouts/Column';\n\nconst layouts = {\n  grid: { Ico: IconLayoutGrid, View: DomGrid },\n  list: { Ico: IconList, View: DomList },\n  column: { Ico: IconLayout, View: DomColumn },\n};\n\nconst layoutsEntries = Object.entries(layouts);\n\nexport default memo(({ id }) => {\n  const dispatch = useDispatch();\n  const { layout } = useSelector(({ artist }) => artist);\n  const [album, setAlbum] = useState({ hotAlbums: [], more: null });\n\n  const handleInit = async () => {\n    try {\n      const { hotAlbums, more } = await apiArtistAlbum({\n        id,\n      });\n\n      setAlbum({ hotAlbums, more });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"domArtist_section relative\">\n      <div className=\"absolute right-8 -translate-y-full bottom-full actions ml-auto space-x-0.5 flex rounded-sm overflow-hidden\">\n        {\n          layoutsEntries.map(([view, { Ico }]) => (\n            <button\n              key={view}\n              type=\"button\"\n              className={classNames('px-1.5 py-0.5 bg-gray-200', 'handle', view === layout && 'bg-gray-300 text-white')}\n              onClick={() => dispatch(setArtistLayout({ layout: view }))}\n            >\n              <Ico size={14} stroke={1} />\n            </button>\n          ))\n        }\n      </div>\n      <div className=\"domArtist_section_layout\">\n        {\n          ((View, hotAlbums) => <View hotAlbums={hotAlbums} id={id} />)(layouts[layout].View, album.hotAlbums)\n        }\n      </div>\n    </div>\n  );\n});\n","import React, {\n  useState, useRef, memo,\n} from 'react';\nimport { apiArtistMV } from '@/api';\nimport useInfinite from '@/hooks/useInfinite';\nimport DomGridVideo from '@/components/GridVideo';\n\nexport default memo(({ id }) => {\n  const [MVs, setMVs] = useState([]);\n  // const [hasMore, setHasMore] = useState(true);\n  const more = useRef(true);\n  const offset = useRef(0);\n  const domScroll = useRef();\n  const domObserver = useRef();\n  const limit = 24;\n  const handleInit = async () => {\n    if (!more.current) return;\n    try {\n      const { mvs, time, hasMore } = await apiArtistMV({\n        id,\n        limit,\n        offset: offset.current,\n      });\n      offset.current += limit;\n      more.current = hasMore;\n      setMVs((prev) => [...prev, ...mvs.map(({\n        id, imgurl, duration, name, playCount,\n      }) => ({\n        id,\n        duration,\n        playCount,\n        cover: imgurl,\n        title: name,\n      }))]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useInfinite(handleInit, domScroll, domObserver);\n\n  return (\n    <div className=\"domArtist_section p-8\">\n      <DomGridVideo list={MVs} />\n      <div ref={domObserver} />\n    </div>\n  );\n});\n","import React, { memo, useEffect, useState } from 'react';\nimport { apiArtistDesc } from '@/api';\n\nexport default memo(({ id }) => {\n  const [desc, setDesc] = useState({});\n  const handleInit = async () => {\n    try {\n      const desc = await apiArtistDesc({\n        id,\n      });\n      setDesc(desc);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"domArtist_section p-8 leading-8 text-sm select-text\">\n      <div className=\"domArtist_subtitle font-bold\">\n        简介\n      </div>\n      <div className=\"domArtist_article text-gray-500\" style={{ textIndent: '2em' }}>\n        {desc.briefDesc}\n      </div>\n      <br />\n      <br />\n      {\n        desc.introduction?.map((introduction) => (\n          <div key={introduction.ti} className=\"select-text\">\n            <div className=\"domArtist_subtitle font-bold\">\n              {introduction.ti}\n            </div>\n            <div className=\"domArtist_article text-gray-500 whitespace-pre-line\">\n              {introduction.txt}\n            </div>\n          </div>\n        ))\n      }\n    </div>\n  );\n});\n","import React, { useState, useEffect, memo } from 'react';\nimport { apiSimiArtist } from '@/api';\nimport { Link } from 'react-router-dom';\nimport DomLoading from '@/components/Loading';\n\nexport default memo(({ id }) => {\n  const [simiArtists, setSimiArtists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const handleInit = async () => {\n    try {\n      const { artists } = await apiSimiArtist({\n        id,\n      });\n      setSimiArtists(artists);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center pt-12\">\n        <DomLoading />\n      </div>\n    );\n  }\n  if (simiArtists.length === 0) {\n    return (\n      <div className=\"text-center text-gray-400 text-sm pt-16\">没有相似歌手</div>\n    );\n  }\n  return (\n    <div className=\"domArtist_section p-8\">\n      <div className=\"grid grid-cols-5 gap-5\">\n        {simiArtists.map((item) => (\n          <div className=\"item\" key={item.id}>\n            <div className=\"cover rounded overflow-hidden border\">\n              <Link to={`/artist/${item.id}`} className=\"\">\n                <img loading={`lazy`} className=\"ui_aspect-ratio-1/1\" src={`${item.picUrl}?param=200y200`} alt=\"\" />\n              </Link>\n            </div>\n            <div className=\"footer text-sm mt-2\">\n              <Link to={`/artist/${item.id}`} className=\"\">\n                {item.name}\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n});\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from 'react';\nimport {\n  IconFolderPlus,\n  IconCheckbox,\n} from '@tabler/icons';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setDialogUnSubscriptionShow, setToast } from '@/reducers/mask/slice';\nimport {\n  apiArtistDetail, apiArtistSub,\n} from '@/api';\nimport { useRefreshArtistSublist } from '@/hooks/useHelp';\n\nexport default memo(({ id }) => {\n  const { artistSublist } = useSelector(({ account }) => account);\n\n  const isSub = useMemo(() => artistSublist.find((item) => item.id === Number(id)), [artistSublist, id]);\n  const dispatch = useDispatch();\n  const [detail, setDetail] = useState({});\n  const handleInit = async () => {\n    try {\n      const { data: detail } = await apiArtistDetail({\n        id,\n      });\n      setDetail(detail);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleUnSubscription = () => {\n    dispatch(setDialogUnSubscriptionShow({\n      artistId: id,\n    }));\n  };\n\n  const handleSubscription = async () => {\n    try {\n      await apiArtistSub({\n        id,\n        t: 1,\n      });\n      dispatch(setToast('收藏成功！'));\n      useRefreshArtistSublist(dispatch);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleToggleSub = async () => {\n    isSub ? handleUnSubscription() : await handleSubscription();\n  };\n\n  useEffect(() => {\n    handleInit();\n  }, [id]);\n  return (\n    <div className=\"domArtist_header flex p-8\">\n      <div className=\"avatar border overflow-hidden rounded\">\n        <img src={`${detail.artist?.cover}?param=200y200`} alt=\"\" />\n      </div>\n      <div className=\"content flex-auto px-5\">\n        <div className=\"name h1 select-text\">{detail.artist?.name}</div>\n        <div className=\"enname my-3 select-text\">{detail.alias?.map((alia) => alia)}</div>\n        <div className=\"actions mt-3 flex space-x-2\">\n          <button\n            onClick={handleToggleSub}\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex items-center text-sm\"\n          >\n            {isSub ? (\n              <>\n                <IconCheckbox size={20} stroke={1} />\n                已收藏\n              </>\n            ) : (\n              <>\n                <IconFolderPlus size={20} stroke={1} />\n                收藏\n              </>\n            )}\n          </button>\n          {\n            detail.user\n            && (\n              <Link\n                to={`/user/${detail.user?.userId}`}\n                className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full flex items-center text-sm\"\n              >\n                个人主页\n              </Link>\n            )\n          }\n        </div>\n        <div className=\"info mt-5 space-x-5\">\n          <span className=\"size\">\n            单曲数:\n            {detail.artist?.musicSize}\n          </span>\n          <span className=\"size\">\n            专辑数:\n            {detail.artist?.albumSize}\n          </span>\n          <span className=\"size\">\n            MV数:\n            {detail.artist?.mvSize}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { memo, useState } from 'react';\n\nimport classNames from 'classnames';\n\nimport './style.scss';\n\nimport DomAlbum from './Album';\nimport DomMV from './MV';\nimport DomDetail from './Detail';\nimport DomSimilarity from './Similarity';\nimport DomHeader from './components/Header';\n\nconst nav = {\n  专辑: DomAlbum,\n  MV: DomMV,\n  歌手详情: DomDetail,\n  相似歌手: DomSimilarity,\n};\n\nexport default memo(({ id }) => {\n  // if (!/^\\d*$/.test(id)) {\n  //   return <Redirect to=\"/\" />;\n  // }\n  const [tab, setTab] = useState('专辑');\n  return (\n    <div className=\"domArtist overflow-auto max-h-full flex-auto\">\n      <DomHeader id={id} />\n      <div className=\"domArtist_main\">\n        <div className=\"domArtist_nav flex mx-8\">\n          <div className=\"flex space-x-4 text-sm\">\n            {\n              Object.keys(nav).map((item) => (\n                <button\n                  key={item}\n                  onClick={() => setTab(item)}\n                  type=\"button\"\n                  className={classNames('domArtist_nav_link', tab === item && 'font-bold ui_underline')}\n                >\n                  {item}\n                </button>\n              ))\n            }\n          </div>\n          <div className=\"domArtist_album_layout ml-auto\" />\n        </div>\n        {/* <DomSimilarity id={id} /> */}\n        {\n          ((Dom, id) => <Dom id={id} />)(nav[tab], id)\n        }\n\n      </div>\n    </div>\n  );\n});\n"],"names":["memo","hotAlbums","className","map","item","key","id","Link","to","src","picUrl","alt","type","IconPlayerPlay","size","name","alias","alia","dayjs","publishTime","format","index","classNames","length","console","log","useState","top50","setTop50","limit","setLimit","handleInit","apiArtistTopSong","songs","useEffect","IconFolderPlus","stroke","slice","tabIndex","String","padStart","IconDownload","title","dt","onClick","layouts","grid","Ico","IconLayoutGrid","View","DomGrid","list","IconList","DomList","column","IconLayout","DomColumn","layoutsEntries","Object","entries","dispatch","useDispatch","layout","useSelector","artist","more","album","setAlbum","apiArtistAlbum","view","setArtistLayout","MVs","setMVs","useRef","offset","domScroll","domObserver","current","apiArtistMV","mvs","time","hasMore","prev","imgurl","duration","playCount","cover","useInfinite","ref","desc","setDesc","apiArtistDesc","style","textIndent","briefDesc","introduction","ti","txt","simiArtists","setSimiArtists","loading","setLoading","apiSimiArtist","artists","artistSublist","account","isSub","useMemo","find","Number","detail","setDetail","apiArtistDetail","data","handleSubscription","apiArtistSub","t","setToast","useRefreshArtistSublist","handleToggleSub","setDialogUnSubscriptionShow","artistId","IconCheckbox","user","userId","musicSize","albumSize","mvSize","nav","专辑","DomAlbum","MV","DomMV","歌手详情","DomDetail","相似歌手","DomSimilarity","tab","setTab","keys","Dom"],"sourceRoot":""}