{"version":3,"file":"Look.ee98d41e.js","mappings":"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","sources":["webpack://wyy/./src/pages/Look/Home/List.tsx","webpack://wyy/./src/pages/Look/socket.ts","webpack://wyy/./src/pages/Look/Home/Home.tsx","webpack://wyy/./src/pages/Look/Content.ts","webpack://wyy/./src/pages/Look/Live/Live.tsx","webpack://wyy/./src/pages/Look/Room/Room.tsx","webpack://wyy/./src/pages/Look/Base.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { iList } from \"./types\";\n\nexport default memo<{ list: iList }>(({ list }) => {\n  const { pathname } = useLocation();\n  return (\n    <div className={`grid grid-cols-3 gap-5`}>\n      {list.map(([key, options]) => (\n        <div key={key}>\n          <Link to={`${pathname}/${key}`}>\n            <img\n              className={`ui_aspect-ratio-16/9 cursor-pointer`}\n              loading={`lazy`}\n              src={options.banner}\n              alt=\"\"\n            />\n          </Link>\n          <Link to={`${pathname}/${key}`} className={`cursor-pointer`}>\n            {options.title}\n          </Link>\n          <div>\n            <Link to={`/`}>{options.user}</Link>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n});\n","import io from \"socket.io-client\";\n\nexport const LIVE_URL = process.env.LIVE_URL;\n\nconst socket = io(LIVE_URL, {\n  autoConnect: false,\n});\n\nsocket.on(\"create-success\", (data) => {\n  console.log(data);\n});\n\nsocket.on(\"join-success\", (data) => {\n  console.log(data);\n});\n\nsocket.on(\"disconnect-success\", (data) => {\n  console.log(data);\n});\n\nexport default socket;\n","import React, {\n  useState,\n  memo,\n  useRef,\n  useEffect,\n  useCallback,\n  MouseEventHandler,\n} from \"react\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport Loading from \"@/components/Loading\";\nimport Rea from \"react-error-boundary\";\nimport socket from \"../socket\";\nimport { iList } from \"./types\";\nimport LiveList from \"./List\";\nimport { LIVE_URL } from \"../socket\";\n\nexport default memo(() => {\n  const [size, setSize] = useState(20);\n  const DomScroll = useRef(null);\n  const DomObserver = useRef(null);\n  const [list, setList] = useState<iList>([]);\n  // useInfinite(() => { setSize((prev) => prev + 20); }, DomScroll, DomObserver);\n\n  const { data, error, isLoading, isSuccess, status } = useQuery(\n    \"look\",\n    async () => {\n      const { data } = await axios\n        .get(`${LIVE_URL}/list`)\n        .then((res) => res.data);\n      return data;\n    }\n  );\n\n  return (\n    <div className=\"domLook overflow-auto max-h-full flex-auto\" ref={DomScroll}>\n      <div className=\"domLook_header ui_header\">\n        <span className=\"title h1\">LOOK直播</span>\n        <span className=\"text-gray-400 slogan ml-2\">在这里，看见音乐</span>\n        <Link\n          to={({ pathname }) => `${pathname}/my`}\n          className=\"ml-2 py-1 px-2 rounded bg-red-500 text-white\"\n        >\n          我的直播\n        </Link>\n        <a href=\"https://look.163.com/hot\" className=\"text-gray-400 ml-auto\">\n          更多 &gt;\n        </a>\n      </div>\n      <div className=\"px-8\">\n        {isLoading && (\n          <div className={`pt-48 flex-center`}>\n            <Loading />\n          </div>\n        )}\n        {isSuccess && <LiveList list={data} />}\n\n        <div ref={DomObserver} />\n      </div>\n    </div>\n  );\n});\n","import socket from \"./socket\";\n\nexport const SOCKET_CONNECT = \"SOCKET_CONNECT\";\nexport const SOCKET_DISCONNECT = \"SOCKET_DISCONNECT\";\nexport const SOCKET_DESKTOP_START = \"SOCKET_DESKTOP_START\";\nexport const SOCKET_DESKTOP_END = \"SOCKET_DESKTOP_END\";\nexport const SOCKET_USER_START = \"SOCKET_USER_START\";\nexport const SOCKET_USER_END = \"SOCKET_USER_END\";\nexport const SOCKET_PUSH_START = \"SOCKET_PUSH_START\";\nexport const SOCKET_PUSH_END = \"SOCKET_PUSH_END\";\n\nexport interface LookState {\n  status: {\n    connect: boolean;\n    deskTop: boolean;\n    user: boolean;\n    push: boolean;\n  };\n}\n\nexport const LookReducer = (draft: LookState, action: any) => {\n  switch (action.type) {\n    case SOCKET_CONNECT:\n      socket.connect();\n      draft.status.connect = true;\n      return;\n    case SOCKET_DISCONNECT:\n      socket.disconnect();\n      draft.status.connect = false;\n      return;\n    case SOCKET_DESKTOP_START:\n      draft.status.deskTop = true;\n      return;\n    case SOCKET_DESKTOP_END:\n      draft.status.deskTop = false;\n      return;\n    case SOCKET_USER_START:\n      draft.status.user = true;\n      return;\n    case SOCKET_USER_END:\n      draft.status.user = false;\n      return;\n    case SOCKET_PUSH_START:\n      socket.emit(\"create\", {\n        user: \"user\",\n        title: \"title\",\n      });\n      draft.status.push = true;\n      return;\n    case SOCKET_PUSH_END:\n      draft.status.push = false;\n      return;\n    default:\n      return draft;\n  }\n};\n\nexport const LookInitialState: LookState = {\n  status: {\n    connect: false,\n    deskTop: false,\n    user: false,\n    push: false,\n  },\n};\n","import React, {\n  FC,\n  memo,\n  MouseEventHandler,\n  ReactNode,\n  useContext,\n  useRef,\n} from \"react\";\nimport classnames from \"classnames\";\nimport useLoginStatus, { handleLoginStatus } from \"@/hooks/useLoginStatus\";\nimport { LookContent } from \"@/pages/Look/Base\";\nimport {\n  SOCKET_DESKTOP_END,\n  SOCKET_DESKTOP_START,\n  SOCKET_PUSH_END,\n  SOCKET_PUSH_START,\n  SOCKET_USER_END,\n  SOCKET_USER_START,\n} from \"../Content\";\n\n// 以下代码是从网上找的\n//=========================================================================================\n//如果返回的是false说明当前操作系统是手机端，如果返回的是true则说明当前的操作系统是电脑端\n\nfunction IsPC() {\n  const userAgentInfo = navigator.userAgent;\n  const Agents = [\n    \"Android\",\n    \"iPhone\",\n    \"SymbianOS\",\n    \"Windows Phone\",\n    \"iPad\",\n    \"iPod\",\n  ];\n  let flag = true;\n\n  for (let v = 0; v < Agents.length; v++) {\n    if (userAgentInfo.indexOf(Agents[v]) > 0) {\n      flag = false;\n      break;\n    }\n  }\n\n  return flag;\n}\n\n//如果返回true 则说明是Android  false是ios\nfunction is_android() {\n  const u = navigator.userAgent,\n    app = navigator.appVersion;\n  const isAndroid = u.indexOf(\"Android\") > -1 || u.indexOf(\"Linux\") > -1; //g\n  const isIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios终端\n  if (isAndroid) {\n    //这个是安卓操作系统\n    return true;\n  }\n\n  if (isIOS) {\n    //这个是ios操作系统\n    return false;\n  }\n}\n\ninterface iButtonProps {\n  onClick: MouseEventHandler;\n  status: boolean;\n}\n\nconst Button: FC<iButtonProps> = memo(({ onClick, children, status }) => {\n  return (\n    <button\n      type={\"button\"}\n      className={classnames(\n        `text-white rounded p-2`,\n        status ? \"bg-red-500\" : \"bg-blue-500\"\n      )}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n});\n\n/*\n * TODO\n *  1.信令系统\n *  2.摄像头叠加桌面，如基本直播\n * */\nexport default memo(() => {\n  const {\n    lookReducer: { status, socket },\n    lookDispatch,\n  } = useContext(LookContent);\n  const RefDeskTop = useRef<HTMLVideoElement>(null);\n  const RefDeskTopStream = useRef<MediaStream>(null);\n  const RefUser = useRef<HTMLVideoElement>(null);\n  const handleDeskTop: MouseEventHandler = () => {\n    if (status.deskTop)\n      handleMediaClose(RefDeskTop.current as HTMLVideoElement, () => {\n        lookDispatch({ type: SOCKET_DESKTOP_END });\n      });\n    else\n      handleMediaOpen(\n        RefDeskTop.current as HTMLVideoElement,\n        \"getDisplayMedia\",\n        () => {\n          lookDispatch({ type: SOCKET_DESKTOP_START });\n        }\n      );\n  };\n\n  const handleMediaOpen = (\n    ref: HTMLVideoElement,\n    targetFunction: \"getDisplayMedia\" | \"getUserMedia\",\n    success: () => void\n  ) => {\n    let stream = null;\n    const mediaStreamConstraints = {\n      video: true,\n      audio: true,\n    };\n\n    function gotDeskTopMediaStream(mediaStream: MediaStream) {\n      ref.srcObject = mediaStream;\n      // deskTopStream = mediaStream;\n      success && success();\n    }\n\n    navigator.mediaDevices[targetFunction](mediaStreamConstraints)\n      .then(gotDeskTopMediaStream)\n      .catch((err) => console.log(err));\n  };\n\n  const handleMediaClose = (ref: HTMLVideoElement, success: () => void) => {\n    const tracks = (ref.srcObject as MediaStream)?.getTracks();\n    tracks.forEach((track) => track.stop());\n    ref.srcObject = null;\n    success && success();\n  };\n\n  const handleUser: MouseEventHandler = () => {\n    if (status.user)\n      handleMediaClose(RefUser.current as HTMLVideoElement, () => {\n        lookDispatch({ type: SOCKET_USER_END });\n      });\n    else\n      handleMediaOpen(\n        RefUser.current as HTMLVideoElement,\n        \"getUserMedia\",\n        () => {\n          lookDispatch({ type: SOCKET_USER_START });\n        }\n      );\n  };\n\n  const handleSend: MouseEventHandler = () => {\n    if (status.push) handlePushClose();\n    else handlePushOpen();\n  };\n\n  const handlePushOpen = () => {\n    lookDispatch({ type: SOCKET_PUSH_START });\n    const pc = new RTCPeerConnection({});\n    pc.addEventListener(\"icecandidate\", (e) => {\n      const peerConnection = e.target;\n      const iceCandidate = e.candidate;\n\n      if (iceCandidate) {\n        const newIceCandidate = new RTCIceCandidate(iceCandidate);\n        const otherPeer;\n      }\n    });\n  };\n  const handlePushClose = () => {\n    lookDispatch({ type: SOCKET_PUSH_END });\n  };\n\n  return (\n    <div className={`w-full h-full p-8 overflow-auto`}>\n      <div className={`flex`}>\n        <Button onClick={handleDeskTop} status={status.deskTop}>\n          桌面共享开关\n        </Button>\n        <Button onClick={handleUser} status={status.user}>\n          摄像头开关\n        </Button>\n        <Button onClick={handleSend} status={status.push}>\n          推送开关\n        </Button>\n      </div>\n      <div className={`flex flex-col`}>\n        <div className={``}>\n          <video className={`w-full`} ref={RefDeskTop} autoPlay playsInline />\n        </div>\n        <div className={\"\"}>\n          <video className={`w-full`} ref={RefUser} autoPlay playsInline />\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\n\nexport default memo(() => {\n  return <div className={`p-8`}>hello world</div>;\n});\n","import React, { memo, useEffect, createContext } from \"react\";\nimport { useImmerReducer } from \"use-immer\";\nimport { Switch, Route } from \"react-router-dom\";\nimport adapter from \"webrtc-adapter\";\n\nimport Home from \"./Home\";\nimport Live from \"./Live\";\nimport Room from \"./Room\";\nimport { useAppDispatch } from \"@/reducers/hooks\";\nimport {\n  LookInitialState,\n  LookReducer,\n  SOCKET_CONNECT,\n  SOCKET_DISCONNECT,\n} from \"./Content\";\n\nexport const LookContent = createContext<any>(null);\n\nexport default memo(() => {\n  const dispatch = useAppDispatch();\n  const [lookReducer, lookDispatch] = useImmerReducer(\n    LookReducer,\n    LookInitialState\n  );\n  useEffect(() => {\n    lookDispatch({ type: SOCKET_CONNECT });\n    return () => {\n      lookDispatch({ type: SOCKET_DISCONNECT });\n    };\n  }, []);\n  return (\n    <LookContent.Provider value={{ lookReducer, lookDispatch }}>\n      <Switch>\n        <Route path={`/look`} exact component={Home} />\n        <Route path={`/look/my`} component={Live} />\n        <Route path={`/look/:id(\\\\d*)`} component={Room} />\n      </Switch>\n    </LookContent.Provider>\n  );\n});\n"],"names":["memo","list","pathname","useLocation","className","map","key","options","Link","to","loading","src","banner","alt","title","user","LIVE_URL","process","socket","io","autoConnect","on","data","console","log","useState","DomScroll","useRef","DomObserver","useQuery","axios","then","res","isLoading","error","isSuccess","status","ref","href","Loading","SOCKET_CONNECT","SOCKET_DISCONNECT","SOCKET_DESKTOP_START","SOCKET_DESKTOP_END","SOCKET_USER_START","SOCKET_USER_END","SOCKET_PUSH_START","SOCKET_PUSH_END","LookReducer","draft","action","type","connect","deskTop","push","LookInitialState","Button","onClick","children","classnames","useContext","LookContent","lookReducer","lookDispatch","RefDeskTop","RefUser","handleMediaOpen","targetFunction","success","navigator","mediaDevices","video","audio","mediaStream","srcObject","catch","err","handleMediaClose","getTracks","forEach","track","stop","current","RTCPeerConnection","addEventListener","e","target","iceCandidate","candidate","RTCIceCandidate","autoPlay","playsInline","createContext","useAppDispatch","useImmerReducer","useEffect","Provider","value","Switch","Route","path","exact","component","Home","Live","Room"],"sourceRoot":""}