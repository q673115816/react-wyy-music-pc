{"version":3,"file":"Playlist.bc6f4841.js","mappings":"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","sources":["webpack://wyy/./src/pages/Playlist/components/Header.tsx","webpack://wyy/./src/pages/Playlist/Music.tsx","webpack://wyy/./src/pages/Playlist/components/Playlist.tsx","webpack://wyy/./src/pages/Playlist/components/Comments.tsx","webpack://wyy/./src/pages/Playlist/components/Subscribers/index.tsx","webpack://wyy/./src/pages/Playlist/Dj.tsx","webpack://wyy/./src/pages/Playlist/Album.tsx","webpack://wyy/./src/pages/Playlist/index.tsx"],"sourcesContent":["import React, { useState, memo } from 'react';\nimport classNames from 'classnames';\nimport DomGroupPlay from '@/components/GroupPlay';\nimport { transPlayCount, transSubscribeCount } from '@/common/utils';\nimport {\n  IconPlayerPlay,\n  IconFolderPlus,\n  IconScreenShare,\n  IconCloudDownload,\n  IconPlus,\n  IconCheckbox,\n  IconCaretUp,\n  IconCaretDown,\n} from '@tabler/icons';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\n\nconst DomT = memo(({ tags = [] }) => {\n  if (tags.length === 0) return null;\n  return (\n    <div className=\"tags\">\n      <span>标签：</span>\n      {tags.map((tag, index) => (\n        <span key={tag}>\n          {index > 0 && ' / '}\n          <Link to={`/home/playlist/${tag}`} className=\"tag ui_link\">\n            {tag}\n          </Link>\n        </span>\n      ))}\n    </div>\n  );\n});\n\nconst DomDescription = memo(({ description = '' }) => {\n  if (!description) return null;\n  const [open, setOpen] = useState(false);\n  const descriptionList = description.match(/^.*$/mg);\n  return (\n    <div className=\"relative pr-5\">\n      <div className=\"whitespace-pre-line leading-6\">\n        简介：\n        <span className={classNames('text-gray-500 select-text', !open && 'truncate inline-block max-w-xs align-bottom')}>\n          {open\n            ? description\n            : descriptionList[0]}\n        </span>\n        <button type=\"button\" onClick={() => setOpen(!open)} className=\"absolute top-0 right-0 text-gray-500\">\n          {\n            open\n              ? <IconCaretUp size={16} className=\"fill-current\" />\n              : <IconCaretDown size={16} className=\"fill-current\" />\n          }\n        </button>\n      </div>\n    </div>\n  );\n});\n\nexport default memo(({ data = {}, handleSub, songs }) =>\n  // console.log('playlist_music_header');\n  (\n    <div className=\"domPlaylistDetail_header p-8 flex\">\n      <div className=\"cover border rounded overflow-hidden flex-none w-92 h-92\">\n        <img\n          className=\"w-full h-full\"\n          src={`${data.playlist.coverImgUrl}?param=200y200`}\n          alt=\"\"\n        />\n      </div>\n      <div className=\"info flex-auto w-0 ml-5\">\n        <div className=\"name flex items-center\">\n          <span className=\"type text-red-500 border border-current px-1 py-0.5 rounded mr-2 leading-none\">歌单</span>\n          <span className=\"h1 select-text\">\n            {data.playlist.name || '我喜欢的音乐'}\n          </span>\n        </div>\n        <div className=\"creator flex items-center mt-2\">\n          <Link\n            to={`/user/${data.playlist.creator?.userId}`}\n            className=\"avator w-6 h-6 rounded-full overflow-hidden mr-2\"\n          >\n            <img\n              className=\"\"\n              src={`${data.playlist.creator?.avatarUrl}?param=50y50`}\n              alt=\"\"\n            />\n          </Link>\n\n          <Link to={`/user/${data.playlist.creator?.userId}`} className=\"nickname ui_link mr-2\">\n            {data.playlist.creator?.nickname}\n          </Link>\n\n          <span className=\"text-gray-500\">\n            {dayjs(data.playlist.createTime || Date.now()).format('YYYY-MM-DD')}\n            创建\n          </span>\n        </div>\n        <div className=\"actions flex space-x-2 mt-2\">\n          <DomGroupPlay playlist={songs} />\n          <button\n            onClick={() => handleSub(data.playlist.subscribed)}\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\"\n          >\n            {\n              data.playlist.subscribed\n                ? <IconCheckbox size={20} stroke={1} />\n                : <IconFolderPlus size={20} stroke={1} />\n            }\n              &nbsp;\n            {\n              data.playlist.subscribed\n                ? '已收藏'\n                : '收藏'\n            }\n            {`(${transSubscribeCount(data.playlist.subscribedCount)})`}\n          </button>\n          <button type=\"button\" className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\">\n            <IconScreenShare size={20} stroke={1} />\n            &nbsp;\n            分享\n            {`(${transSubscribeCount(data.playlist.shareCount)})`}\n          </button>\n          <button type=\"button\" className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full btn\">\n            <IconCloudDownload size={20} stroke={1} />\n            &nbsp;\n            下载全部\n          </button>\n\n        </div>\n        <div className=\"space-y-1 mt-2\">\n          <DomT tags={data.playlist.tags} />\n\n          <div>\n            <span className=\"mr-3\">\n              歌曲：\n              <span className=\"text-gray-500\">\n                {data.playlist.trackCount}\n              </span>\n            </span>\n            <span>\n              播放：\n              <span className=\"text-gray-500\">\n                {transPlayCount(data.playlist.playCount)}\n              </span>\n            </span>\n          </div>\n          <DomDescription description={data.playlist.description} />\n        </div>\n      </div>\n    </div>\n  ));\n","import React, {\n  useEffect, useState, memo, useCallback,\n} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { apiPlaylistDetail, apiPlaylistSubscribe, apiSongDetail } from '@/api';\n\nimport { setToast } from '@/reducers/mask/actions';\nimport classNames from 'classnames';\nimport DomLoading from '@/components/Loading';\n\nimport produce from 'immer';\nimport DomHeader from './components/Header';\nimport DomPlaylist from './components/Playlist';\nimport DomComments from './components/Comments';\nimport DomSubscribers from './components/Subscribers';\n\nconst navs = [\n  ['歌曲列表', 'playlist'],\n  ['评论', 'comments'],\n  ['收藏者', 'subscribers'],\n];\n\nconst subpages = {\n  playlist: DomPlaylist,\n  comments: DomComments,\n  subscribers: DomSubscribers,\n};\n\nexport default memo(({ id }) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n  const [songs, setSongs] = useState([]);\n  const [data, setData] = useState({});\n  // const [privileges, setPrivileges] = useState([]);\n  const [status, setStatus] = useState('playlist');\n  const handleInit = async () => {\n    try {\n      const data = await apiPlaylistDetail({\n        id,\n      });\n      setData(produce((draft) => {\n        for (const key in data) {\n          draft[key] = data[key];\n        }\n      }));\n      if (data.playlist.trackCount > 0) {\n        const { songs } = await apiSongDetail({\n          ids: data.playlist.trackIds.map(({ id }) => id).join(','),\n        });\n        setSongs(songs);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // TODO\n  const handleSub = useCallback(async (isSub) => {\n    try {\n      const { code } = await apiPlaylistSubscribe({\n        t: isSub ? 2 : 1,\n        id,\n      });\n      if (code === 200) {\n        dispatch(setToast(isSub ? '取消收藏成功！' : '收藏成功！'));\n        setData(produce((draft) => {\n          draft.playlist.subscribed = !isSub;\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    handleInit();\n  }, [id]);\n\n  if (loading) return <div className=\"w-full h-full flex-center\"><DomLoading /></div>;\n  return (\n    <div className=\"domPlaylistDetail overflow-auto h-full\">\n      <DomHeader {...{ data, handleSub, songs }} />\n      <div className=\"domPlaylistDetail_main mt-4\">\n        <div className=\"space-x-4 flex items-baseline px-8\">\n          {\n            navs.map(([nav, code]) => (\n              <button\n                type=\"button\"\n                className={classNames('text-sm', status === code && 'font-bold ui_underline')}\n                key={nav}\n                onClick={() => setStatus(code)}\n              >\n                {nav}\n                {nav === '评论' && `(${data.playlist.commentCount})`}\n              </button>\n            ))\n          }\n        </div>\n        <div>\n          {\n            ((SubPage, params) => <SubPage {...params} />)(subpages[status], { id, songs })\n          }\n          {/* <DomMain id={id} status={status} songs={songs} /> */}\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\n\nimport DomMenuCreate from '@/components/MenuCreate';\nimport DomRank from '@/components/Table/Rank';\nimport DomHeart from '@/components/Table/Heart';\nimport DomDownload from '@/components/Table/Download';\nimport DomName from '@/components/Table/Name';\nimport DomArtists from '@/components/Table/Artists';\nimport DomAlbum from '@/components/Table/Album';\n\nexport default ({ songs = [] }) => {\n  // console.log('playlist_music_playlist');\n  if (songs.length === 0) {\n    return (\n      <div className=\"pt-16 text-center text-sm text-gray-400\">暂无音乐</div>\n    );\n  }\n  return (\n    <div style={{ '--ui_grid_template': '36px / 30px 30px 30px 36% 4fr 6fr 2fr' }} className=\"mt-4\">\n      <div className=\"grid ui_grid_template pl-8\">\n        <div />\n        <div />\n        <div />\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">音乐标题</div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">歌手</div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">专辑</div>\n        <div className=\"px-1 flex items-center hover:bg-gray-200 text-gray-500\">时长</div>\n      </div>\n      {songs.map((item, index) => (\n        <DomMenuCreate\n          schema={[\n            ['评论',\n              '播放',\n              '下一首播放'],\n            ['收藏到歌单',\n              '分享',\n              '复制链接',\n              '不感兴趣',\n              '下载'],\n          ]}\n          type=\"song\"\n          item={item}\n          key={item.id}\n        >\n          <div\n            tabIndex=\"2\"\n            className={classNames('grid items-center focus:outline-none focus:bg-gray-200 hover:bg-gray-100 ui_grid_template pl-8', index % 2 === 0 && 'bg-gray-50')}\n          >\n            <div className=\"px-1\">\n              <DomRank index={index} id={item.id} />\n            </div>\n            <div className=\"px-1\">\n              <DomHeart id={item.id} />\n            </div>\n            <div className=\"px-1\">\n              <DomDownload />\n            </div>\n            <DomName className=\"px-1\" item={item} />\n            <DomArtists className=\"px-1\" artists={item.ar} />\n            <DomAlbum className=\"px-1\" name={item.al.name} id={item.al.id} />\n            <div className=\"text-gray-500 px-1\">\n              {dayjs(item.dt).format('mm:ss')}\n            </div>\n          </div>\n        </DomMenuCreate>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport DomCommentsList from '@/components/CommentsList';\nimport DomWrite from '@/components/Write';\nimport { apiCommentPlaylist } from '@/api';\n\nexport default ({ id }) => {\n  const [comments, setComments] = useState({});\n  const handleInit = async () => {\n    try {\n      const comments = await apiCommentPlaylist({\n        id,\n      });\n      setComments(comments);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"px-8\">\n      {/* TODO */}\n      <div className=\"pt-10 pb-10\">\n        <DomWrite />\n      </div>\n      <DomCommentsList comments={comments} />\n    </div>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { apiPlaylistSubscribers } from '@/api';\nimport {\n  Link, useLocation,\n} from 'react-router-dom';\nimport './style.scss';\nimport DomGender from '@/components/Gender';\nimport DomPage from '@/components/Page';\n\nexport default ({ id }) => {\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const limit = 60;\n  const [page, setPage] = useState(1);\n  const handleInit = async () => {\n    try {\n      const { subscribers, total } = await apiPlaylistSubscribers({\n        id,\n        limit,\n        offset: (page - 1) * limit,\n      });\n      setData(subscribers);\n      setTotal(total);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, [page]);\n  return (\n    <div className=\"px-8\">\n      <div className=\"domPlaylistDetail_subscribers flex justify-between flex-wrap\">\n        {data.map((item) => (\n          <div key={item.userId} className=\"item flex mt-6\">\n            <Link\n              to={`/user/${item.userId}`}\n              className=\"avatar border rounded-full overflow-hidden\"\n            >\n              <img src={`${item.avatarUrl}?param=100y100`} alt=\"\" />\n            </Link>\n            <div className=\"ml-2 flex-auto w-0 flex flex-col justify-center\">\n              <div className=\"text-sm flex items-center\">\n                <Link to={`/user/${item.userId}`}>\n                  {item.nickname}\n                </Link>\n              &nbsp;\n                <DomGender gender={item.gender} size={16} />\n              </div>\n              <div className=\"mt-2 truncate\">{item.signature}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <DomPage\n        total={Math.ceil(total / limit)}\n        page={page}\n        func={setPage}\n      />\n    </div>\n  );\n};\n","import React, { memo, useEffect } from 'react';\nimport { apiDjDetail } from '@/api';\n\nexport default memo(({ id }) => {\n  const handleInit = async () => {\n    try {\n      const { } = await apiDjDetail({\n        rid: id,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    handleInit();\n  }, []);\n  return (\n    <div className=\"domPlaylistDetail\">\n      <div className=\"domPlaylistDetail_header\">{}</div>\n      <div className=\"domPlaylistDetail_main\">TODO</div>\n    </div>\n  );\n});\n","import React, { useState } from 'react';\n\nexport default () => {\n  const [data] = useState(0);\n  return (\n    <div>TOTO</div>\n  );\n};\n","import React, { memo } from 'react';\nimport {\n  Switch, Route,\n} from 'react-router-dom';\nimport useMemoParams from '@/hooks/useMemoParams';\nimport PlaylistMusic from './Music';\nimport PlaylistDj from './Dj';\nimport PlaylistAlbum from './Album';\n\nexport default memo(() => (\n  <Switch>\n    <Route path=\"/playlist/music/:id\">\n      {useMemoParams(PlaylistMusic)}\n    </Route>\n    <Route path=\"/playlist/dj/:id\">\n      {useMemoParams(PlaylistDj)}\n    </Route>\n    <Route path=\"/playlist/album/:id\">\n      {useMemoParams(PlaylistAlbum)}\n    </Route>\n    <Route path=\"/playlist\">\n      <PlaylistMusic />\n    </Route>\n  </Switch>\n));\n"],"names":["DomT","memo","tags","length","className","map","tag","index","key","Link","to","DomDescription","description","useState","open","setOpen","descriptionList","match","classNames","type","onClick","IconCaretUp","size","IconCaretDown","data","handleSub","songs","src","playlist","coverImgUrl","alt","name","creator","userId","avatarUrl","nickname","dayjs","createTime","Date","now","format","subscribed","IconCheckbox","stroke","IconFolderPlus","transSubscribeCount","subscribedCount","IconScreenShare","shareCount","IconCloudDownload","trackCount","transPlayCount","playCount","navs","subpages","style","item","schema","id","tabIndex","artists","ar","al","dt","comments","setComments","handleInit","apiCommentPlaylist","console","log","useEffect","subscribers","setData","total","setTotal","page","setPage","apiPlaylistSubscribers","limit","offset","gender","signature","Math","ceil","func","SubPage","params","dispatch","useDispatch","loading","setLoading","setSongs","status","setStatus","apiPlaylistDetail","produce","draft","apiSongDetail","ids","trackIds","join","useCallback","isSub","apiPlaylistSubscribe","t","code","setToast","nav","commentCount","apiDjDetail","rid","Switch","Route","path","useMemoParams","PlaylistMusic","PlaylistDj","PlaylistAlbum"],"sourceRoot":""}