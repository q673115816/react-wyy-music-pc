{"version":3,"sources":["webpack://wyy/./src/pages/Lrc/index.tsx"],"names":["DomLrc","memo","currentTime","useSelector","audio","lrcList","lrc","RefScroll","useRef","RefCurrentLine","useState","currentLineIndex","setCurrentLineIndex","useEffect","findIndex","time","current","scrollTop","offsetTop","clientHeight","style","scrollBehavior","className","ref","length","map","index","word","key","classNames","trim","DomRight","simiSong","song","id","type","src","album","picUrl","alt","name","alias","artists","artist","dispatch","useDispatch","listen","useHistory","currentSong","lyricVisibility","running","memoId","useMemo","loading","setLoading","setSimiSong","comments","setComments","page","setPage","handleLeftInit","apiCommentMusic","limit","offset","console","log","handleRightInit","apiSimiSong","songs","handleInit","route","setLyricHide","width","transform","zIndex","on","al","stroke","size","IconFolderPlus","IconCloudDownload","IconShare","ar","Link","to","height","more","total","Math","ceil","func"],"mappings":"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","file":"Lrc.411348ff.js","sourcesContent":["import React, {\n  memo, useEffect, useMemo, useState, useRef,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { apiCommentMusic, apiSimiSong } from '@/api';\nimport DomLoading from '@/components/Loading';\nimport DomPage from '@/components/Page';\nimport DomHeart from '@/components/Table/Heart';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  IconFolderPlus,\n  IconCloudDownload,\n  IconShare,\n} from '@tabler/icons';\nimport DomCommentsList from '@/components/CommentsList';\nimport './style.scss';\nimport classNames from 'classnames';\nimport { setLyricHide } from '@/reducers/lrc/actions';\n\nconst DomLrc = memo(() => {\n  const {\n    currentTime,\n  } = useSelector(({ audio }) => audio);\n  const { lrcList } = useSelector(({ lrc }) => lrc);\n  const RefScroll = useRef<HTMLDivElement>();\n  const RefCurrentLine = useRef();\n  const [currentLineIndex, setCurrentLineIndex] = useState(0);\n\n  useEffect(() => {\n    setCurrentLineIndex(\n      lrcList\n        .findIndex(({ time }) => time > currentTime) - 1,\n    );\n  }, [currentTime]);\n\n  useEffect(() => {\n    RefScroll.current.scrollTop = 0;\n  }, [lrcList]);\n\n  useEffect(() => {\n    if (RefCurrentLine?.current) {\n      RefScroll.current.scrollTop = RefCurrentLine.current.offsetTop - (RefScroll.current.clientHeight / 2);\n    }\n  }, [currentLineIndex]);\n  return (\n    <div\n      style={{ scrollBehavior: 'smooth' }}\n      className=\"whitespace-pre-line select-text text-center text-gray-500 space-y-2 overflow-auto overscroll-contain h-full pt-36\"\n      ref={RefScroll}\n    >\n\n      {lrcList.length ? lrcList\n        .map(({ time, word }, index) => (\n          <div\n            ref={currentLineIndex === index ? RefCurrentLine : null}\n            key={time}\n            className={classNames('leading-5', currentLineIndex === index && 'font-bold text-black')}\n          >\n            {word.trim()}\n            &nbsp;\n          </div>\n        )) : <div>纯音乐，请您欣赏</div>}\n    </div>\n  );\n});\n\nconst DomRight = ({ simiSong = [] }) => (\n  <div className=\"pb-4 relative\">\n    <div>播放来源：...</div>\n    <div className=\"font-bold py-3 text-sm\">包含这首歌的歌单</div>\n    <div>\n      { }\n    </div>\n    <div className=\"font-bold py-3 text-sm\">相似歌曲</div>\n    <div>\n      {simiSong.map((song) => (\n        <button\n          key={song.id}\n          type=\"button\"\n          className=\"flex text-left w-full rounded hover:bg-gray-100 p-1.5 h-10\"\n        >\n          <div className=\"rounded relative overflow-hidden\">\n            <img src={`${song.album.picUrl}?param=30y30`} alt=\"\" />\n          </div>\n          <div className=\"w-0 flex-auto px-2 py-1 text-gray-600\">\n            <div className=\"truncate\">\n              {song.name}\n              <span className=\"text-gray-500\">{song.alias}</span>\n              &nbsp;\n              -\n              &nbsp;\n              {song.artists.map((artist) => artist.name)}\n            </div>\n          </div>\n        </button>\n      ))}\n    </div>\n    <div className=\"absolute pointer-events-none left-0 right-0 bottom-0 h-16 bg-gradient-to-t from-white to-transparent\" />\n  </div>\n);\n\nexport default memo(() => {\n  const dispatch = useDispatch();\n  const { listen } = useHistory();\n  const { currentSong } = useSelector(({ audio }) => audio);\n  const { lyricVisibility } = useSelector(({ lrc }) => lrc);\n  const { running } = useSelector(({ audio }) => audio);\n  const memoId = useMemo(() => currentSong.id, [currentSong]);\n  const [loading, setLoading] = useState(true);\n  const [simiSong, setSimiSong] = useState([]);\n  const [comments, setComments] = useState({});\n  const [page, setPage] = useState(1);\n  const limit = 20;\n  const handleLeftInit = async () => {\n    try {\n      const comments = await apiCommentMusic({\n        id: memoId,\n        limit,\n        offset: (page - 1) * limit,\n      });\n      setComments(comments);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleRightInit = async () => {\n    try {\n      const { songs } = await apiSimiSong({\n        id: memoId,\n      });\n      setSimiSong(songs);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleInit = async () => {\n    await handleLeftInit();\n    await handleRightInit();\n    setLoading(false);\n  };\n  useEffect(() => {\n    if (!lyricVisibility) return;\n    if (loading) {\n      handleInit();\n    } else {\n      handleLeftInit();\n    }\n  }, [lyricVisibility, page]);\n  useEffect(() => {\n    const unlisten = listen((route) => {\n      dispatch(setLyricHide());\n    });\n    return unlisten;\n  });\n\n  if (!lyricVisibility) return null;\n  return (\n    <div id=\"lrc\" className=\"absolute inset-x-0 z-10 overflow-hidden\">\n      <div className={classNames('w-full h-full bg-white overflow-auto transform')}>\n        <div className=\"lrc_inner m-auto\" style={{ width: 888 }}>\n          <div className=\"lrc_header flex justify-between\">\n            <div className=\"left\">\n              <div className=\"relative\">\n                <div\n                  id=\"stylus\"\n                  className=\"mt-16 mb-10 relative m-auto w-min duration-500 transition-transform z-10\"\n                  style={running ? { transform: 'rotate(40deg)' } : {}}\n                >\n                  <div className=\"point shadow relative transform -translate-y-1/2 rounded-full bg-gray-300 w-5 h-5 border-8 border-white bg-white\" style={{ zIndex: 2 }} />\n                  <div\n                    className=\"handle absolute top-0 left-1/2 shadow bg-white h-2 w-20 origin-top-left\"\n                    style={{ transform: 'rotate(45deg) translate(0, -50%)', zIndex: 1 }}\n                  >\n                    <div\n                      className=\" absolute left-full bg-white shadow w-12 h-2 origin-top-left\"\n                      style={{ transform: 'rotate(-45deg) translate(-10%, 0)' }}\n                    >\n                      <div className=\"shadow w-4 h-4 absolute left-full -top-1 bg-white\" />\n                    </div>\n                  </div>\n                </div>\n                <div className=\" rounded-full bg-gray-300 p-2.5 w-64 h-64\">\n                  <div className={classNames('flex-center rounded-full p-9', { on: running })} id=\"record\">\n                    <img className=\"rounded-full border-8 border-black\" src={currentSong.al.picUrl} alt=\"\" />\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex mt-4 justify-between\">\n                <DomHeart\n                  stroke=\"2\"\n                  id={memoId}\n                  size={24}\n                  className=\"w-10 h-10 flex-center rounded-full bg-gray-100 hover:bg-gray-200\"\n                />\n                <button type=\"button\" className=\"w-10 h-10 flex-center rounded-full bg-gray-100 hover:bg-gray-200\">\n                  <IconFolderPlus size={24} stroke={1} />\n                </button>\n                <button type=\"button\" className=\"w-10 h-10 flex-center rounded-full bg-gray-100 hover:bg-gray-200\">\n                  <IconCloudDownload size={24} stroke={1} />\n                </button>\n                <button type=\"button\" className=\"w-10 h-10 flex-center rounded-full bg-gray-100 hover:bg-gray-200\">\n                  <IconShare size={24} stroke={1} />\n                </button>\n              </div>\n            </div>\n            <div className=\"center overflow-auto pt-5\" style={{ width: 300 }}>\n              <div className=\"text-2xl text-center\">\n                {currentSong.name}\n              </div>\n              <div className=\"flex justify-center mt-2 whitespace-nowrap\">\n                <div className=\"truncate\">\n                  {currentSong.ar.map((artist) => (\n                    <Link key={artist.id} to={`/artist/${artist.id}`} className=\"ui_text_gray_hover\">\n                      {artist.name}\n                    </Link>\n                  ))}\n                </div>\n                  &nbsp;\n                -\n                  &nbsp;\n                <div className=\"truncate\">\n                  <Link to={`/playlist/album/${currentSong.al.id}`} className=\"ui_text_gray_hover\">\n                    {currentSong.al.name}\n                  </Link>\n                </div>\n              </div>\n              <div className=\"relative\">\n                <div className=\"relative mt-8\" style={{ height: 330 }}>\n                  <DomLrc />\n                </div>\n                <div className=\"absolute pointer-events-none left-0 right-0 top-0 h-6 bg-gradient-to-b from-white to-transparent\" />\n                <div className=\"absolute pointer-events-none left-0 right-0 bottom-0 h-6 bg-gradient-to-t from-white to-transparent\" />\n              </div>\n            </div>\n            <div className=\"right flex-none mt-28 h-72 overflow-auto\" style={{ width: 244 }}>\n              {\n                loading\n                  ? (\n                    <div className=\"flex justify-center\">\n                      <DomLoading />\n                    </div>\n                  )\n                  : <DomRight {...{ simiSong }} />\n              }\n            </div>\n          </div>\n          <div className=\"lrc_main mt-14 flex justify-center\">\n            <div style={{ width: 556 }}>\n              {\n                  loading\n                    ? (\n                      <div className=\"flex justify-center\">\n                        <DomLoading />\n                      </div>\n                    )\n                    : (\n                      <>\n                        <DomCommentsList comments={comments} more={memoId} type=\"song\" />\n                        <DomPage\n                        total={Math.ceil(comments.total / limit)}\n                        page={page}\n                        func={setPage} />\n                      </>\n                    )\n                }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n"],"sourceRoot":""}