{"version":3,"file":"Video.d207788f.js","mappings":"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","sources":["webpack://wyy/./src/features/Video/Video.tsx","webpack://wyy/./src/features/Video/VideoList/components/Select/Select.tsx","webpack://wyy/./src/features/Video/VideoList/index.tsx","webpack://wyy/./src/reducers/mvlist/slice.ts","webpack://wyy/./src/features/Video/MVList/index.tsx","webpack://wyy/./src/features/Video/Router.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport { NavLink, Routes, Navigate, Route, Outlet } from \"react-router-dom\";\nimport VideoList from \"./VideoList\";\nimport MVList from \"./MVList\";\n\nconst navs = [\n  [\"视频\", \"/video/videolist\"],\n  [\"MV\", \"/video/mvlist\"],\n];\n\nexport default memo(() => (\n  <div className=\"domVideoList flex flex-col h-full\">\n    <div className=\"domVideoList_header ui_header text-base space-x-4\">\n      {navs.map(([name, path]) => (\n        <NavLink\n          key={name}\n          className={({ isActive }) =>\n            isActive ? \"text-xl ui_underline font-bold\" : \"\"\n          }\n          to={path}\n        >\n          {name}\n        </NavLink>\n      ))}\n    </div>\n    <Outlet />\n  </div>\n));\n","import classNames from \"classnames\";\nimport { setVideoListId, VideoListSelector } from \"@/reducers/videolist/slice\";\nimport React, { memo, FC } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"@/reducers/hooks\";\nimport \"./style.scss\";\n\ninterface iProps {\n  id: number;\n}\n\nconst Select: FC<iProps> = ({ id }) => {\n  const dispatch = useAppDispatch();\n  const { groupList } = useAppSelector(VideoListSelector);\n  return (\n    <div className=\"group_select_box absolute top-100 p-5 bg-white overflow-auto shadow\">\n      <div className=\"border-b pb-2\">\n        <button\n          type=\"button\"\n          className={classNames(\n            \"group_select_check text-center rounded-full h-8 flex-center hover:ui_themeColor\",\n            id === 0 ? \"text-red-500 bg-red-50\" : \"\"\n          )}\n          onClick={() => dispatch(setVideoListId({ id: 0 }))}\n        >\n          全部视频\n        </button>\n      </div>\n      <div className=\"group_select_list grid grid-cols-6 gap-y-5 p-4\">\n        {groupList.map((item) => (\n          <button\n            type=\"button\"\n            className={classNames(\n              \"group_select_check text-center rounded-full h-8 flex-center hover:ui_themeColor\",\n              item.id === id ? \"text-red-500 bg-red-50\" : \"\"\n            )}\n            key={item.id}\n            onClick={() => dispatch(setVideoListId({ id: item.id }))}\n          >\n            {item.name}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Select);\n","import React, { memo, useEffect, useState, useRef, useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport DomGridVideo from \"@/components/GridVideo\";\nimport {\n  handleAddList,\n  handlePrevInit,\n  setVideoListId,\n  setVideoListInit,\n  Category,\n  VideoListSelector,\n} from \"@/reducers/videolist/slice\";\nimport { useAppSelector, useAppDispatch } from \"@/reducers/hooks\";\nimport DomLoading from \"@/components/Loading\";\nimport Select from \"./components/Select\";\n\nexport default memo(() => {\n  const dispatch = useAppDispatch();\n  const { id, initStatus, groupList, categoryList, videoList } =\n    useAppSelector(VideoListSelector);\n  const [groupListVisibility, setGroupListVisibility] = useState(false);\n  const currentNav = useMemo(\n    () =>\n      groupList.find((group) => group.id === Number(id))?.name || \"全部视频\",\n    [id]\n  );\n\n  const domScroll = useRef<HTMLDivElement>(null);\n  const domObserver = useRef<HTMLDivElement>(null);\n\n  useInfinite(() => dispatch(handleAddList(id)), domScroll, domObserver);\n\n  useEffect(() => {\n    dispatch(handlePrevInit());\n    return () => {\n      dispatch(setVideoListInit());\n    };\n  }, []);\n\n  useEffect(() => {\n    dispatch(setVideoListInit());\n  }, [id]);\n\n  return (\n    <div\n      className=\"domVideoList_content px-8 overflow-auto flex-auto\"\n      ref={domScroll}\n    >\n      <div className=\"video_sort_filter_bar flex items-center justify-between\">\n        <div className=\"group_select_wrap relative z-10\">\n          <button\n            type=\"button\"\n            className=\"group_select_button border rounded-full hover:bg-gray-100 text-sm\"\n            onClick={() => setGroupListVisibility(!groupListVisibility)}\n          >\n            {currentNav}\n            &gt;\n          </button>\n          {groupListVisibility && <Select id={id} />}\n        </div>\n        <div className=\"recommend_nav divide-x flex\">\n          {categoryList.map((item: Category) => (\n            <div key={item.id}>\n              <button\n                type=\"button\"\n                className={classNames(\n                  \"recommend_nav_link rounded-full px-2 mx-1\",\n                  id === item.id\n                    ? \"bg-red-50 text-red-500\"\n                    : \"ui_text_black_hover\"\n                )}\n                onClick={() => dispatch(setVideoListId({ id: item.id }))}\n              >\n                {item.name}\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"my-4\">\n        <DomGridVideo list={videoList} />\n        <div ref={domObserver} className=\"flex-center\">\n          <DomLoading />\n        </div>\n      </div>\n    </div>\n  );\n});\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { apiMVAll, apiMVExclusiveRcmd, apiMVFirst, apiTopMV } from \"@/api\";\nimport { Draft } from \"immer\";\n\nexport interface MVListState {\n  firstArea: string;\n  topArea: string;\n  first: [];\n  hot: [];\n  wy: [];\n  top: [];\n  timestamp: number;\n}\n\nconst initialState: MVListState = {\n  firstArea: \"内地\",\n  topArea: \"内地\",\n  first: [],\n  hot: [],\n  wy: [],\n  top: [],\n  timestamp: 0,\n};\n\nconst listFilter = (arr = []) =>\n  arr.map(({ id, playCount, cover, name, artists, briefDesc }) => ({\n    type: 0,\n    id,\n    cover,\n    briefDesc,\n    playCount,\n    title: name,\n    creator: artists.map(({ id: userId, name: userName }) => ({\n      userId,\n      userName,\n    })),\n  }));\n\ninterface iInit {\n  firstArea: string;\n  topArea: string;\n}\n\nexport const handleInit = createAsyncThunk(\n  \"mvlist/init/all\",\n  async ({ firstArea, topArea }: iInit) => {\n    try {\n      const [{ data: hot }, { data: wy }, { data: first }, { data: top }] =\n        await Promise.all([\n          apiMVAll({\n            order: \"最热\",\n            limit: 6,\n          }),\n          apiMVExclusiveRcmd({\n            limit: 6,\n          }),\n          apiMVFirst({\n            area: firstArea,\n            limit: 6,\n          }),\n          apiTopMV({\n            area: topArea,\n            limit: 10,\n          }),\n        ]);\n      return {\n        first: listFilter(first),\n        hot: listFilter(hot),\n        wy: listFilter(wy),\n        top,\n        timestamp: Date.now(),\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nexport const handleChangeFirstArea = createAsyncThunk(\n  \"mvlist/init/first\",\n  async (firstArea: string) => {\n    try {\n      const { data: first } = await apiMVFirst({\n        area: firstArea,\n        limit: 6,\n      });\n      return {\n        firstArea,\n        first: listFilter(first),\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nexport const handleChangeTopArea = createAsyncThunk(\n  \"mvlist/init/top\",\n  async (topArea: string) => {\n    try {\n      const { data: top } = await apiTopMV({\n        area: topArea,\n        limit: 10,\n      });\n      return {\n        topArea,\n        top,\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nconst slice = createSlice({\n  name: \"mvlist\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [handleInit.fulfilled.type]: (state, action) => {\n      const { timestamp, first, hot, wy, top } = action.payload;\n      state.timestamp = timestamp;\n      state.first = first;\n      state.hot = hot;\n      state.wy = wy;\n      state.top = top;\n    },\n    [handleChangeFirstArea.fulfilled.type]: (state, action) => {\n      const { topArea, top } = action.payload;\n      state.topArea = topArea;\n      state.top = top;\n    },\n    [handleChangeFirstArea.fulfilled.type]: (state, action) => {\n      const { firstArea, first } = action.payload;\n      state.firstArea = firstArea;\n      state.first = first;\n    },\n  },\n});\n\nexport const MVListSelector = <T = Draft<MVListState>>({\n  mvlist,\n}: {\n  mvlist: T;\n}): T => mvlist;\n\nexport default slice.reducer;\n","import React, { useEffect, memo, useMemo } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"@/reducers/hooks\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { IconChevronRight } from \"@tabler/icons\";\nimport DomGridVideo from \"@/components/GridVideo\";\nimport DomGridMVToplist from \"@/components/GridMVToplist\";\nimport DomLoading from \"@/components/Loading\";\nimport {\n  handleInit,\n  handleChangeFirstArea,\n  handleChangeTopArea,\n  MVListSelector,\n} from \"@/reducers/mvlist/slice\";\n\nconst category = [\"内地\", \"港台\", \"欧美\", \"日本\", \"韩国\"];\n\nexport default memo(function MVList() {\n  const dispatch = useAppDispatch();\n  const { firstArea, topArea, first, hot, wy, top, timestamp } =\n    useAppSelector(MVListSelector);\n  const memoLoading = useMemo(\n    () => Date.now() - timestamp > 3600000,\n    [timestamp]\n  );\n\n  useEffect(() => {\n    if (memoLoading) {\n      dispatch(\n        handleInit({\n          firstArea,\n          topArea,\n        })\n      );\n    }\n  }, [memoLoading]);\n\n  if (memoLoading)\n    return (\n      <div className=\"w-full h-full flex-center\">\n        <DomLoading />\n      </div>\n    );\n  return (\n    <div className=\"domVideoList_content px-8 overflow-auto max-h-full flex-auto\">\n      <div className=\"domMVList_sublist\">\n        <div className=\"domMVList_header mb-5 flex justify-between items-center\">\n          <Link\n            to={`/mv-all?order=最新&area=${firstArea}`}\n            className=\"domMVList_subLink font-bold text-base flex items-center\"\n          >\n            最新MV\n            <IconChevronRight size={20} />\n          </Link>\n          <div className=\"recommend_nav flex divide-x space-x-1\">\n            {category.map((item) => (\n              <div className=\"item\" key={item}>\n                <button\n                  onClick={() => dispatch(handleChangeFirstArea(item))}\n                  type=\"button\"\n                  className={classNames(\n                    \"link rounded-full px-2.5\",\n                    firstArea === item\n                      ? \"text-red-500 bg-red-50\"\n                      : \"ui_text_black_hover\"\n                  )}\n                >\n                  {item}\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n        <DomGridVideo list={first} />\n      </div>\n      <div className=\"domMVList_sublist\">\n        <div className=\"domMVList_header mt-8 mb-5 flex justify-between items-center\">\n          <Link\n            to=\"/mv-all?order=最热\"\n            className=\"domMVList_subLink font-bold text-base flex items-center\"\n          >\n            热播MV\n            <IconChevronRight size={20} />\n          </Link>\n        </div>\n        <DomGridVideo list={hot} />\n      </div>\n      <div className=\"domMVList_sublist\">\n        <div className=\"domMVList_header mt-8 mb-5 flex justify-between items-center\">\n          <Link\n            to=\"/mv-all?type=网易出品&order=最新\"\n            className=\"domMVList_subLink font-bold text-base flex items-center\"\n          >\n            网易出品\n            <IconChevronRight size={20} />\n          </Link>\n        </div>\n        <DomGridVideo list={wy} />\n      </div>\n      <div className=\"domMVList_header mt-8 mb-5 flex justify-between items-center\">\n        <Link\n          to=\"/toplist-mv/\"\n          className=\"domMVList_subLink font-bold text-base flex items-center\"\n        >\n          MV排行榜\n          <IconChevronRight size={20} />\n        </Link>\n        <div className=\"recommend_nav flex divide-x space-x-1\">\n          {category.map((item) => (\n            <div className=\"item\" key={item}>\n              <button\n                onClick={() => dispatch(handleChangeTopArea(item))}\n                type=\"button\"\n                className={classNames(\n                  \"link rounded-full px-2.5\",\n                  topArea === item\n                    ? \"text-red-500 bg-red-50\"\n                    : \"ui_text_black_hover\"\n                )}\n              >\n                {item}\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n      <DomGridMVToplist\n        list={top}\n        schema={[\n          [\"评论\", \"播放\"],\n          [\"收藏\", \"分享\", \"下载MV\", \"复制链接\"],\n        ]}\n      />\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport Video from \"./Video\";\nimport VideoList from \"./VideoList\";\nimport MVList from \"./MVList\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route element={<Video />}>\n        <Route path=\"videolist\" element={<VideoList />} />\n        <Route path=\"mvlist\" element={<MVList />} />\n        <Route path=\"*\" element={<Navigate to=\"videolist\" replace={true} />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["navs","memo","className","map","name","path","NavLink","key","isActive","to","Outlet","Select","id","dispatch","useAppDispatch","groupList","useAppSelector","VideoListSelector","type","classNames","onClick","setVideoListId","item","initStatus","categoryList","videoList","useState","groupListVisibility","setGroupListVisibility","currentNav","useMemo","find","group","Number","domScroll","useRef","domObserver","useInfinite","handleAddList","useEffect","handlePrevInit","setVideoListInit","ref","list","listFilter","arr","playCount","cover","artists","briefDesc","title","creator","userId","userName","handleInit","createAsyncThunk","firstArea","topArea","Promise","all","apiMVAll","order","limit","apiMVExclusiveRcmd","apiMVFirst","area","apiTopMV","hot","data","wy","first","top","timestamp","Date","now","console","log","handleChangeFirstArea","handleChangeTopArea","slice","createSlice","initialState","reducers","extraReducers","fulfilled","state","action","payload","MVListSelector","mvlist","category","memoLoading","Link","IconChevronRight","size","schema","Routes","Route","element","Video","VideoList","MVList","Navigate","replace"],"sourceRoot":""}