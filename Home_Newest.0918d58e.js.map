{"version":3,"file":"Home_Newest.0918d58e.js","mappings":"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","sources":["webpack://wyy/./src/pages/Home/Newest/Album.tsx","webpack://wyy/./src/pages/Home/Newest/Song.tsx","webpack://wyy/./src/pages/Home/Newest/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { apiTopAlbum, apiAlbumNew } from '@/api';\nimport { setTopAlbum } from '@/reducers/home/slice';\nimport classNames from 'classnames';\n\nimport { limit } from '@/common/config';\n\nconst arealist = [\n  {\n    name: '全部',\n    code: 'ALL',\n  },\n  {\n    name: '华语',\n    code: 'ZH',\n  },\n  {\n    name: '欧美',\n    code: 'EA',\n  },\n  {\n    name: '韩国',\n    code: 'KR',\n  },\n  {\n    name: '日本',\n    code: 'JP',\n  },\n];\n\nconst AlbumItem = ({ item }) => (\n  <div className=\"item\">\n    <div className=\"cover shadow rounded overflow-hidden\">\n      <Link to={`/playlist/album/${item.id}`}>\n        <img loading={'lazy'} className=\"ui_containimg\" src={`${item.blurPicUrl}?param=200y200`} alt=\"\" />\n      </Link>\n    </div>\n    <div className=\"name text-sm ui_ellipse mt-2\">\n      <Link to={`/playlist/album/${item.id}`}>\n        <span className=\"ui_text_black_hover\">\n          {item.name}\n        </span>\n        &nbsp;\n        {item.alias.length > 0\n          && (\n          <span className=\"text-gray-400\">\n            (\n              {item.alias}\n            )\n          </span>\n          )}\n        {\n          item.transNames\n          && (\n          <span>\n              {item.transNames}\n          </span>\n          )\n          }\n      </Link>\n    </div>\n    <div className=\"artist mt-2\">\n      <Link to={`/artist/${item.artist.id}`} key={item.artist.id} className=\"ui_text_gray_hover\">\n        {item.artist.name}\n      </Link>\n    </div>\n  </div>\n);\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { monthData = [], weekData = [] } = useSelector(({ home }) => home.newest);\n  // console.log(monthData, weekData);\n  const [area, setArea] = useState('ALL');\n  const [type, setType] = useState('new');\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [month, setMonth] = useState(new Date().getMonth());\n  const [offset, setOffset] = useState(0);\n\n  const [showtype, setShowtype] = useState('RECOMMEND');\n  const handleGetData = async () => {\n    try {\n      if (showtype === 'RECOMMEND') {\n        const { monthData, weekData } = await apiTopAlbum({\n          area,\n          type,\n          limit,\n          offset,\n        });\n        dispatch(setTopAlbum({ monthData: monthData.slice(0, 564), weekData }));\n      } else {\n        const { albums: monthData, weekData } = await apiAlbumNew({\n          area,\n          type,\n          limit,\n          offset,\n        });\n        dispatch(setTopAlbum({ monthData, weekData }));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    handleGetData();\n  }, [area, type, showtype]);\n  return (\n    <>\n      <div className=\"domHome_newest_sub_nav\">\n        {\n          arealist.map((item) => (\n            <button\n              type=\"button\"\n              key={item.name}\n              className={classNames('domHome_newest_sub_nav_link', { on: area === item.code })}\n              onClick={() => setArea(item.code)}\n            >\n              {item.name}\n            </button>\n          ))\n        }\n        <div className=\"domHome_newest_sub_control_center\">\n          <button\n            type=\"button\"\n            className={classNames('showtype', { on: showtype === 'RECOMMEND' })}\n            onClick={() => setShowtype('RECOMMEND')}\n          >\n            推荐\n          </button>\n          <button\n            type=\"button\"\n            className={classNames('showtype', { on: showtype === 'ALL' })}\n            onClick={() => setShowtype('ALL')}\n          >\n            全部\n          </button>\n        </div>\n      </div>\n      <div className=\"domHome_newest_album_list\">\n        {\n          area === 'ALL' && showtype !== 'ALL' && weekData.length > 0\n          && (\n            <div className=\"domHome_newest_album_sublist\">\n              <div className=\"sign\">\n                本周\n                <br />\n                新碟\n              </div>\n              <div className=\"list grid grid-cols-4 gap-5\">\n                {weekData.map((item) => (\n                  <AlbumItem item={item} key={item.id} />\n                ))}\n              </div>\n            </div>\n          )\n        }\n        {\n          monthData.length > 0\n          && (\n            <div className=\"domHome_newest_album_sublist\">\n              <div className=\"sign\">\n                本月\n                <br />\n                新碟\n              </div>\n              <div className=\"list grid grid-cols-4 gap-5\">\n                {\n                  monthData.map((item) => (\n                    <AlbumItem item={item} key={item.id} />\n                  ))\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    </>\n  );\n};\n","import React, {\n  useEffect, memo, useState, useMemo,\n} from 'react';\nimport dayjs from 'dayjs';\nimport {\n  NavLink, Link,\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { apiTopSong, apiSongUrl } from '@/api';\nimport { setTopSong } from '@/reducers/home/slice';\nimport { IconPlayerPlay, IconFolderPlus } from '@tabler/icons';\nimport classNames from 'classnames';\nimport DomTags from '@/components/Tags';\n\nconst navs = {\n  全部: 0,\n  华语: 7,\n  欧美: 96,\n  韩国: 16,\n  日本: 8,\n};\n\nconst DomItem = memo(({ item, index }) => (\n  <div\n    className={classNames('item h-20 py-2.5 flex items-center px-8 text-sm', { 'bg-gray-50': index % 2 === 0 })}\n  >\n    <span className=\"ranking text-gray-300 w-8\">\n      {String(index + 1).padStart(2, '0')}\n    </span>\n    <button\n      type=\"button\"\n      className=\"cover w-16 relative rounded overflow-hidden\"\n    >\n      <img\n        loading={`lazy`}\n        className=\"ui_aspect-ratio-1/1\"\n        src={`${item.album.blurPicUrl}?param=100y100`}\n        alt=\"\"\n      />\n      <i className=\"ico absolute w-6 h-6 m-auto flex-center inset-0 ui_themeColor bg-white bg-opacity-90 rounded-full\">\n        <IconPlayerPlay size={14} className=\"fill-current\" />\n      </i>\n    </button>\n    <span className=\"name px-2.5 w-0 flex items-center flex-auto\">\n      <div className=\"truncate\">{item.name}</div>\n      {/* <div className=\"TAG\">SQ</div> */}\n      <DomTags item={item} mv={item.mvid} />\n    </span>\n    <span className=\"artists truncate\">\n      {\n        item.artists.map((artist, index) => (\n          <span key={artist.id}>\n            {index > 0 && ' / '}\n            <Link to={`/artist/${artist.id}`} className=\"ui_text_gray_hover\">\n              {artist.name}\n            </Link>\n          </span>\n        ))\n      }\n    </span>\n    <span className=\"album truncate\">\n      <Link to={`/playlist/album/${item.album.id}`} className=\"ui_text_gray_hover\">\n        {item.album.name}\n      </Link>\n\n    </span>\n    <span className=\"duration text-gray-500 text-right\">\n      {dayjs(item.duration).format('mm:ss')}\n    </span>\n  </div>\n));\n\nconst DomMain = memo(({ type }) => {\n  const [data, setData] = useState([]);\n  const handleInit = async () => {\n    try {\n      const { data } = await apiTopSong({ type: navs[type] });\n      setData(data);\n      // dispatch(setTopSong(data));\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n\n  useEffect(() => {\n    handleInit();\n  }, [type]);\n  return (\n    <div className=\"domHome_newest_song_list\">\n      {data.map((item, index) => (\n        <DomItem key={item.id} item={item} index={index} />\n      ))}\n    </div>\n  );\n});\n\nexport default memo(({ type }) => (\n  <>\n    <div className=\"domHome_newest_sub_nav\">\n      {Object.keys(navs).map((item) => (\n        <NavLink\n          key={item}\n          className=\"domHome_newest_sub_nav_link\"\n          activeClassName=\"on\"\n          to={`/home/newest/song/${item}`}\n        >\n          {item}\n        </NavLink>\n      ))}\n      <div className=\"domHome_newest_sub_control_center space-x-2\">\n        <button type=\"button\" className=\"playAll flex-center ui_theme_bg_color text-white rounded-full px-2 py-0.5\">\n          <IconPlayerPlay size={16} stroke={1} className=\"fill-current\" />\n          播放全部\n        </button>\n        <button type=\"button\" className=\"subAll flex-center rounded-full border px-2 py-0.5\">\n          <IconFolderPlus size={16} stroke={1} />\n          收藏全部\n        </button>\n      </div>\n    </div>\n    <DomMain type={type} />\n  </>\n));\n","import React, { memo } from 'react';\nimport {\n  NavLink, Switch, Redirect, Route,\n} from 'react-router-dom';\nimport './style.scss';\n\nimport useMemoParams from '@/hooks/useMemoParams';\nimport DomSong from './Song';\nimport DomAlbum from './Album';\n\nexport default memo(() => (\n  <div className=\"domHome_content overflow-auto max-h-full flex-auto\">\n    <div className=\"domHome_newest\">\n      <div className=\"domHome_newest_nav\">\n        <NavLink\n          className=\"domHome_newest_nav_link\"\n          activeClassName=\"on\"\n          to=\"/home/newest/song\"\n        >\n          新歌速递\n        </NavLink>\n        <NavLink\n          className=\"domHome_newest_nav_link\"\n          activeClassName=\"on\"\n          to=\"/home/newest/album\"\n        >\n          新碟上架\n        </NavLink>\n      </div>\n      <Switch>\n        <Route path=\"/home/newest/song/:type\">\n          {useMemoParams(DomSong)}\n        </Route>\n        <Route path=\"/home/newest/album\">\n          <DomAlbum />\n        </Route>\n        <Redirect to=\"/home/newest/song/全部\" />\n      </Switch>\n    </div>\n  </div>\n));\n"],"names":["arealist","name","code","AlbumItem","item","className","Link","to","id","loading","src","blurPicUrl","alt","alias","length","transNames","artist","key","dispatch","useDispatch","useSelector","home","newest","monthData","weekData","useState","area","setArea","type","Date","getFullYear","getMonth","offset","showtype","setShowtype","handleGetData","apiTopAlbum","limit","setTopAlbum","slice","apiAlbumNew","albums","console","log","useEffect","map","on","onClick","navs","全部","华语","欧美","韩国","日本","DomItem","memo","index","String","padStart","album","IconPlayerPlay","size","mv","mvid","artists","duration","format","DomMain","data","setData","handleInit","apiTopSong","warn","Object","keys","NavLink","activeClassName","stroke","IconFolderPlus","Switch","Route","path","DomSong","Redirect"],"sourceRoot":""}