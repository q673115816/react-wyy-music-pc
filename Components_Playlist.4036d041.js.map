{"version":3,"file":"Components_Playlist.4036d041.js","mappings":"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","sources":["webpack://wyy/./src/components/Letter/List.tsx","webpack://wyy/./src/components/Letter/Message.tsx","webpack://wyy/./src/components/Letter/Home.tsx","webpack://wyy/./src/components/Playlist/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport {\n  apiMsgPrivate,\n  apiMsgComments,\n  apiMsgForwards,\n  apiMsgNotices,\n} from \"@/api\";\nimport { setMsgPrivateHistory } from \"@/reducers/letter/slice\";\nimport { setMsgPrivate } from \"@/reducers/common/slice\";\nimport { useAppDispatch, useAppSelector } from \"@/reducers/hooks\";\n\nconst BuildList = {\n  song: (msg) => (\n    <span>\n      单曲：「\n      {msg.song.name}\n      {msg.song.alias.length > 0 && (\n        <span className=\"text-gray-400\">\n          {`（${msg.song.alias.join(\",\")}）`}\n        </span>\n      )}\n      」\n    </span>\n  ),\n  album: (msg) => (\n    <span>\n      专辑：「\n      {msg.album.name}」\n    </span>\n  ),\n  topic: (msg) => (\n    <span>\n      专栏文章：「\n      {msg.topic.title}」\n    </span>\n  ),\n  promotionUrl: (msg) => (\n    <span>\n      {msg.promotionUrl.text}\n      ：「\n      {msg.msg}」\n    </span>\n  ),\n  picInfo: () => \"[图片]\",\n};\n\nconst BuildTransLastMsg = (msg = {}) => {\n  const keys = [\"song\", \"album\", \"topic\", \"promotionUrl\", \"picInfo\"];\n  for (const key of keys) {\n    if (msg[key]) return BuildList[key](msg);\n  }\n  return msg.msg;\n};\n\nconst navs = [\"私信\", \"评论\", \"@我\", \"通知\"];\n\nexport default () => {\n  const dispatch = useAppDispatch();\n  const {\n    isLogin,\n    newMsgCount,\n    msgs = [],\n    comments = [],\n    forwards = [],\n    notices = [],\n  } = useAppSelector(({ common }) => common);\n  const [data, setData] = useState([]);\n  const [active, setActive] = useState(\"私信\");\n\n  // 刷新数据\n  const handlePrivateInit = async (fn) => {\n    try {\n      const {\n        // newMsgCount,\n        msgs,\n        comments,\n        forwards,\n        notices,\n      } = await fn();\n      dispatch(\n        setMsgPrivate({\n          msgs,\n          // newMsgCount,\n          comments,\n          forwards,\n          notices,\n        })\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeNav = (active) => {\n    setActive(active);\n    if (active === \"私信\") {\n      handlePrivateInit(apiMsgPrivate);\n      setData(msgs);\n    } else if (active === \"评论\") {\n      handlePrivateInit(apiMsgComments);\n      setData(comments);\n    } else if (active === \"@我\") {\n      handlePrivateInit(apiMsgForwards);\n      setData(forwards);\n    } else if (active === \"通知\") {\n      handlePrivateInit(apiMsgNotices);\n      setData(notices);\n    }\n  };\n\n  useEffect(() => {\n    // handlePrivateInit(apiMsgPrivate);\n    handleChangeNav(active);\n  }, []);\n  const handleSeeMsgPrivateHistory = async (uid, nickname) => {\n    dispatch(\n      setMsgPrivateHistory({\n        uid,\n        nickname,\n        showMsgPrivateHistory: true,\n      })\n    );\n  };\n\n  return (\n    <>\n      <div className=\"header flex items-baseline p-6 pb-b\">\n        <span className=\"title text-lg\">消息</span>\n        {isLogin ? (\n          <button\n            type=\"button\"\n            className=\"clear text-sm font-bold ml-auto ui_link\"\n          >\n            一键已读\n          </button>\n        ) : (\n          <span className=\"clear text-sm font-bold ml-auto ui_disabled\">\n            一键已读\n          </span>\n        )}\n      </div>\n      <div className=\"nav flex-none flex m-auto w-min rounded-full border\">\n        {navs.map((nav) => (\n          <button\n            onClick={() => handleChangeNav(nav)}\n            type=\"button\"\n            key={nav}\n            className={classNames(\n              \"nav_link relative w-20 h-8 rounded-full\",\n              active === nav ? \"bg-gray-400 text-white\" : \"hover:bg-gray-200\"\n            )}\n          >\n            {nav}\n            {nav === \"私信\" && (\n              <span className=\"lt_ico border border-white rounded-full leading-tight px-1 absolute top-0 right-0 bg-red-500 transform translate-x-1/2 -translate-y-1/2 z-10\">\n                {newMsgCount}\n              </span>\n            )}\n          </button>\n        ))}\n      </div>\n      <div className=\"list mt-3 overflow-auto max-h-full flex-auto\">\n        {data.length > 0 ? (\n          data.map((item) => (\n            <div\n              className=\"item flex pr-4 pt-4 hover:bg-gray-100\"\n              key={item.fromUser.userId}\n            >\n              <div className=\"w-4 flex-center h-8\">\n                {item.newMsgCount > 0 && (\n                  <i className=\"rounded-full w-1.5 h-1.5 bg-red-500\" />\n                )}\n              </div>\n              <Link\n                to={`/user/${item.fromUser.userId}`}\n                className=\"avatar w-8 h-8 relative flex-none\"\n              >\n                <img\n                  className=\"rounded-full\"\n                  src={item.fromUser.avatarUrl}\n                  alt=\"\"\n                />\n                <i className=\"ico absolute right-0 bottom-0 w-3.5 h-3.5\">\n                  <img\n                    className=\"ui_containimg\"\n                    src={item.fromUser.avatarDetail?.identityIconUrl}\n                    alt=\"\"\n                  />\n                </i>\n              </Link>\n              <button\n                type=\"button\"\n                className=\"content border-b pb-3 flex-auto text-left ml-2.5 w-0\"\n                onClick={() =>\n                  handleSeeMsgPrivateHistory(\n                    item.fromUser.userId,\n                    item.fromUser.nickname\n                  )\n                }\n              >\n                <div className=\"top flex\">\n                  <span className=\"ui_link\">{item.fromUser.nickname}</span>\n                  <span className=\"time ml-auto text-gray-400\">\n                    {dayjs(item.lastMsgTime).format(\"YYYY年MM月DD日\")}\n                  </span>\n                </div>\n                <div className=\"bottom truncate\">\n                  {BuildTransLastMsg(JSON.parse(item.lastMsg))}\n                </div>\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"empty\">\n            暂无\n            {active}\n            内容\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { memo, useCallback, useEffect, useRef, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { transTextEmoji } from \"@/common/faces\";\nimport { apiSendText, apiMsgPrivateHistory } from \"@/api\";\nimport { setMsgPrivateHistory } from \"@/reducers/letter/slice\";\nimport { wordLength } from \"@/common/utils\";\nimport { Link } from \"react-router-dom\";\nimport {\n  IconChevronLeft,\n  IconPhoto,\n  IconMoodSmile,\n  IconPlayerPlay,\n} from \"@tabler/icons\";\nimport EmojiFaces from \"@/components/EmojiFaces\";\nimport Write from \"@/components/Write\";\nimport { useAppDispatch, useAppSelector } from \"@/reducers/hooks\";\n\nconst DomSong = ({ msg = {} }) => (\n  <button type=\"button\" className=\"share w-56 flex rounded p-2 bg-gray-50 mt-2\">\n    <div className=\"avatar flex-none w-10 h-10 rounded relative overflow-hidden\">\n      <img src={`${msg.song.album.picUrl}?param=100y100`} alt=\"\" />\n      <i className=\"absolute inset-0 m-auto w-6 h-6 bg-white bg-opacity-90 flex-center rounded-full ui_themeColor\">\n        <IconPlayerPlay size={14} className=\"fill-current\" />\n      </i>\n    </div>\n    <div className=\"content flex-auto w-0 pl-2.5 text-left\">\n      <div className=\"name truncate\">\n        {msg.song.name}\n        {msg.song.alias.length > 0 && (\n          <span className=\"text-gray-400\">\n            {`（${msg.song.alias.join(\",\")}）`}\n          </span>\n        )}\n      </div>\n      <div className=\"text-gray-400 artist truncate\">\n        {msg.song.artists.map((artist, index) => (\n          <span key={artist.name}>\n            {index > 0 && \" / \"}\n            {artist.name}\n          </span>\n        ))}\n      </div>\n    </div>\n  </button>\n);\nconst DomAlbum = ({ msg = {} }) => (\n  <Link\n    to={`/playlist/album/${msg.album.id}`}\n    className=\"share flex rounded p-2 bg-gray-50 mt-2 w-56\"\n  >\n    <button\n      type=\"button\"\n      className=\"avatar flex-none w-10 h-10 rounded relative overflow-hidden group\"\n    >\n      <img src={`${msg.album.picUrl}?param=100y100`} alt=\"\" />\n      <i className=\"absolute opacity-0 group-hover:opacity-100 inset-0 m-auto w-6 h-6 bg-white bg-opacity-90 flex-center rounded-full ui_themeColor\">\n        <IconPlayerPlay size={14} className=\"fill-current\" />\n      </i>\n    </button>\n    <div className=\"content flex-auto w-0 pl-2.5 text-left\">\n      <div className=\"name truncate\">\n        {msg.album.name}\n        {msg.album.alias.length > 0 && (\n          <span className=\"text-gray-400\">\n            {`（${msg.album.alias.join(\",\")}）`}\n          </span>\n        )}\n      </div>\n      <div className=\"text-gray-400 artist truncate\">\n        {msg.album.artist.name}\n      </div>\n    </div>\n  </Link>\n);\n\nconst DomCircle = ({ msg = {} }) => <div>云圈</div>;\n\nconst DomPromotion = ({ msg = {} }) => (\n  <a href={msg.promotion.url} className=\"embed\">\n    <div className=\"cover\">\n      <img className=\"\" src={msg.promotion.coverUrl} alt=\"\" />\n    </div>\n    <div className=\"promotion text-gray-400\">{msg.promotion.title}</div>\n  </a>\n);\n\nconst DomImage = ({ msg = {} }) => (\n  <div className=\"img\">\n    <img src={msg.picInfo.picUrl} className=\"\" alt=\"\" />\n  </div>\n);\n\nconst DomMsg = ({ msg = {} }) => transTextEmoji(msg.msg);\n\nconst DomContent = ({ msg = {} }) => {\n  const { type } = msg;\n  if (type === 16) return <DomImage msg={msg} />;\n  return (\n    <>\n      {transTextEmoji(msg.msg)}\n      {type === 1 && <DomSong msg={msg} />}\n      {type === 2 && <DomAlbum msg={msg} />}\n    </>\n  );\n};\n\nconst DomMsgLeft = ({ msg = {} }) => (\n  <div className=\"flex\">\n    <div className=\"w-60 flex\">\n      <div className=\"rounded-lg rounded-tl-none bg-blue-50 p-3 select-text\">\n        <DomContent msg={msg} />\n      </div>\n    </div>\n  </div>\n);\n\nconst DomMsgRight = ({ msg = {} }) => (\n  <div className=\"flex\">\n    <div className=\"ml-auto w-60 flex\">\n      <div className=\"ml-auto rounded-lg rounded-br-none bg-blue-50 p-3 select-text\">\n        <DomContent msg={msg} />\n      </div>\n    </div>\n  </div>\n);\n\nexport default memo(() => {\n  const dispatch = useAppDispatch();\n  const history = useRef(null);\n\n  const { uid, hint, nickname, privatMsgs } = useAppSelector(\n    ({ letter }) => letter\n  );\n\n  const { profile } = useAppSelector(({ account }) => account);\n\n  const [visibility, setVisibility] = useState(false);\n  const [value, setValue] = useState(\"\");\n  // const [privatMsgs, setPrivateMsgs] = useState([]);\n  const handleChange = useCallback((e) => {\n    setValue(e.target.value);\n  }, []);\n  const clickface = (face) => {\n    setValue(value + face);\n  };\n\n  const handleGetMsgPrivateHistory = async () => {\n    try {\n      const { hint, msgs = [] } = await apiMsgPrivateHistory({ uid });\n      // setPrivateMsgs(msgs.reverse());\n      dispatch(\n        setMsgPrivateHistory({\n          hint,\n          privatMsgs: msgs.reverse(),\n        })\n      );\n      history.current.scrollTo(0, history.current.scrollHeight);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSend = async () => {\n    try {\n      const { newMsgs = [] } = await apiSendText({\n        user_ids: uid,\n        msg: value,\n      });\n      dispatch(\n        setMsgPrivateHistory({\n          privatMsgs: newMsgs.reverse(),\n        })\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = () => {\n    const length = wordLength(value);\n    if (length <= 200) {\n      handleSend();\n      setValue(\"\");\n    } else {\n      console.log(\"to long\");\n    }\n  };\n\n  useEffect(() => {\n    handleGetMsgPrivateHistory();\n  }, [uid]);\n\n  return (\n    <>\n      <div\n        className=\"topbar relative text-center text-sm flex-center\"\n        style={{ height: 50 }}\n      >\n        <button\n          type=\"button\"\n          className=\"back absolute inset-y-0 left-0 p-2.5 flex-center ui_text_gray_hover\"\n          onClick={() =>\n            dispatch(setMsgPrivateHistory({ showMsgPrivateHistory: false }))\n          }\n        >\n          <IconChevronLeft size={22} />\n        </button>\n        <span>{nickname}</span>\n      </div>\n      <div\n        className=\"history overflow-auto max-h-full flex-auto px-5\"\n        ref={history}\n      >\n        {privatMsgs.map((item) => (\n          <div className=\"item mt-5\" key={item.id}>\n            <div className=\"time text-gray-400\">\n              {dayjs(item.time).format(\"YYYY年MM月DD日 HH:mm\")}\n            </div>\n            {item.toUser.userId === profile.userId ? (\n              <div className=\"msg flex justify-start\">\n                <div className=\"avatar flex-none mr-4 rounded-full overflow-hidden w-8 h-8\">\n                  <img className=\"\" src={item.fromUser.avatarUrl} alt=\"\" />\n                </div>\n                <DomMsgLeft msg={JSON.parse(item.msg)} />\n              </div>\n            ) : (\n              <DomMsgRight msg={JSON.parse(item.msg)} />\n            )}\n          </div>\n        ))}\n        {hint && <div className=\"hint\">{hint}</div>}\n      </div>\n      <div className=\"feedback p-3\">\n        <Write\n          placeholder={`回复 ${nickname}`}\n          max={200}\n          onChange={handleChange}\n        />\n        <div className=\"actions flex mt-2.5\">\n          <div className=\"left relative\">\n            {visibility && (\n              <div className=\"-translate-x-3 -translate-y-1/2 absolute faces right-full top-1/2 transform\">\n                <EmojiFaces\n                  {...{ handleHide: () => setVisibility(false), clickface }}\n                />\n              </div>\n            )}\n            <button\n              type=\"button\"\n              className=\"action\"\n              onClick={() => setVisibility(!visibility)}\n            >\n              <IconMoodSmile size={24} stroke={1.4} />\n            </button>\n            <button type=\"button\" className=\"action\">\n              <IconPhoto size={24} stroke={1.4} />\n            </button>\n          </div>\n          <button\n            type=\"button\"\n            className=\"ml-auto border px-4 h-8 rounded-full\"\n            onClick={handleSubmit}\n          >\n            发送\n          </button>\n        </div>\n      </div>\n    </>\n  );\n});\n","import React, { useEffect } from \"react\";\nimport { setMsgPrivateHistory } from \"@/reducers/letter/slice\";\nimport DomList from \"./List\";\nimport DomMessage from \"./Message\";\nimport \"./style.scss\";\nimport { useAppDispatch, useAppSelector } from \"@/reducers/hooks\";\n\nexport default () => {\n  const { showMsgPrivateHistory } = useAppSelector(({ letter }) => letter);\n  const { popupStatus } = useAppSelector(({ mask }) => mask);\n  const dispatch = useAppDispatch();\n\n  useEffect(\n    () => () => {\n      dispatch(\n        setMsgPrivateHistory({\n          showMsgPrivateHistory: false,\n        })\n      );\n    },\n    []\n  );\n  if (popupStatus !== \"letter\") return null;\n  return (\n    <div id=\"privateLetter\" className=\"flex flex-col absolute z-40\">\n      {showMsgPrivateHistory ? <DomMessage /> : <DomList />}\n    </div>\n  );\n};\n","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport {\n  IconFolderPlus,\n  IconLink,\n  IconPlayerPlay,\n  IconPlayerPause,\n} from '@tabler/icons';\nimport { setAudioPlaylistClear } from '@/reducers/audio/slice';\nimport { setPopupPlaylistToggle } from '@/reducers/mask/slice';\nimport DomName from '@/components/Table/Name';\nimport DomMenuCreate from '@/components/MenuCreate';\nimport './style.scss';\n\nconst Empty = () => {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"empty w-min m-auto pt-20 whitespace-nowrap\">\n      <div className=\"text-gray-400 text-sm text\">\n        您还没添加任何歌曲！\n      </div>\n      <div className=\"text-gray-400 mt-6\">\n        去首页\n        <Link\n          to=\"/\"\n          className=\"ui_text_black_hover underline\"\n          onClick={() => dispatch(setPopupPlaylistToggle({}))}\n        >\n          发现音乐\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nconst DomList = ({ list = [], currentId }) => {\n  if (list.length === 0) return <Empty />;\n  const { running } = useSelector(({ audio }) => audio);\n  return (\n    <div>\n      {\n        list.map((item, index) => (\n          <DomMenuCreate\n            schema={[\n              ['评论',\n                '播放'],\n              ['收藏到歌单',\n                '分享',\n                '复制链接',\n                '不感兴趣',\n                '下载'],\n            ]}\n            type=\"song\"\n            item={item}\n            key={item.id}\n            tabIndex=\"2\"\n            className={classNames('flex items-center hover:bg-gray-100 focus:bg-gray-200 focus:outline-none h-9 group ', { 'bg-gray-50': index % 2 === 1, ui_themeColor: item.id === currentId })}\n          >\n            <div className=\"w-6 flex-center flex-none\">\n              {item.id === currentId\n                && (running ? <IconPlayerPlay className=\"fill-current ui_themeColor\" size={12} />\n                  : <IconPlayerPause size={12} className=\"fill-current ui_themeColor\" stroke={1} />)\n              }\n            </div>\n            <div className=\"name flex-auto w-0\">\n              <DomName item={item} />\n            </div>\n            <div className=\"w-24 px-1 flex-none truncate text-gray-500 group-hover:text-black\">\n              {item.ar.map((artist, index) => (\n                <span key={artist.id}>\n                  {index > 0 && ' / '}\n                  <Link to={`/artist/${artist.id}`}>\n                    {artist.name}\n                  </Link>\n                </span>\n              ))}\n            </div>\n            <div className=\"w-8 px-1 flex-none\">\n              <Link to=\"/\">\n                <IconLink size={16} stroke={1} />\n              </Link>\n            </div>\n            <div className=\"w-16 px-1 flex-none text-gray-300 group-hover:text-black\">\n              {dayjs(item.dt).format('mm:ss')}\n            </div>\n          </DomMenuCreate>\n        ))\n      }\n    </div>\n  );\n};\n\nexport default memo(() => {\n  const dispatch = useDispatch();\n  const { popupStatus } = useSelector(({ mask }) => mask);\n  const { playlist, currentSong } = useSelector(({ audio }) => audio);\n  const handleClear = () => {\n    if (playlist.length === 0) return false;\n    return dispatch(setAudioPlaylistClear());\n  };\n  if (popupStatus !== 'playlist') return null;\n  return (\n    <div id=\"playlist\" className=\"absolute right-0 shadow bg-white z-40 flex flex-col\">\n      <div className=\"px-5 flex-none\">\n        <div className=\"py-4\">\n          <div className=\"h1\">当前播放</div>\n        </div>\n        <div className=\"actions flex items-center pb-2.5 border-b\">\n          <span className=\"text-gray-400\">\n            {`总${playlist.length}首`}\n          </span>\n          <div className=\"right ml-auto flex divide-x\">\n            <button\n              type=\"button\"\n              className={classNames('action px-5 flex-center', { 'text-gray-300': playlist.length === 0 })}\n            >\n              <IconFolderPlus size={20} stroke={1} />\n              收藏全部\n            </button>\n            <button\n              type=\"button\"\n              onClick={handleClear}\n              className={classNames('action px-5 flex-center', { 'text-gray-300': playlist.length === 0 })}\n            >\n              清空列表\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"overflow-auto h-full flex-auto\">\n        <DomList\n          list={playlist}\n          currentId={currentSong.id}\n        />\n      </div>\n    </div>\n  );\n});\n"],"names":["BuildList","song","msg","name","alias","length","className","join","album","topic","title","promotionUrl","text","picInfo","navs","dispatch","useAppDispatch","useAppSelector","common","isLogin","newMsgCount","msgs","comments","forwards","notices","useState","data","setData","active","setActive","handlePrivateInit","fn","setMsgPrivate","console","log","handleChangeNav","apiMsgPrivate","apiMsgComments","apiMsgForwards","apiMsgNotices","useEffect","handleSeeMsgPrivateHistory","uid","nickname","setMsgPrivateHistory","showMsgPrivateHistory","type","map","nav","onClick","key","classNames","item","fromUser","userId","Link","to","src","avatarUrl","alt","avatarDetail","identityIconUrl","dayjs","lastMsgTime","format","BuildTransLastMsg","JSON","parse","lastMsg","DomSong","picUrl","IconPlayerPlay","size","artists","artist","index","DomAlbum","id","DomImage","DomContent","transTextEmoji","DomMsgLeft","DomMsgRight","memo","history","useRef","letter","hint","privatMsgs","profile","account","visibility","setVisibility","value","setValue","handleChange","useCallback","e","target","handleGetMsgPrivateHistory","apiMsgPrivateHistory","reverse","current","scrollTo","scrollHeight","handleSend","apiSendText","user_ids","newMsgs","style","height","IconChevronLeft","ref","time","toUser","Write","placeholder","max","onChange","EmojiFaces","handleHide","clickface","face","IconMoodSmile","stroke","IconPhoto","wordLength","popupStatus","mask","Empty","useDispatch","setPopupPlaylistToggle","DomList","list","currentId","running","useSelector","audio","schema","tabIndex","ui_themeColor","IconPlayerPause","ar","IconLink","dt","playlist","currentSong","IconFolderPlus","setAudioPlaylistClear"],"sourceRoot":""}