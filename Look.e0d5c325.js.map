{"version":3,"file":"Look.e0d5c325.js","mappings":"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","sources":["webpack://wyy/./src/pages/Look/Base.tsx","webpack://wyy/./src/pages/Look/Home/Home.tsx","webpack://wyy/./src/pages/Look/Home/List.tsx","webpack://wyy/./src/pages/Look/Home/index.ts","webpack://wyy/./src/pages/Look/Live/Live.tsx","webpack://wyy/./src/pages/Look/Live/index.ts","webpack://wyy/./src/pages/Look/Room/Room.tsx","webpack://wyy/./src/pages/Look/Room/index.ts","webpack://wyy/./src/pages/Look/index.ts","webpack://wyy/./src/pages/Look/socket.ts"],"sourcesContent":["import React, { memo } from 'react'\nimport {Switch, Route} from \"react-router-dom\";\nimport Home from './Home'\nimport Live from './Live'\nimport Room from './Room'\n\nexport default memo(() => {\n  return (\n    <Switch>\n      <Route path={`/look`} exact component={Home}/>\n      <Route path={`/look/my`} component={Live}/>\n      <Route path={`/look/:id(\\\\d*)`} component={Room}/>\n    </Switch>\n  )\n})\n","import React, {useState, memo, useRef, useEffect, useCallback, MouseEventHandler} from 'react';\nimport useInfinite from '@/hooks/useInfinite';\nimport {Link, useHistory, useLocation} from 'react-router-dom'\nimport axios from 'axios'\nimport {useQuery} from \"react-query\";\nimport Loading from \"@/components/Loading\";\nimport Rea from 'react-error-boundary'\nimport socket from \"../socket\";\nimport {iList, } from './types'\nimport LiveList from './List'\n\nexport default memo(() => {\n  const [size, setSize] = useState(20);\n  const DomScroll = useRef(null);\n  const DomObserver = useRef(null);\n  const [list, setList] = useState<iList>([])\n  // useInfinite(() => { setSize((prev) => prev + 20); }, DomScroll, DomObserver);\n\n  const {data, error, isLoading, isSuccess, status} = useQuery('look', async () => {\n    const {data} = await axios.get('http://localhost:3333/list')\n      .then((res) => res.data)\n    return data\n  })\n\n  return (\n    <div className=\"domLook overflow-auto max-h-full flex-auto\" ref={DomScroll}>\n      <div className=\"domLook_header ui_header\">\n        <span className=\"title h1\">LOOK直播</span>\n        <span className=\"text-gray-400 slogan ml-2\">在这里，看见音乐</span>\n        <Link to={({pathname}) => `${pathname}/my`} className=\"ml-2 py-1 px-2 rounded bg-red-500 text-white\">我的直播</Link>\n        <a href=\"https://look.163.com/hot\" className=\"text-gray-400 ml-auto\">更多 &gt;</a>\n      </div>\n      <div className=\"px-8\">\n        {isLoading && <div className={`pt-48 flex-center`}><Loading/></div>}\n        {isSuccess && <LiveList list={data}/>}\n\n        <div ref={DomObserver} />\n      </div>\n    </div>\n  );\n});\n\n","import React, {memo, useCallback} from 'react'\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\nimport {iList} from \"./types\";\nimport {useAppSelector} from \"@/reducers/hooks\";\nimport {liveSelector} from \"@/reducers/live/slice\";\nimport {useCreateSocket} from \"@/pages/Look/socket\";\n\nexport default memo<{ list: iList }>(({list}) => {\n  const {socket} = useAppSelector(liveSelector)\n  const {push} = useHistory()\n  const {pathname} = useLocation()\n  const handleBeforeEntry = useCallback((e, key) => {\n    e.preventDefault()\n    if(!socket) useCreateSocket()\n    prompt()\n    socket.emit('join', {})\n    push(`${pathname}/${key}`)\n  }, [pathname])\n  return (\n    <div className={`grid grid-cols-3 gap-5`}>\n      {\n        list.map(([key, options]) => (\n          <div key={key}>\n            <a href={`${pathname}/${key}`} onClick={(e) => handleBeforeEntry(e, key)}>\n              <img className={`ui_aspect-ratio-16/9 cursor-pointer`} loading={`lazy`} src={options.banner} alt=\"\"/>\n            </a>\n            <a href={`${pathname}/${key}`}\n               onClick={(e) => handleBeforeEntry(e, key)}\n               className={`cursor-pointer`}>\n              {options.title}\n            </a>\n            <div><Link to={`/`}>{options.user}</Link></div>\n          </div>\n        ))\n      }\n    </div>\n  )\n})\n","export {default } from './Home'\n","import React, {memo, MouseEventHandler, ReactNode, useRef} from 'react'\nimport {useAppDispatch, useAppSelector} from \"@/reducers/hooks\";\nimport {\n  liveSelector,\n  deskTopClose, deskTopOpen,\n  userClose, userOpen,\n  pushOpen, pushClose,\n} from \"@/reducers/live/slice\";\nimport classnames from 'classnames'\nimport socket from '../socket'\nimport useLoginStatus, {handleLoginStatus} from \"@/hooks/useLoginStatus\";\n\ninterface iButtonProps {\n  onClick: MouseEventHandler<HTMLButtonElement>,\n  status: boolean,\n  children: ReactNode\n}\n\nconst Button = memo<iButtonProps>\n(({onClick, status, children}) => (\n  <button type={'button'}\n          className={classnames(`text-white rounded p-2`, status ? 'bg-red-500' : 'bg-blue-500')}\n          onClick={onClick}>{children}</button>\n))\n\n/*\n* TODO\n*  1.信令系统\n*  2.摄像头叠加桌面，如基本直播\n* */\nexport default memo(() => {\n  const dispatch = useAppDispatch()\n  const {status} = useAppSelector(liveSelector)\n\n  const RefDeskTop = useRef(null)\n  const RefDeskTopStream = useRef(null)\n  const RefUser = useRef(null)\n  const handleDeskTop: MouseEventHandler = () => {\n    if(!status.deskTop) handleDeskTopOpen()\n    else handleDeskTopClose()\n  }\n\n  const handleDeskTopOpen = () => {\n\n    let deskTopStream = null;\n    const mediaStreamConstraints = {\n      video: true,\n      audio: true,\n    };\n\n    function gotDeskTopMediaStream(mediaStream: MediaStream) {\n      RefDeskTop.current.srcObject = mediaStream;\n      // deskTopStream = mediaStream;\n      dispatch(deskTopOpen())\n    }\n\n    RefDeskTopStream.current = navigator.mediaDevices\n      .getDisplayMedia(mediaStreamConstraints)\n      .then(gotDeskTopMediaStream)\n      .catch((err) => console.log(err));\n  }\n\n  const handleDeskTopClose = () => {\n    if(RefDeskTop.current) {\n      const tracks = RefDeskTop.current.srcObject.getTracks()\n      tracks.forEach((track: MediaStreamTrack) => track.stop())\n      RefDeskTop.current.srcObject = null\n      dispatch(deskTopClose())\n    }\n  }\n\n  const handleUser: MouseEventHandler = () => {\n    if(!status.user) handleUserOpen()\n    else handleUserClose()\n  }\n\n  const handleUserOpen = () => {\n    dispatch(userOpen())\n    let userStream = null;\n    const mediaStreamConstraints = {\n      video: true,\n      audio: true,\n    };\n\n    function gotLocalMediaStream(mediaStream: MediaStream) {\n      if(RefUser.current) (RefUser.current as HTMLVideoElement).srcObject = mediaStream;\n\n      // userStream = mediaStream;\n    }\n\n    navigator.mediaDevices\n      .getUserMedia(mediaStreamConstraints)\n      .then(gotLocalMediaStream)\n      .catch((err) => console.log(err));\n  }\n\n  const handleUserClose = () => {\n    dispatch(userClose())\n  }\n\n  const handleSend: MouseEventHandler = () => {\n    if(!status.push) handlePushOpen()\n    else handlePushClose()\n  }\n\n  const handlePushOpen = async () => {\n    dispatch(pushOpen())\n    socket.connect()\n    socket.emit('create', {\n      uid: 110\n    })\n  }\n  const handlePushClose = () => {\n    dispatch(pushClose())\n    socket.disconnect()\n  }\n\n  return (\n    <div className={`w-full h-full p-8 overflow-auto`}>\n      <div className={`flex`}>\n        <Button onClick={handleDeskTop} status={status.deskTop}>桌面共享开关</Button>\n        <Button onClick={handleUser} status={status.user}>摄像头开关</Button>\n        <Button onClick={handleSend} status={status.push}>推送开关</Button>\n      </div>\n      <div className={`flex flex-col`}>\n        <div className={``}>\n          <video className={`w-full`} ref={RefDeskTop} autoPlay playsInline/>\n        </div>\n        <div className={''}>\n          <video className={`w-full`} ref={RefUser} autoPlay playsInline/>\n        </div>\n      </div>\n    </div>\n  )\n})\n","export {default} from './Live'\n","import React, {memo} from 'react'\n\nexport default memo(() => {\n\n  return (\n    <div className={`p-8`}>return <button onClick={methodDoesNotExist}>Break the world</button>;</div>\n  )\n})\n","export {default} from './Room'\n","export {default} from './Base'\n","import io from 'socket.io-client'\nimport {useAppDispatch} from \"@/reducers/hooks\";\nimport {createLiveSocket} from \"@/reducers/live/slice\";\n\nconst url = 'http://localhost:3333'\n\nconst socket = io(url, {\n  autoConnect: false\n})\n\nsocket.on('create-success', (data) => {\n  console.log(data)\n})\n\nsocket.on('join-success', (data) => {\n  console.log(data)\n})\n\nsocket.on('disconnect-success', (data) => {\n  console.log(data)\n})\n\nexport const useCreateSocket = () => {\n  const dispatch = useAppDispatch()\n  dispatch(createLiveSocket({socket}))\n  socket.connect()\n}\n\nexport default socket\n"],"names":["memo","Switch","Route","path","exact","component","Home","Live","Room","useState","DomScroll","useRef","DomObserver","useQuery","axios","get","then","res","data","isLoading","error","isSuccess","status","className","ref","Link","to","pathname","href","list","socket","useAppSelector","liveSelector","push","useHistory","useLocation","handleBeforeEntry","useCallback","e","key","preventDefault","useCreateSocket","prompt","emit","map","options","onClick","loading","src","banner","alt","title","user","default","Button","children","type","dispatch","useAppDispatch","RefDeskTop","RefDeskTopStream","RefUser","handlePushOpen","pushOpen","connect","uid","deskTop","current","srcObject","getTracks","forEach","track","stop","deskTopClose","navigator","mediaDevices","getDisplayMedia","video","audio","mediaStream","deskTopOpen","catch","err","console","log","userClose","userOpen","getUserMedia","pushClose","disconnect","autoPlay","playsInline","methodDoesNotExist","autoConnect","on","createLiveSocket"],"sourceRoot":""}