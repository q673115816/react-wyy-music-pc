{"version":3,"sources":["webpack://wyy/./src/pages/Video/VideoList/index.tsx","webpack://wyy/./src/pages/Video/MVList/index.tsx","webpack://wyy/./src/reducers/mvlist/actions.ts","webpack://wyy/./src/reducers/mvlist/actionTypes.ts","webpack://wyy/./src/pages/Video/index.tsx"],"names":["memo","dispatch","useDispatch","useSelector","videolist","id","initStatus","groupList","categoryList","useState","videoList","setVideoList","groupListVisibility","setGroupListVisibility","currentNav","useMemo","find","group","Number","name","domScroll","useRef","domObserver","handlePrevInit","Promise","all","apiVideoGroupList","apiVideoCategoryList","data","setVideoListInit","console","log","handleAddList","apiVideoGroup","apiVideoTimelineRecommend","datas","prevList","map","vid","coverUrl","durationms","title","playTime","creator","cover","duration","playCount","userName","nickname","userId","useInfinite","useEffect","DomSelect","className","type","classNames","onClick","setVideoListId","item","key","ref","list","category","mvlist","firstArea","topArea","first","hot","wy","top","timestamp","memoLoading","Date","now","listFilter","arr","artists","briefDesc","handleInit","apiMVAll","order","limit","apiMVExclusiveRcmd","apiMVFirst","area","apiTopMV","payload","handleChangeFirstArea","handleChangeTopArea","Link","to","IconChevronRight","size","schema","navs","path","NavLink","activeClassName","Switch","Route","VideoList","MVList","Redirect"],"mappings":"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","file":"Video.24f8d9c8.js","sourcesContent":["import React, {\n  memo,\n  useEffect, useState,\n  useRef,\n  useMemo,\n} from 'react';\nimport classNames from 'classnames';\nimport {\n  apiVideoTimelineRecommend,\n  apiVideoGroupList,\n  apiVideoCategoryList,\n  apiVideoGroup,\n} from '@/api';\nimport useInfinite from '@/hooks/useInfinite';\nimport DomGridVideo from '@/components/GridVideo';\nimport { setVideoListInit, setVideoListId } from '@/reducers/videolist/actions';\nimport './style.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DomLoading from '@/components/Loading';\n\nexport default memo(() => {\n  const dispatch = useDispatch();\n  const {\n    id,\n    initStatus,\n    groupList,\n    categoryList,\n  } = useSelector(({ videolist }) => videolist);\n  const [videoList, setVideoList] = useState([]);\n  const [groupListVisibility, setGroupListVisibility] = useState(false);\n  const currentNav = useMemo(() => groupList.find((group) => group.id === Number(id))?.name, [id]);\n\n  const domScroll = useRef<HTMLDivElement>(null);\n  const domObserver = useRef<HTMLDivElement>(null);\n\n  const handlePrevInit = async () => {\n    if (initStatus) return false;\n    try {\n      const [\n        { data: groupList },\n        { data: categoryList = [] },\n      ] = await Promise.all([\n        apiVideoGroupList(),\n        apiVideoCategoryList(),\n      ]);\n      dispatch(setVideoListInit({\n        groupList,\n        categoryList,\n      }));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleAddList = async () => {\n    try {\n      const { datas = [] } = await (id\n        ? apiVideoGroup({\n          id,\n        })\n        : apiVideoTimelineRecommend());\n      setVideoList((prevList) => [...prevList, ...datas.map(({\n        data: {\n          vid,\n          coverUrl,\n          durationms,\n          title,\n          playTime,\n          creator: {\n            nickname: userName, userId,\n          },\n        },\n      }) => ({\n        id: vid,\n        cover: coverUrl,\n        duration: durationms,\n        playCount: playTime,\n        title,\n        creator: [{ userName, userId }],\n      }))]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useInfinite(handleAddList, domScroll, domObserver);\n\n  useEffect(() => {\n    handlePrevInit();\n  }, []);\n\n  useEffect(() => {\n    setVideoList([]);\n  }, [id]);\n\n  const DomSelect = () => (\n    <div className=\"group_select_box absolute top-100 p-5 bg-white overflow-auto shadow\">\n      <div className=\"border-b pb-2\">\n        <button\n          type=\"button\"\n          className={classNames('group_select_check text-center rounded-full h-8 flex-center hover:ui_themeColor', id === null ? 'text-red-500 bg-red-50' : '')}\n          onClick={() => dispatch(setVideoListId({ id: null }))}\n        >\n          全部视频\n        </button>\n      </div>\n      <div className=\"group_select_list grid grid-cols-6 gap-y-5 p-4\">\n        {groupList.map((item) => (\n          <button\n            type=\"button\"\n            className={classNames('group_select_check text-center rounded-full h-8 flex-center hover:ui_themeColor', item.id === id ? 'text-red-500 bg-red-50' : '')}\n            key={item.id}\n            onClick={() => dispatch(setVideoListId({ id: item.id }))}\n          >\n            {item.name}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"domVideoList_content px-8 overflow-auto flex-auto\" ref={domScroll}>\n      <div className=\"video_sort_filter_bar flex items-center justify-between\">\n        <div className=\"group_select_wrap relative z-10\">\n          <button\n            type=\"button\"\n            className=\"group_select_button border rounded-full hover:bg-gray-100 text-sm\"\n            onClick={() => setGroupListVisibility(!groupListVisibility)}\n          >\n            {currentNav || '全部视频'}\n            &gt;\n          </button>\n          {groupListVisibility\n            && <DomSelect />}\n        </div>\n        <div className=\"recommend_nav divide-x flex\">\n          {categoryList.map((item) => (\n            <div key={item.id}>\n              <button\n                type=\"button\"\n                className={classNames('recommend_nav_link rounded-full px-2 mx-1', id === item.id ? 'bg-red-50 text-red-500' : 'ui_text_black_hover')}\n                onClick={() => dispatch(setVideoListId({ id: item.id }))}\n              >\n                {item.name}\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"my-4\">\n        <DomGridVideo\n          list={videoList}\n        />\n        <div ref={domObserver} className=\"flex-center\">\n          <DomLoading />\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, {\n  useEffect, memo, useMemo,\n} from 'react';\n// import { unstable_batchedUpdates } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport {\n  IconChevronRight,\n} from '@tabler/icons';\nimport {\n  apiMVFirst,\n  apiMVAll,\n  apiMVExclusiveRcmd,\n  apiTopMV,\n} from '@/api';\nimport DomGridVideo from '@/components/GridVideo';\nimport DomGridMVToplist from '@/components/GridMVToplist';\nimport DomLoading from '@/components/Loading';\nimport {\n  setMVlistInit, setMVlistTopareaInit,\n  setMVlistFirstareaInit,\n} from '@/reducers/mvlist/actions';\nimport './style.scss';\n\nconst category = [\n  '内地',\n  '港台',\n  '欧美',\n  '日本',\n  '韩国',\n];\n\nexport default memo(() => {\n  // console.log('mv');\n  const dispatch = useDispatch();\n  const {\n    firstArea,\n    topArea,\n    first,\n    hot,\n    wy,\n    top,\n    timestamp,\n  } = useSelector(({ mvlist }) => mvlist);\n  const memoLoading = useMemo(() => Date.now() - timestamp > 3600000, [timestamp]);\n  const listFilter = (arr) => arr.map((({\n    id, playCount, cover, name, artists, briefDesc,\n  }) => ({\n    type: 0,\n    id,\n    cover,\n    briefDesc,\n    playCount,\n    title: name,\n    creator: artists.map(({ id: userId, name: userName }) => ({ userId, userName })),\n  })));\n  const handleInit = async () => {\n    try {\n      const [\n        { data: hot },\n        { data: wy },\n        { data: first },\n        { data: top },\n      ] = await Promise.all([\n        apiMVAll({\n          order: '最热',\n          limit: 6,\n        }),\n        apiMVExclusiveRcmd({\n          limit: 6,\n        }),\n        apiMVFirst({\n          area: firstArea,\n          limit: 6,\n        }),\n        apiTopMV({\n          area: topArea,\n          limit: 10,\n        }),\n      ]);\n      dispatch(setMVlistInit({\n        first: listFilter(first),\n        hot: listFilter(hot),\n        wy: listFilter(wy),\n        top,\n        timestamp: Date.now(),\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeFirstArea = async (firstArea) => {\n    try {\n      const { data: first } = await apiMVFirst({\n        area: firstArea,\n        limit: 6,\n      });\n      dispatch(setMVlistFirstareaInit({\n        firstArea,\n        first: listFilter(first),\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeTopArea = async (topArea) => {\n    try {\n      const { data: top } = await apiTopMV({\n        area: topArea,\n        limit: 10,\n      });\n      dispatch(setMVlistTopareaInit({\n        topArea,\n        top,\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (memoLoading) {\n      handleInit();\n    }\n  }, [memoLoading]);\n\n  if (memoLoading) return <div className=\"w-full h-full flex-center\"><DomLoading /></div>;\n  return (\n    <div className=\"domVideoList_content px-8 overflow-auto max-h-full flex-auto\">\n      <div className=\"domMVList_sublist\">\n        <div className=\"domMVList_header mb-5 flex justify-between items-center\">\n          <Link\n            to={`/allmv?order=最新&area=${firstArea}`}\n            className=\"domMVList_subLink font-bold text-base flex items-center\"\n          >\n            最新MV\n            <IconChevronRight size={20} />\n          </Link>\n          <div className=\"recommend_nav flex divide-x space-x-1\">\n            {\n              category.map((item) => (\n                <div className=\"item\" key={item}>\n                  <button\n                    onClick={() => handleChangeFirstArea(item)}\n                    type=\"button\"\n                    className={classNames('link rounded-full px-2.5', firstArea === item ? 'text-red-500 bg-red-50' : 'ui_text_black_hover')}\n                  >\n                    {item}\n                  </button>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n        <DomGridVideo list={first} />\n      </div>\n      <div className=\"domMVList_sublist\">\n        <div className=\"domMVList_header mt-8 mb-5 flex justify-between items-center\">\n          <Link\n            to=\"/allmv?order=最热\"\n            className=\"domMVList_subLink font-bold text-base flex items-center\"\n          >\n            热播MV\n            <IconChevronRight size={20} />\n          </Link>\n        </div>\n        <DomGridVideo list={hot} />\n      </div>\n      <div className=\"domMVList_sublist\">\n        <div className=\"domMVList_header mt-8 mb-5 flex justify-between items-center\">\n          <Link\n            to=\"/allmv?type=网易出品&order=最新\"\n            className=\"domMVList_subLink font-bold text-base flex items-center\"\n          >\n            网易出品\n            <IconChevronRight size={20} />\n          </Link>\n        </div>\n        <DomGridVideo list={wy} />\n      </div>\n      <div className=\"domMVList_header mt-8 mb-5 flex justify-between items-center\">\n        <Link to=\"/toplist-mv/\" className=\"domMVList_subLink font-bold text-base flex items-center\">\n          MV排行榜\n          <IconChevronRight size={20} />\n        </Link>\n        <div className=\"recommend_nav flex divide-x space-x-1\">\n          {\n            category.map((item) => (\n              <div className=\"item\" key={item}>\n                <button\n                  onClick={() => handleChangeTopArea(item)}\n                  type=\"button\"\n                  className={classNames('link rounded-full px-2.5', topArea === item ? 'text-red-500 bg-red-50' : 'ui_text_black_hover')}\n                >\n                  {item}\n                </button>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n      <DomGridMVToplist\n        list={top}\n        schema={[\n          ['评论', '播放'],\n          ['收藏', '分享', '下载MV', '复制链接'],\n        ]}\n      />\n    </div>\n  );\n});\n","import {\n  SET_MVLIST_INIT,\n  SET_MVLIST_TOPAREA_INIT,\n  SET_MVLIST_FIRSTAREA_INIT,\n} from './actionTypes';\n\nexport const setMVlistInit = (payload) => ({\n  type: SET_MVLIST_INIT,\n  payload,\n});\n\nexport const setMVlistTopareaInit = (payload) => ({\n  type: SET_MVLIST_TOPAREA_INIT,\n  payload,\n});\nexport const setMVlistFirstareaInit = (payload) => ({\n  type: SET_MVLIST_FIRSTAREA_INIT,\n  payload,\n});\n","export const SET_MVLIST_INIT = 'SET_MVLIST_INIT';\n\nexport const SET_MVLIST_TOPAREA_INIT = 'SET_MVLIST_TOPAREA_INIT';\n\nexport const SET_MVLIST_FIRSTAREA_INIT = 'SET_MVLIST_FIRSTAREA_INIT';\n","import React, { memo } from 'react';\nimport {\n  NavLink, Switch, Redirect, Route,\n} from 'react-router-dom';\nimport VideoList from './VideoList';\nimport MVList from './MVList';\n\nconst navs = [\n  ['视频', '/video/videolist'],\n  ['MV', '/video/mvlist'],\n];\n\nexport default memo(() => (\n  <div className=\"domVideoList flex flex-col h-full\">\n    <div className=\"domVideoList_header ui_header text-base space-x-4\">\n      {\n        navs.map(([name, path]) => (\n          <NavLink\n            key={name}\n            className=\"domVideoList_link\"\n            activeClassName=\"text-xl ui_underline font-bold\"\n            to={path}\n          >\n            {name}\n          </NavLink>\n        ))\n      }\n    </div>\n    <Switch>\n      <Route path=\"/video/videolist\">\n        <VideoList />\n      </Route>\n      <Route path=\"/video/mvlist\">\n        <MVList />\n      </Route>\n      <Redirect to=\"/video/videolist\" />\n    </Switch>\n  </div>\n));\n"],"sourceRoot":""}