{"version":3,"file":"412.2d1d5e84.js","mappings":"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","sources":["webpack://wyy/./src/features/Cloud/Cloud.tsx","webpack://wyy/./src/features/Cloud/Router.tsx"],"sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"@/components/HeaderBarSearch\";\nimport { apiUserCloud } from \"@/api\";\n\nimport MenuCreate from \"@/components/MenuCreate\";\nimport Rank from \"@/components/Table/Rank\";\nimport DomHeart from \"@/components/Table/Heart\";\nimport Download from \"@/components/Table/Download\";\nimport DomGroupPlay from \"@/components/GroupPlay\";\nimport DomName from \"@/components/Table/Name\";\nimport Artists from \"@/components/Table/Artists\";\nimport Album from \"@/components/Table/Album\";\n\nimport {\n  IconCaretUp,\n  IconCaretDown,\n  IconSwitchVertical,\n  IconCloudDownload,\n  IconPlus,\n  IconPlayerPlay,\n} from \"@tabler/icons\";\n\nconst defaultSort = (a, b, sort) =>\n  String(a[sort.code]).localeCompare(String(b[sort.code]), \"zh-CN\") * sort.type;\n\nconst th = [\n  [\"音乐标题\", \"songName\", defaultSort],\n  [\"歌手\", \"artist\", defaultSort],\n  [\"专辑\", \"album\", defaultSort],\n  [\"格式\", \"\", defaultSort],\n  [\n    \"大小\",\n    \"fileSize\",\n    (a, b, sort) =>\n      (Number.parseFloat(a[sort.code]) - Number.parseFloat(b[sort.code])) *\n      sort.type,\n  ],\n  [\n    \"上传时间\",\n    \"addTime\",\n    (a, b, sort) => (a[sort.code] - b[sort.code]) * sort.type,\n  ],\n];\n\nconst BuildSort = (item, sort) => {\n  if (sort.name !== item)\n    return <IconSwitchVertical size={14} color=\"#f00\" stroke={1} />;\n  if (sort.type === -1)\n    return <IconCaretDown size={20} stroke={0} fill=\"#000\" />;\n  if (sort.type === 1) return <IconCaretUp size={12} stroke={0} fill=\"#000\" />;\n  if (sort.type === 0)\n    return <IconSwitchVertical size={14} color=\"#f00\" stroke={1} />;\n};\nconst Cloud = () => {\n  const [visibility, setVisibility] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(0);\n  const [maxSize, seMaxSize] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n\n  const [sort, setSort] = useState({\n    name: \"上传时间\",\n    type: -1,\n    code: \"addTime\",\n    callback: (a, b, sort) => (a[sort.code] - b[sort.code]) * sort.type,\n  });\n\n  const handleToggleVisibility = () => {\n    setVisibility(!visibility);\n  };\n\n  const handleInit = async () => {\n    try {\n      const {\n        data = [],\n        count = 0,\n        maxSize = 0,\n        size = 0,\n      } = await apiUserCloud({\n        limit: 100,\n      });\n      setData(data);\n      setCount(count);\n      seMaxSize(maxSize);\n      setSize(size);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSort = (obj) => {\n    if (sort.name !== obj.name) {\n      return setSort({\n        ...obj,\n        type: 1,\n      });\n    }\n    switch (sort.type) {\n      case -1:\n        return setSort({\n          name: \"\",\n          code: \"\",\n          callback: (a, b) => 0,\n          type: 0,\n        });\n      case 1:\n        return setSort({\n          ...obj,\n          type: -1,\n        });\n      default:\n        return setSort({\n          ...obj,\n          type: 1,\n        });\n    }\n  };\n\n  useEffect(() => {\n    handleInit();\n  }, []);\n\n  // useEffect(() => {\n  //   console.log('qwe');\n  //   setData(\n  //     data.sort((a, b) => sort.callback(a, b, sort)),\n  //   );\n  // }, [data, sort]);\n  return (\n    <div className=\"domManage overflow-auto h-full\">\n      <div className=\"domManage_header ui_header\">\n        <span className=\"domManage_header_title h1\">我的音乐云盘</span>\n      </div>\n      <div className=\"domCloud_info py-2.5 px-8\">\n        <span>云盘容量</span>\n        &nbsp;\n        <div\n          className=\"ui_process\"\n          style={{ \"--ratio\": size / maxSize || 0 }}\n        />\n        &nbsp;\n        <span className=\"num\">\n          {(size / 1024 / 1024 / 1024).toFixed(2)}\n          G/\n          {maxSize / 1024 / 1024 / 1024}G\n        </span>\n        &nbsp;\n        <span className=\"ml-8\">歌曲永久保存，随时随地多端畅听</span>\n        &nbsp;\n        <a\n          href=\"https://music.163.com/#/store/product/detail?id=34001\"\n          className=\"ui_link\"\n        >\n          扩容\n        </a>\n      </div>\n      <div className=\"ui_headerBar border-b\">\n        <div className=\"left space-x-2\">\n          <DomGroupPlay />\n          <button\n            type=\"button\"\n            className=\"flex-center ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full\"\n          >\n            <IconPlus size={20} />\n            &nbsp; 上传音乐\n          </button>\n        </div>\n        <div className=\"right\">\n          <Search {...{ search, setSearch, placeholder: \"搜索我的音乐云盘\" }} />\n        </div>\n      </div>\n      <div\n        className=\"overflow-auto max-h-full flex-auto\"\n        style={{ paddingLeft: 30, paddingRight: 20 }}\n      >\n        <div\n          className=\"domManage_table\"\n          style={{\n            \"--ui_grid_template\": \"36px / 30px 30px 8fr 3fr 3fr 2fr 2fr 4fr\",\n          }}\n        >\n          <div className=\"thead\">\n            <div className=\"tr grid ui_grid_template items-center\">\n              <div />\n              <div />\n              {th.map(([item, code, callback]) => (\n                <div\n                  key={item}\n                  className={classNames(\"cell px-1\", \"th\", {\n                    on: item === sort.name,\n                  })}\n                  onClick={() => handleSort({ item, code, callback })}\n                >\n                  {item}\n                  <span className=\"sort\">{BuildSort(item, sort)}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"tbody\">\n            {data.map((item, index) => (\n              <MenuCreate\n                type=\"song\"\n                item={item}\n                schema={[\n                  [\"播放\", \"下一首播放\"],\n                  [\"收藏到歌单\", \"分享\", \"下载\"],\n                  [\"删除\"],\n                ]}\n                key={item.songId}\n              >\n                <div\n                  className={classNames(\n                    \"tr grid ui_grid_template items-center hover:bg-gray-100 focus:outline-none focus:bg-gray-200\",\n                    index % 2 === 0 && \"bg-gray-50\"\n                  )}\n                  tabIndex={2}\n                >\n                  <div className=\"cell px-1 index text-gray-400\">\n                    <Rank index={index} id={item.songId} />\n                  </div>\n                  <div className=\"cell px-1 download\">\n                    <Download />\n                  </div>\n                  <div\n                    className=\"cell px-1 name truncate\"\n                    title={\n                      item.songName + item.simpleSong?.tns?.length > 0\n                        ? `（${item.simpleSong?.tns}）`\n                        : \"\"\n                    }\n                  >\n                    {item.songName}\n                    {item.simpleSong?.tns?.length > 0 && (\n                      <span className=\"text-gray-500\">\n                        {`（${item.simpleSong.tns}）`}\n                      </span>\n                    )}\n                  </div>\n                  <Artists className=\"px-1\" artists={item.simpleSong.ar} />\n                  <Album\n                    className=\"px-1\"\n                    name={item.album}\n                    id={item.simpleSong?.al?.id}\n                  />\n                  <div className=\"cell px-1 truncate uppercase\">\n                    {/(?<=\\.)(\\w*)$/.exec(item.fileName)[0]}\n                  </div>\n                  <div className=\"cell px-1 truncate\">\n                    {(item.fileSize / 1024 / 1024).toFixed(1)}\n                    MB\n                  </div>\n                  <div className=\"cell px-1 truncate text-gray-400\">\n                    {dayjs(item.addTime).format(\"YYYY-MM-DD\")}\n                  </div>\n                </div>\n              </MenuCreate>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"domManage_dialog\"\n        style={{ display: visibility ? \"\" : \"none\" }}\n      >\n        <button\n          type=\"button\"\n          className=\"close\"\n          onClick={handleToggleVisibility}\n        >\n          ×\n        </button>\n        <div className=\"title\">选择本地音乐文件夹</div>\n        <div className=\"tips\">将自动扫描您勾选的目录，文件增删实时同步。</div>\n        <ul>\n          <li>\n            <span className=\"checkbox\">\n              <input type=\"text\" />\n              <i className=\"material-icons\">checkbox</i>\n            </span>\n            暂时没法做\n          </li>\n        </ul>\n        <div className=\"actions\">\n          <button\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full red\"\n          >\n            确认\n          </button>\n          <button\n            type=\"button\"\n            className=\"ui_btn inline-flex items-center justify-center border px-3 h-8 rounded-full\"\n          >\n            添加文件\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default memo(Cloud);\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Cloud from \"./Cloud\";\nconst Router = () => {\n  return (\n    <Routes>\n      <Route index element={<Cloud />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n"],"names":["defaultSort","a","b","sort","String","code","localeCompare","type","th","Number","parseFloat","Cloud","useState","visibility","setVisibility","search","setSearch","data","setData","setCount","maxSize","seMaxSize","size","setSize","name","callback","setSort","handleInit","apiUserCloud","limit","count","console","log","useEffect","className","style","toFixed","href","IconPlus","placeholder","paddingLeft","paddingRight","map","item","key","classNames","on","onClick","obj","handleSort","IconSwitchVertical","color","stroke","IconCaretDown","fill","IconCaretUp","BuildSort","index","MenuCreate","schema","songId","tabIndex","Rank","id","Download","title","songName","simpleSong","tns","length","Artists","artists","ar","Album","album","al","exec","fileName","fileSize","dayjs","addTime","format","display","memo","Routes","Route","element"],"sourceRoot":""}