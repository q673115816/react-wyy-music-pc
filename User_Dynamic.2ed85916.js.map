{"version":3,"file":"User_Dynamic.2ed85916.js","mappings":"iPAQA,SAAeA,EAAAA,EAAAA,OAAK,YAAa,IAAVC,EAAU,EAAVA,IACrB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAASC,EAAAA,EAAAA,SAAQ,GACvB,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAUH,EAAAA,EAAAA,SAAO,GACjBI,GAAYJ,EAAAA,EAAAA,UACZK,GAAcL,EAAAA,EAAAA,UAEdM,EAAc,mCAAG,gHAEOC,EAAAA,EAAAA,IAAc,CACtCZ,IAAAA,IAHiB,gBAEXM,EAFW,EAEXA,QAGRC,EAAWD,GALQ,gDAOnBO,QAAQC,IAAR,MAPmB,yDAAH,qDAWdC,EAAU,mCAAG,6FACZP,EAAQQ,QADI,yCACY,MADZ,iCAG0BC,EAAAA,EAAAA,IAAa,CACpDjB,IAAAA,EACAkB,SAAUd,EAAOY,UALJ,gBAGPG,EAHO,EAGPA,OAAQC,EAHD,EAGCA,KAAMF,EAHP,EAGOA,SAItBV,EAAQQ,QAAUI,EAClBhB,EAAOY,QAAUE,EACjBf,GAAQ,SAACkB,GAAD,wBAAcA,IAAd,OAAuBF,OAThB,kDAWfN,QAAQC,IAAR,MAXe,0DAAH,qDAqBhB,OAPAQ,EAAAA,EAAAA,GAAYP,EAAYN,EAAWC,IACnCa,EAAAA,EAAAA,YAAU,WACJrB,EAAKsB,OAAS,GAChBrB,EAAQ,IAEVQ,MACC,CAACX,IAEF,yBAAKyB,UAAU,uBAAuBC,IAAKjB,GACzC,yBAAKgB,UAAU,uCAAf,UACMnB,EAAQqB,SADd,QAGA,yBAAKF,UAAU,wBACb,yBAAKA,UAAU,aACZvB,EAAKsB,OAAS,EAAI,kBAAC,IAAD,CAAYI,KAAM1B,IACjC,yBAAKuB,UAAU,SAAf,SAEN,yBAAKC,IAAKhB,IAERF,EAAQQ,SACN,yBAAKS,UAAU,eACb,kBAAC,IAAD","sources":["webpack://wyy/./src/pages/User/Dynamic/index.tsx"],"sourcesContent":["import React, {\n  useEffect, useState, memo, useRef,\n} from 'react';\nimport { apiUserEvent, apiUserDetail } from '@/api';\nimport DomDynamic from '@/components/Dynamic';\nimport useInfinite from '@/hooks/useInfinite';\nimport DomLoading from '@/components/Loading';\n\nexport default memo(({ uid }) => {\n  const [data, setData] = useState([]);\n  const timing = useRef(-1);\n  const [profile, setProfile] = useState({});\n  const hasmore = useRef(true);\n  const DomScroll = useRef();\n  const DomObserver = useRef();\n\n  const handlePrevInit = async () => {\n    try {\n      const { profile } = await apiUserDetail({\n        uid,\n      });\n      setProfile(profile);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleInit = async () => {\n    if (!hasmore.current) return null;\n    try {\n      const { events, more, lasttime } = await apiUserEvent({\n        uid,\n        lasttime: timing.current,\n      });\n      hasmore.current = more;\n      timing.current = lasttime;\n      setData((prev) => [...prev, ...events]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useInfinite(handleInit, DomScroll, DomObserver);\n  useEffect(() => {\n    if (data.length > 0) {\n      setData([]);\n    }\n    handlePrevInit();\n  }, [uid]);\n  return (\n    <div className=\"h-full overflow-auto\" ref={DomScroll}>\n      <div className=\"h1 domUser_subpage_header ui_header\">\n        {`${profile.nickname}的动态`}\n      </div>\n      <div className=\"domUser_dynamic_main\">\n        <div className=\"list px-8\">\n          {data.length > 0 ? <DomDynamic list={data} />\n            : <div className=\"empty\">暂无动态</div>}\n        </div>\n        <div ref={DomObserver} />\n        {\n          hasmore.current && (\n            <div className=\"flex-center\">\n              <DomLoading />\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n});\n"],"names":["memo","uid","useState","data","setData","timing","useRef","profile","setProfile","hasmore","DomScroll","DomObserver","handlePrevInit","apiUserDetail","console","log","handleInit","current","apiUserEvent","lasttime","events","more","prev","useInfinite","useEffect","length","className","ref","nickname","list"],"sourceRoot":""}