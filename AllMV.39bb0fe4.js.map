{"version":3,"file":"AllMV.39bb0fe4.js","mappings":"qlCAQA,IAAMA,EAAU,CACd,CAAC,OAAQ,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OAC9C,CAAC,OAAQ,KAAM,CAAC,KAAM,MAAO,KAAM,MAAO,SAC1C,CAAC,QAAS,KAAM,CAAC,OAAQ,KAAM,QAG3BC,EAA2C,CAC/CC,KAAM,KACNC,KAAM,KACNC,MAAO,QAGT,SAAeC,EAAAA,EAAAA,OAAK,WAClB,IADwB,EAChBC,GAAWC,EAAAA,EAAAA,eAAXD,OAGFE,GAASC,EAAAA,EAAAA,QAAO,GAEhBC,EAAc,IAAIC,gBAAgBL,GAClCM,GAAYH,EAAAA,EAAAA,QAAO,MACnBI,GAAcJ,EAAAA,EAAAA,QAAO,MARH,E,25BAAA,CASHC,GATG,IASxB,2BAAkC,0BAAtBI,EAAsB,KAAnBC,EAAmB,KAChCd,EAAca,GAAKC,GAVG,8BAaxB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAU,mCAAG,gHASQC,EAAAA,EAAAA,IAAS,EAAD,KAC1BnB,GAD0B,IAE7BoB,MAvBQ,GAwBRb,OAAQA,EAAOc,WAZF,gBASPL,EATO,EASPA,KAKRT,EAAOc,SA1BG,GA2BVJ,GAAQ,SAACK,GAAD,wBACHA,IADG,OAEHN,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,UAApB,MAAwD,CAClEH,GAAAA,EACAE,MAAAA,EACAE,SAHU,EAA+BA,SAIzCD,UAAAA,EACAE,MAAOJ,EACPK,QANU,EAAyCC,QAMlCR,KAAI,kBAAqC,CACxDS,OADmB,EAAGR,GAEtBS,SAFmB,EAAeR,kBAvBzB,gDA8BfS,QAAQC,IAAR,MA9Be,yDAAH,qDAiDhB,OAhBAC,EAAAA,EAAAA,GAAYlB,EAAYP,EAAWC,EAAa,CAACP,KAUjDgC,EAAAA,EAAAA,YAAU,WACRpB,EAAQ,IACRV,EAAOc,QAAU,IAEhB,CAAChB,IAGF,yBAAKiC,UAAU,gCAAgCC,IAAK5B,GAClD,yBAAK2B,UAAU,6BACb,kBAAC,EAAAE,KAAD,CAAMC,GAAG,KAAKH,UAAU,YAAxB,SAIF,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,aACZvC,EAAQwB,KAAI,SAACmB,GAAD,OACX,yBAAKJ,UAAU,kBAAkBK,IAAKD,EAAO,IAC3C,yBAAKJ,UAAU,kBAAkBI,EAAO,GAAxC,KACA,yBAAKJ,UAAU,iBACZI,EAAO,GAAGnB,KAAI,SAACqB,GAAD,OACb,yBAAKN,UAAU,mBAAmBK,IAAKC,GACrC,kBAAC,EAAAJ,KAAD,CACEC,GAAE,iBAAY,IAAI/B,gBAAJ,OACTV,IADS,UAEN0C,EAAO,GAAKE,MAEpBN,UAAWO,GAAAA,CACT,oDACAD,IAAS5C,EAAc0C,EAAO,IAC1B,yBACA,uBAGLE,aAQf,yBAAKN,UAAU,QACb,kBAAC,IAAD,CAAcQ,KAAM9B,KAEtB,yBAAKuB,IAAK3B","sources":["webpack://wyy/./src/pages/AllMV/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, memo } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { useQuery } from \"react-query\";\nimport DomGridVideo from \"@/components/GridVideo\";\nimport useInfinite from \"@/hooks/useInfinite\";\nimport { apiMVAll } from \"@/api\";\n\nconst filters = [\n  [\"area\", \"地区\", [\"全部\", \"内地\", \"港台\", \"欧美\", \"韩国\", \"日本\"]],\n  [\"type\", \"类型\", [\"全部\", \"官方版\", \"原声\", \"现场版\", \"网易出品\"]],\n  [\"order\", \"排序\", [\"上升最快\", \"最热\", \"最新\"]],\n];\n\nconst defaultSearch: { [key: string]: string } = {\n  area: \"全部\",\n  type: \"全部\",\n  order: \"上升最快\",\n};\n\nexport default memo(() => {\n  const { search } = useLocation();\n\n  const limit = 30;\n  const offset = useRef(0);\n\n  const queryString = new URLSearchParams(search);\n  const domScroll = useRef(null);\n  const domObserver = useRef(null);\n  for (const [k, v] of queryString) {\n    defaultSearch[k] = v;\n  }\n\n  const [data, setData] = useState([]);\n\n  const handleInit = async () => {\n    try {\n      // const {data} = useQuery('allmv', async () => {\n      //   return await apiMVAll({\n      //     ...defaultSearch,\n      //     limit,\n      //     offset: offset.current,\n      //   });\n      // })\n      const { data } = await apiMVAll({\n        ...defaultSearch,\n        limit,\n        offset: offset.current,\n      });\n      offset.current += limit;\n      setData((prev) => [\n        ...prev,\n        ...data.map(({ id, name, cover, playCount, duration, artists }) => ({\n          id,\n          cover,\n          duration,\n          playCount,\n          title: name,\n          creator: artists.map(({ id: userId, name: userName }) => ({\n            userId,\n            userName,\n          })),\n        })),\n      ]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useInfinite(handleInit, domScroll, domObserver, [search]);\n\n  // useEffect(() => {\n  //   // handleInit();\n  //   handleIo();\n  //   return () => {\n  //     handleUnIo();\n  //   };\n  // }, [search]);\n\n  useEffect(() => {\n    setData([]);\n    offset.current = 0;\n    // handleInit();\n  }, [search]);\n\n  return (\n    <div className=\"domAllMV overflow-auto h-full\" ref={domScroll}>\n      <div className=\"domAllMV_header ui_header\">\n        <Link to=\"./\" className=\"h1 title\">\n          全部MV\n        </Link>\n      </div>\n      <div className=\"domAllMV_main px-8 flex-auto\">\n        <div className=\"ui_filter\">\n          {filters.map((filter) => (\n            <div className=\"row flex my-2.5\" key={filter[1]}>\n              <div className=\"name flex-none\">{filter[1]}:</div>\n              <div className=\"list divide-x\">\n                {filter[2].map((item) => (\n                  <div className=\"item flex-center\" key={item}>\n                    <Link\n                      to={`/allmv?${new URLSearchParams({\n                        ...defaultSearch,\n                        ...{ [filter[0]]: item },\n                      })}`}\n                      className={classNames(\n                        \"btn rounded-full leading-5 px-3 whitespace-nowrap\",\n                        item === defaultSearch[filter[0]]\n                          ? \"bg-red-50 text-red-500\"\n                          : \"ui_text_gray_hover\"\n                      )}\n                    >\n                      {item}\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"py-1\">\n          <DomGridVideo list={data} />\n        </div>\n        <div ref={domObserver} />\n      </div>\n    </div>\n  );\n});\n"],"names":["filters","defaultSearch","area","type","order","memo","search","useLocation","offset","useRef","queryString","URLSearchParams","domScroll","domObserver","k","v","useState","data","setData","handleInit","apiMVAll","limit","current","prev","map","id","name","cover","playCount","duration","title","creator","artists","userId","userName","console","log","useInfinite","useEffect","className","ref","Link","to","filter","key","item","classNames","list"],"sourceRoot":""}