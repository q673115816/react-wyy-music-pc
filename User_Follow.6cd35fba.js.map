{"version":3,"file":"User_Follow.6cd35fba.js","mappings":"qUAeA,SAAeA,EAAAA,EAAAA,OAAK,YAAa,IAAVC,EAAU,EAAVA,IACrBC,QAAQC,IAAI,eACZ,IAAMC,GAAWC,EAAAA,EAAAA,eACjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACMC,GAAUC,EAAAA,EAAAA,cAAY,qBAAGD,WACzBE,GAASC,EAAAA,EAAAA,UAAQ,kBAAMH,EAAQJ,QAAQQ,SAAWC,OAAOf,KAAM,CAACA,IAChEgB,GAAYC,EAAAA,EAAAA,UACZC,GAAcD,EAAAA,EAAAA,UAEdE,GAASF,EAAAA,EAAAA,QAAO,GAChBG,GAAUH,EAAAA,EAAAA,SAAO,GACjBI,EAAc,mCAAG,gHAEOC,EAAAA,EAAAA,IAAc,CACtCtB,IAAAA,IAHiB,gBAEXM,EAFW,EAEXA,QAGRC,EAAWD,GALQ,gDAOnBL,QAAQC,IAAR,MAPmB,yDAAH,qDAWdqB,EAAa,mCAAG,2FACfH,EAAQI,QADO,2EAGaC,EAAAA,EAAAA,IAAe,CAC5CzB,IAAAA,EACA0B,MAnBQ,GAoBRP,OAAQA,EAAOK,UANC,gBAGVG,EAHU,EAGVA,OAAQC,EAHE,EAGFA,KAKhBT,EAAOK,SAtBG,GAuBVJ,EAAQI,QAAUI,EAClBnB,GAAQ,SAACoB,GAAD,wBAAcA,IAAd,OAAuBF,OAVb,kDAYlB1B,QAAQC,IAAR,MAZkB,0DAAH,qDAgBb4B,GAAcC,EAAAA,EAAAA,aAAW,mCAAC,WAAOC,GAAP,iGAEVC,EAAAA,EAAAA,IAAU,CAC1BD,GAAAA,EACAE,EAAG,IAJuB,iBAE5B,UAIAzB,EAAQ0B,GAAAA,EAAQ,SAACC,GACfA,EAAMA,EAAMC,WAAU,SAACC,GAAD,OAAUA,EAAKxB,SAAWkB,MAAKO,UAAW,MAPtC,gDAU5BtC,QAAQC,IAAR,MAV4B,yDAAD,sDAY5B,IAeH,OAJAsC,EAAAA,EAAAA,YAAU,WACRnB,MACC,KACHoB,EAAAA,EAAAA,GAAYlB,EAAeP,EAAWE,GAGpC,yBAAKwB,UAAU,0CAA0CC,IAAK3B,GAC5D,yBAAK0B,UAAU,uCACb,kBAAC,EAAAE,KAAD,CAAMC,GAAG,MACNvC,EAAQwC,UAFb,OAMA,yBAAKJ,UAAU,2BACb,kBAAC,IAAD,CACE9B,OAAQA,EACRmC,KAAMvC,EACNsB,YAAaA,EACbkB,aA3Ba,SAAChD,EAAK8C,GACzB3C,GAAS8C,EAAAA,EAAAA,yBACT9C,GAAS+C,EAAAA,EAAAA,sBAAqB,CAC5BlD,IAAAA,EACA8C,SAAAA,EACAK,uBAAuB,OAwBnB,yBAAKT,UAAU,SAAf,UAIF,yBAAKC,IAAKzB,IAERE,EAAQI,SAER,yBAAKkB,UAAU,eACb,kBAAC,IAAD","sources":["webpack://wyy/./src/pages/User/Follow/index.tsx"],"sourcesContent":["import React, {\n  useRef,\n  memo, useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport { apiUserDetail, apiUserFollows, apiFollow } from '@/api';\nimport { Link } from 'react-router-dom';\nimport produce from 'immer';\n\nimport { setPopupLetterToggle } from '@/reducers/mask/slice';\nimport { setMsgPrivateHistory } from '@/reducers/letter/slice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DomLoading from '@/components/Loading';\nimport useInfinite from '@/hooks/useInfinite';\nimport DomCardList from '../components/CardList';\n\nexport default memo(({ uid }) => {\n  console.log('user_follow');\n  const dispatch = useDispatch();\n  const [profile, setProfile] = useState({});\n  const [data, setData] = useState([]);\n  const account = useSelector(({ account }) => account);\n  const isSelf = useMemo(() => account.profile.userId === Number(uid), [uid]);\n  const DomScroll = useRef();\n  const DomObserver = useRef();\n  const limit = 30;\n  const offset = useRef(0);\n  const hasMore = useRef(true);\n  const handlePrveInit = async () => {\n    try {\n      const { profile } = await apiUserDetail({\n        uid,\n      });\n      setProfile(profile);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleAddData = async () => {\n    if (!hasMore.current) return;\n    try {\n      const { follow, more } = await apiUserFollows({\n        uid,\n        limit,\n        offset: offset.current,\n      });\n      offset.current += limit;\n      hasMore.current = more;\n      setData((prev) => [...prev, ...follow]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClick = useCallback(async (id) => {\n    try {\n      const { } = await apiFollow({\n        id,\n        t: 1,\n      });\n      setData(produce((draft) => {\n        draft[draft.findIndex((item) => item.userId === id)].followed = true;\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const handleLetter = (uid, nickname) => {\n    dispatch(setPopupLetterToggle());\n    dispatch(setMsgPrivateHistory({\n      uid,\n      nickname,\n      showMsgPrivateHistory: true,\n    }));\n  };\n\n  useEffect(() => {\n    handlePrveInit();\n  }, []);\n  useInfinite(handleAddData, DomScroll, DomObserver);\n  return (\n\n    <div className=\"domUser_followlist h-full overflow-auto\" ref={DomScroll}>\n      <div className=\"h1 domUser_subpage_header ui_header\">\n        <Link to=\"./\">\n          {profile.nickname}\n        </Link>\n        的关注\n      </div>\n      <div className=\"domUser_followlist_main\">\n        <DomCardList\n          isSelf={isSelf}\n          list={data}\n          handleClick={handleClick}\n          handleLetter={handleLetter}\n        >\n          <div className=\"empty\">\n            还没有关注\n          </div>\n        </DomCardList>\n        <div ref={DomObserver} />\n        {\n          hasMore.current\n          && (\n          <div className=\"flex-center\">\n            <DomLoading />\n          </div>\n          )\n        }\n      </div>\n    </div>\n  );\n});\n"],"names":["memo","uid","console","log","dispatch","useDispatch","useState","profile","setProfile","data","setData","account","useSelector","isSelf","useMemo","userId","Number","DomScroll","useRef","DomObserver","offset","hasMore","handlePrveInit","apiUserDetail","handleAddData","current","apiUserFollows","limit","follow","more","prev","handleClick","useCallback","id","apiFollow","t","produce","draft","findIndex","item","followed","useEffect","useInfinite","className","ref","Link","to","nickname","list","handleLetter","setPopupLetterToggle","setMsgPrivateHistory","showMsgPrivateHistory"],"sourceRoot":""}