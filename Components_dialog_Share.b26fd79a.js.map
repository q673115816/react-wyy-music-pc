{"version":3,"file":"Components_dialog_Share.b26fd79a.js","mappings":"gQAgBMA,EAAQ,CACZC,MAAO,MAGT,mBACE,IAAMC,GAAWC,EAAAA,EAAAA,eAEjB,GAKIC,EAAAA,EAAAA,cAAY,qBAAGC,QAJjBC,EADF,EACEA,sBACAC,EAFF,EAEEA,gBACAC,EAHF,EAGEA,kBACAC,EAJF,EAIEA,gBAEMC,GAAYN,EAAAA,EAAAA,cAAY,qBAAGO,WAA3BD,QACAE,GAAYR,EAAAA,EAAAA,cAAY,qBAAGS,UAA3BD,QACFE,EAAW,GAAH,OAAMF,EAAN,YAAiBL,EAAjB,eAAuCC,EAAvC,mBAAmEE,EAAQK,QAEnFC,EAAc,mCAAG,+EAKrBC,EAAAA,EAAAA,GAAYH,GAAU,WACpBZ,GAASgB,EAAAA,EAAAA,UAAS,cAEpBhB,GAASiB,EAAAA,EAAAA,mBARY,2CAAH,qDAepB,OAAKb,EAEH,kBAAC,IAAD,CAAWc,GAAG,cAAcC,MAAM,MAChC,yBAAKC,UAAU,oCACb,6BACE,4BAAQC,KAAK,SAASD,UAAU,0BAC9B,uBAAGA,UAAU,OACX,kBAAC,KAAD,CAAWE,QAAM,KAFrB,aAOF,6BACE,4BAAQD,KAAK,SAASD,UAAU,0BAC9B,uBAAGA,UAAU,OACX,kBAAC,KAAD,CAAUE,QAAM,KAFpB,SAOF,6BACE,4BAAQD,KAAK,SAASD,UAAU,yBAAyBG,QAzB3C,WAEpBvB,GAASwB,EAAAA,EAAAA,2BAwBD,uBAAGJ,UAAU,OACX,kBAAC,KAAD,CAAUE,QAAM,KAFpB,SAOF,6BACE,uBAAGG,OAAO,SAASC,KAAI,0EAAqEd,EAArE,4BAAiGd,EAAMO,GAAvG,YAA2HE,EAAgBoB,KAA3I,oBAA2JpB,EAAgBqB,GAAGC,QAAO,SAACC,EAAMC,GAAP,gBAAmBD,EAAnB,YAA2BC,EAAKJ,QAAQ,IAAIK,MAAM,GAAvO,iBAAkPzB,EAAgB0B,GAAGC,OAArQ,gCAA2Sd,UAAU,0BAC1U,uBAAGA,UAAU,OACX,kBAAC,KAAD,CAAUE,QAAM,KAFpB,SAOF,6BACE,uBAAGI,KAAK,IAAIN,UAAU,0BACpB,uBAAGA,UAAU,OACX,kBAAC,KAAD,CAAUE,QAAM,KAFpB,SAOF,6BACE,uBAAGI,KAAK,IAAIN,UAAU,0BACpB,uBAAGA,UAAU,OACX,kBAAC,KAAD,CAAUE,QAAM,KAFpB,OAOF,6BACE,4BACEC,QAAST,EACTO,KAAK,SACLD,UAAU,0BAEV,uBAAGA,UAAU,OACX,kBAAC,KAAD,CAAUE,QAAM,KANpB,WArD2B","sources":["webpack://wyy/./src/components/Dialog/Share/index.tsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  SymbolWYY,\n  SymbolSX,\n  SymbolWX,\n  SymbolQQ,\n  SymbolQZ,\n  SymbolWB,\n  SymbolLJ,\n} from '@/components/Symbol';\nimport { setDialogReset, setDialogShareWXShow, setToast } from '@/reducers/mask/slice';\nimport HOCDialog from '../Dialog';\nimport './style.scss';\nimport useCopyLink from '@/hooks/useCopyLink';\n\nconst types = {\n  songs: '单曲',\n};\n\nexport default () => {\n  const dispatch = useDispatch();\n  // const [visibilty, setVisibilty] = useState(false);\n  const {\n    dialogShareVisibility,\n    contextMenuType,\n    contextMenuItemId,\n    contextMenuItem,\n  } = useSelector(({ mask }) => mask);\n  const { profile } = useSelector(({ account }) => account);\n  const { baseUrl } = useSelector(({ common }) => common);\n  const ShareUrl = `${baseUrl}/${contextMenuType}?id=${contextMenuItemId}&userId=${profile.userId}`;\n\n  const handleCopyLink = async () => {\n    // const data = new DataTransfer();\n    // data.items.add('text/plain', ShareUrl);\n    // await navigator.clipboard.writeText(ShareUrl);\n    // alert('链接复制成功');\n    useCopyLink(ShareUrl, () => {\n      dispatch(setToast('复制链接成功'));\n    });\n    dispatch(setDialogReset());\n  };\n\n  const handleShareWX = () => {\n    // dispatch(setDialogReset());\n    dispatch(setDialogShareWXShow());\n  };\n  if (!dialogShareVisibility) return null;\n  return (\n    <HOCDialog id=\"dialogShare\" title=\"分享\">\n      <div className=\"list divide-y divide-fuchsia-300\">\n        <div>\n          <button type=\"button\" className=\"item flex items-center\">\n            <i className=\"ico\">\n              <SymbolWYY active />\n            </i>\n            分享到云音乐动态\n          </button>\n        </div>\n        <div>\n          <button type=\"button\" className=\"item flex items-center\">\n            <i className=\"ico\">\n              <SymbolSX active />\n            </i>\n            私信分享\n          </button>\n        </div>\n        <div>\n          <button type=\"button\" className=\"item flex items-center\" onClick={handleShareWX}>\n            <i className=\"ico\">\n              <SymbolWX active />\n            </i>\n            微信好友\n          </button>\n        </div>\n        <div>\n          <a target=\"_block\" href={`https://connect.qq.com/widget/shareqq/index.html?site=网易云音乐&url=${ShareUrl}&from=qq&title=分享${types[contextMenuType]}：${contextMenuItem.name}&summary=${contextMenuItem.ar.reduce((prev, curr) => `${prev}/${curr.name}`, '').slice(1)}&pics=${contextMenuItem.al.picUrl}?imageView&thumbnail=120y120`} className=\"item flex items-center\">\n            <i className=\"ico\">\n              <SymbolQQ active />\n            </i>\n            QQ好友\n          </a>\n        </div>\n        <div>\n          <a href=\"#\" className=\"item flex items-center\">\n            <i className=\"ico\">\n              <SymbolQZ active />\n            </i>\n            QQ空间\n          </a>\n        </div>\n        <div>\n          <a href=\"#\" className=\"item flex items-center\">\n            <i className=\"ico\">\n              <SymbolWB active />\n            </i>\n            微博\n          </a>\n        </div>\n        <div>\n          <button\n            onClick={handleCopyLink}\n            type=\"button\"\n            className=\"item flex items-center\"\n          >\n            <i className=\"ico\">\n              <SymbolLJ active />\n            </i>\n            复制链接\n          </button>\n        </div>\n      </div>\n    </HOCDialog>\n  );\n};\n\n// export default HOCDialog(Share, 'dialogShare', '分享');\n"],"names":["types","songs","dispatch","useDispatch","useSelector","mask","dialogShareVisibility","contextMenuType","contextMenuItemId","contextMenuItem","profile","account","baseUrl","common","ShareUrl","userId","handleCopyLink","useCopyLink","setToast","setDialogReset","id","title","className","type","active","onClick","setDialogShareWXShow","target","href","name","ar","reduce","prev","curr","slice","al","picUrl"],"sourceRoot":""}