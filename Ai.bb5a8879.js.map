{"version":3,"file":"Ai.bb5a8879.js","mappings":"sLAUMA,EAAU,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,eACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAKC,YAAW,WAChBJ,EAAO,EACTC,EAAQD,EAAO,GAEfF,MAED,KACH,OAAO,WACLO,aAAaF,MAEd,CAACH,IAEF,yBAAKM,UAAU,8BACb,yBAAKH,GAAG,UAAUG,UAAU,iBAC1B,yBAAKA,UAAU,4DACb,kBAAC,EAAAC,eAAD,CAAgBC,KAAM,OAG1B,6BAEKR,EAAO,GAAM,GAAKA,EAAO,GAAM,GAAKA,EAAO,GAAM,EAC9C,WACA,iBAJR,WAMOA,EANP,OAQA,4BACES,KAAK,SACLH,UAAU,4DACVI,QAASZ,GAHX,UAWAa,EAAc,SAAC,GAA+B,IAA7Bb,EAA6B,EAA7BA,eACfc,GAAWC,EAAAA,EAAAA,eACjB,OACE,yBAAKP,UAAU,8BACb,yBAAKQ,QAAQ,gBAAgBC,MAAM,MAAMC,OAAO,MAAMV,UAAU,QAC9D,0BAAMW,EAAE,6DAA6DC,KAAK,YAC1E,0BAAMD,EAAE,wHAAwHC,KAAK,YACrI,0BAAMD,EAAE,8EAA8EC,KAAK,UAAU,OAAK,UAC1G,0BAAMD,EAAE,4EAA4EC,KAAK,YACzF,0BAAMD,EAAE,mRAAmRC,KAAK,YAChS,0BAAMD,EAAE,2DAA2DC,KAAK,YACxE,0BAAMD,EAAE,yDAAyDC,KAAK,YACtE,0BAAMD,EAAE,+KAA+KC,KAAK,YAC5L,0BAAMD,EAAE,0GAA0GC,KAAK,YACvH,0BAAMD,EAAE,gRAAgRC,KAAK,YAC7R,0BAAMD,EAAE,uRAAuRC,KAAK,UAAU,OAAK,UACnT,0BAAMD,EAAE,kJAAkJC,KAAK,aAEjK,yBAAKZ,UAAU,aAAf,yBAGA,4BACEG,KAAK,SACLH,UAAU,8DACVI,QAASZ,GAHX,QAOA,4BACEW,KAAK,SACLH,UAAU,6BACVI,QAAS,kBAAME,GAASO,EAAAA,EAAAA,UAAS,kBAHnC,UAWN,SAAeC,EAAAA,EAAAA,OAAK,WAClB,IAAMR,GAAWC,EAAAA,EAAAA,eACjB,GAA4Bd,EAAAA,EAAAA,WAAS,GAArC,eAAOsB,EAAP,KAAeC,EAAf,KAIA,OACE,yBAAKhB,UAAU,wCACb,yBAAKA,UAAU,oDACb,yBAAKA,UAAU,MAAf,QACA,4BACEG,KAAK,SACLH,UAAU,oBACVI,QAAS,kBAAME,GAASO,EAAAA,EAAAA,UAAS,sBAEjC,kBAAC,EAAAI,eAAD,CAAgBf,KAAM,GAAIgB,OAAQ,IALpC,aASF,yBAAKlB,UAAU,yDAEXe,EACI,kBAACxB,EAAD,CAASC,eAAgB,kBAAMwB,GAAU,MACzC,kBAACX,EAAD,CAAab,eAAgB,kBAAMwB,GAAU","sources":["webpack://wyy/./src/pages/AI/AI.tsx"],"sourcesContent":["import React, {\n  useState, memo, useEffect,\n} from 'react';\nimport { IconFileImport, IconMicrophone } from '@tabler/icons';\nimport './style.scss';\nimport { useDispatch } from 'react-redux';\nimport { setToast } from '@/reducers/mask/slice';\n\ntype IProps = { handleCallback: () => void }\n\nconst DomWait = ({ handleCallback }: IProps) => {\n  const [time, setTime] = useState(15);\n  useEffect(() => {\n    const id = setTimeout(() => {\n      if (time > 1) {\n        setTime(time - 1);\n      } else {\n        handleCallback();\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(id);\n    };\n  }, [time]);\n  return (\n    <div className=\"flex flex-col items-center\">\n      <div id=\"ai_work\" className=\"p-32 relative\">\n        <div className=\"flex-center rounded-full text-white bg-red-500 w-32 h-32\">\n          <IconMicrophone size={64} />\n        </div>\n      </div>\n      <div>\n        {\n          (time % 2 === 0 || time % 3 === 0 || time % 5 === 0)\n            ? '外部声源无法识别'\n            : '正在识别电脑中正在播放的音乐'\n        }\n        {`(${time}s)`}\n      </div>\n      <button\n        type=\"button\"\n        className=\"mt-4 text-base hover:bg-gray-100 rounded border h-10 w-28\"\n        onClick={handleCallback}\n      >\n        停止识别\n      </button>\n    </div>\n  );\n};\n\nconst DomRejected = ({ handleCallback }: IProps) => {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"flex flex-col items-center\">\n      <svg viewBox=\"0 0 1024 1024\" width=\"256\" height=\"256\" className=\"mb-4\">\n        <path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#FD8469\" />\n        <path d=\"M110.462992 829.68189C203.993701 948.207874 349.127559 1024 512 1024s307.2-75.792126 401.537008-194.31811H110.462992z\" fill=\"#F1543F\" />\n        <path d=\"M586.179528 817.587402l14.513385-89.499213h-177.385826l14.513385 89.499213z\" fill=\"#FFFFFF\" p-id=\"17925\" />\n        <path d=\"M595.855118 759.533858l4.837795-31.445669h-177.385826l4.837795 31.445669z\" fill=\"#E6E9EE\" />\n        <path d=\"M815.974803 740.182677H208.025197c-12.900787 0-23.382677-10.48189-23.382677-23.382677V278.979528c0-12.900787 10.48189-23.382677 23.382677-23.382678h608.755905c12.900787 0 23.382677 10.48189 23.382678 23.382678v437.014173c0 12.900787-10.48189 24.188976-24.188977 24.188976z\" fill=\"#FFFFFF\" />\n        <path d=\"M227.376378 298.330709h569.247244v351.546456H227.376378z\" fill=\"#84DBFF\" />\n        <path d=\"M227.376378 298.330709h569.247244v8.062992H227.376378z\" fill=\"#54C0EB\" />\n        <path d=\"M635.36378 829.68189H388.63622v-12.094488c0-12.900787 10.48189-22.576378 22.576378-22.576378h200.768504c12.900787 0 22.576378 10.48189 22.576378 22.576378v12.094488h0.8063z\" fill=\"#E6E9EE\" />\n        <path d=\"M512 690.998425m-25.801575 0a25.801575 25.801575 0 1 0 51.60315 0 25.801575 25.801575 0 1 0-51.60315 0Z\" fill=\"#E6E9EE\" />\n        <path d=\"M681.322835 553.927559H362.834646c-6.450394 0-12.094488-5.644094-12.094489-12.094488v-166.097638c0-6.450394 5.644094-12.094488 12.094489-12.094488h318.488189c6.450394 0 12.094488 5.644094 12.094488 12.094488v166.097638c0 6.450394-5.644094 12.094488-12.094488 12.094488z\" fill=\"#E6E9EE\" />\n        <path d=\"M375.735433 385.411024h292.686614v13.707086H375.735433zM375.735433 418.469291h292.686614v13.707087H375.735433zM375.735433 452.333858h292.686614v13.707087H375.735433zM375.735433 485.392126h292.686614v13.707087H375.735433zM375.735433 518.450394h166.097638v13.707086h-166.097638z\" fill=\"#CED5E0\" p-id=\"17933\" />\n        <path d=\"M683.741732 610.368504l24.995276-24.995276-50.796851-51.603149 41.12126-24.188977-108.044094-17.738582 17.738583 108.044094 24.188976-41.12126z\" fill=\"#324A5E\" />\n      </svg>\n      <div className=\"text-base\">\n        未识别出音乐，仅支持当前电脑正在播放的音乐\n      </div>\n      <button\n        type=\"button\"\n        className=\"text-sm ui_theme_bg_color text-white py-2 px-6 rounded mt-4\"\n        onClick={handleCallback}\n      >\n        重新识别\n      </button>\n      <button\n        type=\"button\"\n        className=\"mt-3 text-blue-400 text-sm\"\n        onClick={() => dispatch(setToast('反馈成功，感谢您的反馈'))}\n      >\n        提交反馈\n      </button>\n    </div>\n  );\n};\n\nexport default memo(() => {\n  const dispatch = useDispatch();\n  const [listen, setListen] = useState(true);\n  /**\n   * 应该不会有成功吧？\n   */\n  return (\n    <div className=\"domAi py-5 px-8 flex flex-col h-full\">\n      <div className=\"domAi_header flex justify-between items-baseline\">\n        <div className=\"h1\">听歌识曲</div>\n        <button\n          type=\"button\"\n          className=\"flex items-center\"\n          onClick={() => dispatch(setToast('创建【听歌识曲】图标至桌面成功'))}\n        >\n          <IconFileImport size={16} stroke={1} />\n          创建桌面快捷方式\n        </button>\n      </div>\n      <div className=\"flex-auto domAi_main flex items-center justify-center\">\n        {\n          listen\n            ? <DomWait handleCallback={() => setListen(false)} />\n            : <DomRejected handleCallback={() => setListen(true)} />\n        }\n      </div>\n    </div>\n  );\n});\n"],"names":["DomWait","handleCallback","useState","time","setTime","useEffect","id","setTimeout","clearTimeout","className","IconMicrophone","size","type","onClick","DomRejected","dispatch","useDispatch","viewBox","width","height","d","fill","setToast","memo","listen","setListen","IconFileImport","stroke"],"sourceRoot":""}