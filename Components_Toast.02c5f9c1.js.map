{"version":3,"file":"Components_Toast.02c5f9c1.js","mappings":"gNASA,SAAeA,EAAAA,EAAAA,OAAK,WAClB,IAAQC,GAAeC,EAAAA,EAAAA,cAAY,qBAAGC,QAA9BF,WAEFG,GAAOC,EAAAA,EAAAA,QAAO,MACdC,GAAQD,EAAAA,EAAAA,UACRE,GAAWF,EAAAA,EAAAA,UACXG,GAAWC,EAAAA,EAAAA,eACXC,EAAgB,SAAhBA,IACAN,EAAKO,SAAW,IACpBP,EAAKO,SAAYC,KAAKC,MAAQN,EAASI,QAEvCJ,EAASI,QAAUC,KAAKC,MACxBC,sBAAsBJ,KAYxB,OATAK,EAAAA,EAAAA,YAAU,WACR,GAAKd,MAAAA,IAAAA,EAAYe,WAAY,OAAO,EACpCZ,EAAKO,QAAU,KACfD,IACAO,aAAaX,EAAMK,SACnBL,EAAMK,QAAUO,YAAW,WACzBV,GAASW,EAAAA,EAAAA,UAAS,OACjB,QACF,CAAClB,IACCA,MAAAA,GAAAA,EAAYe,WAEf,yBACEI,GAAG,QACHC,UAAWC,GAAAA,CAAW,4HAEtB,kBAAC,EAAAC,gBAAD,CAAiBC,KAAM,KAJzB,IAMGvB,MAAAA,OANH,EAMGA,EAAYe,YARmB","sources":["webpack://wyy/./src/components/Toast/Toast.tsx"],"sourcesContent":["import React, {\n  memo, useEffect, useRef, useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { IconCircleCheck } from '@tabler/icons';\nimport { setToast } from '@/reducers/mask/slice';\nimport './style.scss';\n\nexport default memo(() => {\n  const { toastTitle } = useSelector(({ mask }) => mask);\n  // const [time, setTime] = useState(1500);\n  const time = useRef(1500);\n  const timer = useRef();\n  const prevTime = useRef();\n  const dispatch = useDispatch();\n  const handleFadeout = () => {\n    if (time.current <= 0) return;\n    time.current -= (Date.now() - prevTime.current);\n\n    prevTime.current = Date.now();\n    requestAnimationFrame(handleFadeout);\n  };\n  // console.log('123123');\n  useEffect(() => {\n    if (!toastTitle?.toString()) return false;\n    time.current = 1500;\n    handleFadeout();\n    clearTimeout(timer.current);\n    timer.current = setTimeout(() => {\n      dispatch(setToast(''));\n    }, 1500);\n  }, [toastTitle]);\n  if (!toastTitle?.toString()) return null;\n  return (\n    <div\n      id=\"toast\"\n      className={classNames('absolute z-50 whitespace-nowrap px-4 inset-0 m-auto flex-center rounded-lg bg-black bg-opacity-80 text-gray-200 text-lg')}\n    >\n      <IconCircleCheck size={24} />\n      &nbsp;\n      {toastTitle?.toString()}\n    </div>\n  );\n});\n"],"names":["memo","toastTitle","useSelector","mask","time","useRef","timer","prevTime","dispatch","useDispatch","handleFadeout","current","Date","now","requestAnimationFrame","useEffect","toString","clearTimeout","setTimeout","setToast","id","className","classNames","IconCircleCheck","size"],"sourceRoot":""}